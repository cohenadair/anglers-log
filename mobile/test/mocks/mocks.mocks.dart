// ignore_for_file: directives_ordering,avoid_equals_and_hash_code_on_mutable_classes,lines_longer_than_80_chars,subtype_of_sealed_class,unnecessary_overrides,must_be_immutable,duplicate_ignore,invalid_implementation_override,deprecated_member_use
// Mocks generated by Mockito 5.4.0 from annotations
// in mobile/test/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i2;
import 'dart:convert' as _i57;
import 'dart:io' as _i56;
import 'dart:math' as _i61;
import 'dart:typed_data' as _i73;
import 'dart:ui' as _i77;

import 'package:device_info_plus/device_info_plus.dart' as _i6;
import 'package:file_picker/file_picker.dart' as _i80;
import 'package:flutter/material.dart' as _i58;
import 'package:flutter/services.dart' as _i64;
import 'package:geolocator/geolocator.dart' as _i75;
import 'package:google_sign_in/google_sign_in.dart' as _i55;
import 'package:googleapis/drive/v3.dart' as _i54;
import 'package:googleapis/shared.dart' as _i74;
import 'package:googleapis_auth/googleapis_auth.dart' as _i72;
import 'package:googleapis_auth/src/access_credentials.dart' as _i52;
import 'package:http/http.dart' as _i53;
import 'package:image_picker/image_picker.dart' as _i76;
import 'package:mapbox_gl/mapbox_gl.dart' as _i60;
import 'package:mapbox_gl_platform_interface/mapbox_gl_platform_interface.dart'
    as _i70;
import 'package:mobile/angler_manager.dart' as _i7;
import 'package:mobile/app_manager.dart' as _i3;
import 'package:mobile/atmosphere_fetcher.dart' as _i71;
import 'package:mobile/backup_restore_manager.dart' as _i8;
import 'package:mobile/bait_category_manager.dart' as _i9;
import 'package:mobile/bait_manager.dart' as _i10;
import 'package:mobile/body_of_water_manager.dart' as _i11;
import 'package:mobile/catch_manager.dart' as _i12;
import 'package:mobile/custom_entity_manager.dart' as _i13;
import 'package:mobile/database/legacy_importer.dart' as _i81;
import 'package:mobile/entity_manager.dart' as _i68;
import 'package:mobile/fishing_spot_manager.dart' as _i14;
import 'package:mobile/gps_trail_manager.dart' as _i15;
import 'package:mobile/image_manager.dart' as _i16;
import 'package:mobile/local_database_manager.dart' as _i4;
import 'package:mobile/location_monitor.dart' as _i17;
import 'package:mobile/log.dart' as _i78;
import 'package:mobile/method_manager.dart' as _i18;
import 'package:mobile/model/gen/anglerslog.pb.dart' as _i5;
import 'package:mobile/pages/manageable_list_page.dart' as _i84;
import 'package:mobile/poll_manager.dart' as _i19;
import 'package:mobile/preference_manager.dart' as _i79;
import 'package:mobile/properties_manager.dart' as _i20;
import 'package:mobile/report_manager.dart' as _i21;
import 'package:mobile/species_manager.dart' as _i22;
import 'package:mobile/subscription_manager.dart' as _i23;
import 'package:mobile/time_manager.dart' as _i24;
import 'package:mobile/trip_manager.dart' as _i25;
import 'package:mobile/user_preference_manager.dart' as _i26;
import 'package:mobile/utils/validator.dart' as _i82;
import 'package:mobile/water_clarity_manager.dart' as _i27;
import 'package:mobile/widgets/fetch_input_header.dart' as _i51;
import 'package:mobile/widgets/input_controller.dart' as _i67;
import 'package:mobile/widgets/quantity_picker_input.dart' as _i83;
import 'package:mobile/wrappers/crashlytics_wrapper.dart' as _i28;
import 'package:mobile/wrappers/device_info_wrapper.dart' as _i29;
import 'package:mobile/wrappers/drive_api_wrapper.dart' as _i30;
import 'package:mobile/wrappers/exif_wrapper.dart' as _i31;
import 'package:mobile/wrappers/file_picker_wrapper.dart' as _i33;
import 'package:mobile/wrappers/geolocator_wrapper.dart' as _i32;
import 'package:mobile/wrappers/google_sign_in_wrapper.dart' as _i34;
import 'package:mobile/wrappers/http_wrapper.dart' as _i35;
import 'package:mobile/wrappers/image_compress_wrapper.dart' as _i36;
import 'package:mobile/wrappers/image_picker_wrapper.dart' as _i37;
import 'package:mobile/wrappers/io_wrapper.dart' as _i38;
import 'package:mobile/wrappers/isolates_wrapper.dart' as _i39;
import 'package:mobile/wrappers/native_time_zone_wrapper.dart' as _i40;
import 'package:mobile/wrappers/package_info_wrapper.dart' as _i41;
import 'package:mobile/wrappers/path_provider_wrapper.dart' as _i42;
import 'package:mobile/wrappers/permission_handler_wrapper.dart' as _i43;
import 'package:mobile/wrappers/photo_manager_wrapper.dart' as _i44;
import 'package:mobile/wrappers/purchases_wrapper.dart' as _i45;
import 'package:mobile/wrappers/services_wrapper.dart' as _i46;
import 'package:mobile/wrappers/share_plus_wrapper.dart' as _i48;
import 'package:mobile/wrappers/shared_preferences_wrapper.dart' as _i47;
import 'package:mobile/wrappers/url_launcher_wrapper.dart' as _i49;
import 'package:mockito/mockito.dart' as _i1;
import 'package:native_exif/native_exif.dart' as _i59;
import 'package:package_info_plus/package_info_plus.dart' as _i62;
import 'package:photo_manager/photo_manager.dart' as _i65;
import 'package:protobuf/protobuf.dart' as _i69;
import 'package:purchases_flutter/purchases_flutter.dart' as _i63;
import 'package:sqflite/sqflite.dart' as _i66;
import 'package:timezone/timezone.dart' as _i50;

import 'mocks.dart' as _i85;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeStreamController_0<T> extends _i1.SmartFake
    implements _i2.StreamController<T> {
  _FakeStreamController_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAppManager_1 extends _i1.SmartFake implements _i3.AppManager {
  _FakeAppManager_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocalDatabaseManager_2 extends _i1.SmartFake
    implements _i4.LocalDatabaseManager {
  _FakeLocalDatabaseManager_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAngler_3 extends _i1.SmartFake implements _i5.Angler {
  _FakeAngler_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeId_4 extends _i1.SmartFake implements _i5.Id {
  _FakeId_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamSubscription_5<T> extends _i1.SmartFake
    implements _i2.StreamSubscription<T> {
  _FakeStreamSubscription_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAndroidBuildVersion_6 extends _i1.SmartFake
    implements _i6.AndroidBuildVersion {
  _FakeAndroidBuildVersion_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAndroidDisplayMetrics_7 extends _i1.SmartFake
    implements _i6.AndroidDisplayMetrics {
  _FakeAndroidDisplayMetrics_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAnglerManager_8 extends _i1.SmartFake implements _i7.AnglerManager {
  _FakeAnglerManager_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBackupRestoreManager_9 extends _i1.SmartFake
    implements _i8.BackupRestoreManager {
  _FakeBackupRestoreManager_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaitCategoryManager_10 extends _i1.SmartFake
    implements _i9.BaitCategoryManager {
  _FakeBaitCategoryManager_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaitManager_11 extends _i1.SmartFake implements _i10.BaitManager {
  _FakeBaitManager_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBodyOfWaterManager_12 extends _i1.SmartFake
    implements _i11.BodyOfWaterManager {
  _FakeBodyOfWaterManager_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCatchManager_13 extends _i1.SmartFake implements _i12.CatchManager {
  _FakeCatchManager_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCustomEntityManager_14 extends _i1.SmartFake
    implements _i13.CustomEntityManager {
  _FakeCustomEntityManager_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFishingSpotManager_15 extends _i1.SmartFake
    implements _i14.FishingSpotManager {
  _FakeFishingSpotManager_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGpsTrailManager_16 extends _i1.SmartFake
    implements _i15.GpsTrailManager {
  _FakeGpsTrailManager_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeImageManager_17 extends _i1.SmartFake implements _i16.ImageManager {
  _FakeImageManager_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocationMonitor_18 extends _i1.SmartFake
    implements _i17.LocationMonitor {
  _FakeLocationMonitor_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMethodManager_19 extends _i1.SmartFake
    implements _i18.MethodManager {
  _FakeMethodManager_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePollManager_20 extends _i1.SmartFake implements _i19.PollManager {
  _FakePollManager_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePropertiesManager_21 extends _i1.SmartFake
    implements _i20.PropertiesManager {
  _FakePropertiesManager_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReportManager_22 extends _i1.SmartFake
    implements _i21.ReportManager {
  _FakeReportManager_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSpeciesManager_23 extends _i1.SmartFake
    implements _i22.SpeciesManager {
  _FakeSpeciesManager_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSubscriptionManager_24 extends _i1.SmartFake
    implements _i23.SubscriptionManager {
  _FakeSubscriptionManager_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTimeManager_25 extends _i1.SmartFake implements _i24.TimeManager {
  _FakeTimeManager_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTripManager_26 extends _i1.SmartFake implements _i25.TripManager {
  _FakeTripManager_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserPreferenceManager_27 extends _i1.SmartFake
    implements _i26.UserPreferenceManager {
  _FakeUserPreferenceManager_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWaterClarityManager_28 extends _i1.SmartFake
    implements _i27.WaterClarityManager {
  _FakeWaterClarityManager_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCrashlyticsWrapper_29 extends _i1.SmartFake
    implements _i28.CrashlyticsWrapper {
  _FakeCrashlyticsWrapper_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeviceInfoWrapper_30 extends _i1.SmartFake
    implements _i29.DeviceInfoWrapper {
  _FakeDeviceInfoWrapper_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDriveApiWrapper_31 extends _i1.SmartFake
    implements _i30.DriveApiWrapper {
  _FakeDriveApiWrapper_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeExifWrapper_32 extends _i1.SmartFake implements _i31.ExifWrapper {
  _FakeExifWrapper_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGeolocatorWrapper_33 extends _i1.SmartFake
    implements _i32.GeolocatorWrapper {
  _FakeGeolocatorWrapper_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFilePickerWrapper_34 extends _i1.SmartFake
    implements _i33.FilePickerWrapper {
  _FakeFilePickerWrapper_34(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoogleSignInWrapper_35 extends _i1.SmartFake
    implements _i34.GoogleSignInWrapper {
  _FakeGoogleSignInWrapper_35(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpWrapper_36 extends _i1.SmartFake implements _i35.HttpWrapper {
  _FakeHttpWrapper_36(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeImageCompressWrapper_37 extends _i1.SmartFake
    implements _i36.ImageCompressWrapper {
  _FakeImageCompressWrapper_37(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeImagePickerWrapper_38 extends _i1.SmartFake
    implements _i37.ImagePickerWrapper {
  _FakeImagePickerWrapper_38(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIoWrapper_39 extends _i1.SmartFake implements _i38.IoWrapper {
  _FakeIoWrapper_39(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIsolatesWrapper_40 extends _i1.SmartFake
    implements _i39.IsolatesWrapper {
  _FakeIsolatesWrapper_40(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNativeTimeZoneWrapper_41 extends _i1.SmartFake
    implements _i40.NativeTimeZoneWrapper {
  _FakeNativeTimeZoneWrapper_41(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePackageInfoWrapper_42 extends _i1.SmartFake
    implements _i41.PackageInfoWrapper {
  _FakePackageInfoWrapper_42(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePathProviderWrapper_43 extends _i1.SmartFake
    implements _i42.PathProviderWrapper {
  _FakePathProviderWrapper_43(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePermissionHandlerWrapper_44 extends _i1.SmartFake
    implements _i43.PermissionHandlerWrapper {
  _FakePermissionHandlerWrapper_44(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePhotoManagerWrapper_45 extends _i1.SmartFake
    implements _i44.PhotoManagerWrapper {
  _FakePhotoManagerWrapper_45(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePurchasesWrapper_46 extends _i1.SmartFake
    implements _i45.PurchasesWrapper {
  _FakePurchasesWrapper_46(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeServicesWrapper_47 extends _i1.SmartFake
    implements _i46.ServicesWrapper {
  _FakeServicesWrapper_47(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSharedPreferencesWrapper_48 extends _i1.SmartFake
    implements _i47.SharedPreferencesWrapper {
  _FakeSharedPreferencesWrapper_48(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSharePlusWrapper_49 extends _i1.SmartFake
    implements _i48.SharePlusWrapper {
  _FakeSharePlusWrapper_49(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUrlLauncherWrapper_50 extends _i1.SmartFake
    implements _i49.UrlLauncherWrapper {
  _FakeUrlLauncherWrapper_50(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTZDateTime_51 extends _i1.SmartFake implements _i50.TZDateTime {
  _FakeTZDateTime_51(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFetchResult_52<T> extends _i1.SmartFake
    implements _i51.FetchResult<T> {
  _FakeFetchResult_52(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAccessCredentials_53 extends _i1.SmartFake
    implements _i52.AccessCredentials {
  _FakeAccessCredentials_53(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_54 extends _i1.SmartFake implements _i53.Response {
  _FakeResponse_54(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_55 extends _i1.SmartFake
    implements _i53.StreamedResponse {
  _FakeStreamedResponse_55(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaitCategory_56 extends _i1.SmartFake implements _i5.BaitCategory {
  _FakeBaitCategory_56(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBait_57 extends _i1.SmartFake implements _i5.Bait {
  _FakeBait_57(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBodyOfWater_58 extends _i1.SmartFake implements _i5.BodyOfWater {
  _FakeBodyOfWater_58(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCatch_59 extends _i1.SmartFake implements _i5.Catch {
  _FakeCatch_59(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCustomEntity_60 extends _i1.SmartFake implements _i5.CustomEntity {
  _FakeCustomEntity_60(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAboutResource_61 extends _i1.SmartFake
    implements _i54.AboutResource {
  _FakeAboutResource_61(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChangesResource_62 extends _i1.SmartFake
    implements _i54.ChangesResource {
  _FakeChangesResource_62(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChannelsResource_63 extends _i1.SmartFake
    implements _i54.ChannelsResource {
  _FakeChannelsResource_63(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCommentsResource_64 extends _i1.SmartFake
    implements _i54.CommentsResource {
  _FakeCommentsResource_64(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDrivesResource_65 extends _i1.SmartFake
    implements _i54.DrivesResource {
  _FakeDrivesResource_65(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFilesResource_66 extends _i1.SmartFake
    implements _i54.FilesResource {
  _FakeFilesResource_66(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePermissionsResource_67 extends _i1.SmartFake
    implements _i54.PermissionsResource {
  _FakePermissionsResource_67(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRepliesResource_68 extends _i1.SmartFake
    implements _i54.RepliesResource {
  _FakeRepliesResource_68(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRevisionsResource_69 extends _i1.SmartFake
    implements _i54.RevisionsResource {
  _FakeRevisionsResource_69(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTeamdrivesResource_70 extends _i1.SmartFake
    implements _i54.TeamdrivesResource {
  _FakeTeamdrivesResource_70(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFile_71 extends _i1.SmartFake implements _i54.File {
  _FakeFile_71(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGeneratedIds_72 extends _i1.SmartFake implements _i54.GeneratedIds {
  _FakeGeneratedIds_72(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeObject_73 extends _i1.SmartFake implements Object {
  _FakeObject_73(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFileList_74 extends _i1.SmartFake implements _i54.FileList {
  _FakeFileList_74(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLabelList_75 extends _i1.SmartFake implements _i54.LabelList {
  _FakeLabelList_75(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeModifyLabelsResponse_76 extends _i1.SmartFake
    implements _i54.ModifyLabelsResponse {
  _FakeModifyLabelsResponse_76(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDriveApi_77 extends _i1.SmartFake implements _i54.DriveApi {
  _FakeDriveApi_77(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFishingSpot_78 extends _i1.SmartFake implements _i5.FishingSpot {
  _FakeFishingSpot_78(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoogleSignInAuthentication_79 extends _i1.SmartFake
    implements _i55.GoogleSignInAuthentication {
  _FakeGoogleSignInAuthentication_79(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGpsTrail_80 extends _i1.SmartFake implements _i5.GpsTrail {
  _FakeGpsTrail_80(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFile_81 extends _i1.SmartFake implements _i56.File {
  _FakeFile_81(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEncoding_82 extends _i1.SmartFake implements _i57.Encoding {
  _FakeEncoding_82(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_83<T> extends _i1.SmartFake implements _i2.Future<T> {
  _FakeFuture_83(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMethod_84 extends _i1.SmartFake implements _i5.Method {
  _FakeMethod_84(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReport_85 extends _i1.SmartFake implements _i5.Report {
  _FakeReport_85(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSpecies_86 extends _i1.SmartFake implements _i5.Species {
  _FakeSpecies_86(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTimeZoneLocation_87 extends _i1.SmartFake
    implements _i24.TimeZoneLocation {
  _FakeTimeZoneLocation_87(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTimeOfDay_88 extends _i1.SmartFake implements _i58.TimeOfDay {
  _FakeTimeOfDay_88(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTimeZone_89 extends _i1.SmartFake implements _i50.TimeZone {
  _FakeTimeZone_89(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocation_90 extends _i1.SmartFake implements _i50.Location {
  _FakeLocation_90(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTrip_91 extends _i1.SmartFake implements _i5.Trip {
  _FakeTrip_91(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMeasurementSystem_92 extends _i1.SmartFake
    implements _i5.MeasurementSystem {
  _FakeMeasurementSystem_92(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUnit_93 extends _i1.SmartFake implements _i5.Unit {
  _FakeUnit_93(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMultiMeasurement_94 extends _i1.SmartFake
    implements _i5.MultiMeasurement {
  _FakeMultiMeasurement_94(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWaterClarity_95 extends _i1.SmartFake implements _i5.WaterClarity {
  _FakeWaterClarity_95(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAndroidDeviceInfo_96 extends _i1.SmartFake
    implements _i6.AndroidDeviceInfo {
  _FakeAndroidDeviceInfo_96(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIosDeviceInfo_97 extends _i1.SmartFake implements _i6.IosDeviceInfo {
  _FakeIosDeviceInfo_97(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeExif_98 extends _i1.SmartFake implements _i59.Exif {
  _FakeExif_98(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoogleSignIn_99 extends _i1.SmartFake implements _i55.GoogleSignIn {
  _FakeGoogleSignIn_99(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDirectory_100 extends _i1.SmartFake implements _i56.Directory {
  _FakeDirectory_100(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeArgumentCallbacks_101<T> extends _i1.SmartFake
    implements _i60.ArgumentCallbacks<T> {
  _FakeArgumentCallbacks_101(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSymbol_102 extends _i1.SmartFake implements _i60.Symbol {
  _FakeSymbol_102(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLatLng_103 extends _i1.SmartFake implements _i60.LatLng {
  _FakeLatLng_103(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLine_104 extends _i1.SmartFake implements _i60.Line {
  _FakeLine_104(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCircle_105 extends _i1.SmartFake implements _i60.Circle {
  _FakeCircle_105(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFill_106 extends _i1.SmartFake implements _i60.Fill {
  _FakeFill_106(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLatLngBounds_107 extends _i1.SmartFake implements _i60.LatLngBounds {
  _FakeLatLngBounds_107(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePoint_108<T extends num> extends _i1.SmartFake
    implements _i61.Point<T> {
  _FakePoint_108(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePackageInfo_109 extends _i1.SmartFake implements _i62.PackageInfo {
  _FakePackageInfo_109(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOfferings_110 extends _i1.SmartFake implements _i63.Offerings {
  _FakeOfferings_110(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCustomerInfo_111 extends _i1.SmartFake implements _i63.CustomerInfo {
  _FakeCustomerInfo_111(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLogInResult_112 extends _i1.SmartFake implements _i63.LogInResult {
  _FakeLogInResult_112(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMethodChannel_113 extends _i1.SmartFake
    implements _i64.MethodChannel {
  _FakeMethodChannel_113(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRequestType_114 extends _i1.SmartFake implements _i65.RequestType {
  _FakeRequestType_114(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePMFilter_115 extends _i1.SmartFake implements _i65.PMFilter {
  _FakePMFilter_115(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAssetPathEntity_116 extends _i1.SmartFake
    implements _i65.AssetPathEntity {
  _FakeAssetPathEntity_116(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabase_117 extends _i1.SmartFake implements _i66.Database {
  _FakeDatabase_117(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryCursor_118 extends _i1.SmartFake implements _i66.QueryCursor {
  _FakeQueryCursor_118(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBatch_119 extends _i1.SmartFake implements _i66.Batch {
  _FakeBatch_119(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUri_120 extends _i1.SmartFake implements Uri {
  _FakeUri_120(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFileStat_121 extends _i1.SmartFake implements _i56.FileStat {
  _FakeFileStat_121(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFileSystemEntity_122 extends _i1.SmartFake
    implements _i56.FileSystemEntity {
  _FakeFileSystemEntity_122(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$EntitlementInfoCopyWith_123<$Res> extends _i1.SmartFake
    implements _i63.$EntitlementInfoCopyWith<$Res> {
  _Fake$EntitlementInfoCopyWith_123(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$EntitlementInfosCopyWith_124<$Res> extends _i1.SmartFake
    implements _i63.$EntitlementInfosCopyWith<$Res> {
  _Fake$EntitlementInfosCopyWith_124(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMethodCodec_125 extends _i1.SmartFake implements _i64.MethodCodec {
  _FakeMethodCodec_125(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBinaryMessenger_126 extends _i1.SmartFake
    implements _i64.BinaryMessenger {
  _FakeBinaryMessenger_126(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$OfferingCopyWith_127<$Res> extends _i1.SmartFake
    implements _i63.$OfferingCopyWith<$Res> {
  _Fake$OfferingCopyWith_127(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$OfferingsCopyWith_128<$Res> extends _i1.SmartFake
    implements _i63.$OfferingsCopyWith<$Res> {
  _Fake$OfferingsCopyWith_128(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStoreProduct_129 extends _i1.SmartFake implements _i63.StoreProduct {
  _FakeStoreProduct_129(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$PackageCopyWith_130<$Res> extends _i1.SmartFake
    implements _i63.$PackageCopyWith<$Res> {
  _Fake$PackageCopyWith_130(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$StoreProductCopyWith_131<$Res> extends _i1.SmartFake
    implements _i63.$StoreProductCopyWith<$Res> {
  _Fake$StoreProductCopyWith_131(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSymbolOptions_132 extends _i1.SmartFake
    implements _i60.SymbolOptions {
  _FakeSymbolOptions_132(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEntitlementInfos_133 extends _i1.SmartFake
    implements _i63.EntitlementInfos {
  _FakeEntitlementInfos_133(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$CustomerInfoCopyWith_134<$Res> extends _i1.SmartFake
    implements _i63.$CustomerInfoCopyWith<$Res> {
  _Fake$CustomerInfoCopyWith_134(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSetInputController_135<T> extends _i1.SmartFake
    implements _i67.SetInputController<T> {
  _FakeSetInputController_135(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWidget_136 extends _i1.SmartFake implements _i58.Widget {
  _FakeWidget_136(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString(
          {_i58.DiagnosticLevel? minLevel = _i58.DiagnosticLevel.info}) =>
      super.toString();
}

/// A class which mocks [AnglerManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnglerManager extends _i1.Mock implements _i7.AnglerManager {
  MockAnglerManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get tableName => (super.noSuchMethod(
        Invocation.getter(#tableName),
        returnValue: '',
      ) as String);
  @override
  _i2.StreamController<_i68.EntityEvent<_i5.Angler>> get controller =>
      (super.noSuchMethod(
        Invocation.getter(#controller),
        returnValue: _FakeStreamController_0<_i68.EntityEvent<_i5.Angler>>(
          this,
          Invocation.getter(#controller),
        ),
      ) as _i2.StreamController<_i68.EntityEvent<_i5.Angler>>);
  @override
  Map<_i5.Id, _i5.Angler> get entities => (super.noSuchMethod(
        Invocation.getter(#entities),
        returnValue: <_i5.Id, _i5.Angler>{},
      ) as Map<_i5.Id, _i5.Angler>);
  @override
  _i3.AppManager get appManager => (super.noSuchMethod(
        Invocation.getter(#appManager),
        returnValue: _FakeAppManager_1(
          this,
          Invocation.getter(#appManager),
        ),
      ) as _i3.AppManager);
  @override
  _i4.LocalDatabaseManager get localDatabaseManager => (super.noSuchMethod(
        Invocation.getter(#localDatabaseManager),
        returnValue: _FakeLocalDatabaseManager_2(
          this,
          Invocation.getter(#localDatabaseManager),
        ),
      ) as _i4.LocalDatabaseManager);
  @override
  int get entityCount => (super.noSuchMethod(
        Invocation.getter(#entityCount),
        returnValue: 0,
      ) as int);
  @override
  bool get hasEntities => (super.noSuchMethod(
        Invocation.getter(#hasEntities),
        returnValue: false,
      ) as bool);
  @override
  _i2.Stream<_i68.EntityEvent<_i5.Angler>> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i2.Stream<_i68.EntityEvent<_i5.Angler>>.empty(),
      ) as _i2.Stream<_i68.EntityEvent<_i5.Angler>>);
  @override
  _i5.Angler entityFromBytes(List<int>? bytes) => (super.noSuchMethod(
        Invocation.method(
          #entityFromBytes,
          [bytes],
        ),
        returnValue: _FakeAngler_3(
          this,
          Invocation.method(
            #entityFromBytes,
            [bytes],
          ),
        ),
      ) as _i5.Angler);
  @override
  _i5.Id id(_i5.Angler? entity) => (super.noSuchMethod(
        Invocation.method(
          #id,
          [entity],
        ),
        returnValue: _FakeId_4(
          this,
          Invocation.method(
            #id,
            [entity],
          ),
        ),
      ) as _i5.Id);
  @override
  String name(_i5.Angler? entity) => (super.noSuchMethod(
        Invocation.method(
          #name,
          [entity],
        ),
        returnValue: '',
      ) as String);
  @override
  int numberOfCatches(_i5.Id? anglerId) => (super.noSuchMethod(
        Invocation.method(
          #numberOfCatches,
          [anglerId],
        ),
        returnValue: 0,
      ) as int);
  @override
  String deleteMessage(
    _i58.BuildContext? context,
    _i5.Angler? angler,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMessage,
          [
            context,
            angler,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  int Function(
    _i5.Angler,
    _i5.Angler,
  ) displayNameComparator(_i58.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #displayNameComparator,
          [context],
        ),
        returnValue: (
          _i5.Angler __p0,
          _i5.Angler __p1,
        ) =>
            0,
      ) as int Function(
        _i5.Angler,
        _i5.Angler,
      ));
  @override
  List<_i5.Angler> listSortedByDisplayName(
    _i58.BuildContext? context, {
    String? filter,
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listSortedByDisplayName,
          [context],
          {
            #filter: filter,
            #ids: ids,
          },
        ),
        returnValue: <_i5.Angler>[],
      ) as List<_i5.Angler>);
  @override
  String displayName(
    _i58.BuildContext? context,
    _i5.Angler? entity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #displayName,
          [
            context,
            entity,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  bool matchesFilter(
    _i5.Id? id,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #matchesFilter,
          [
            id,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool nameExists(String? name) => (super.noSuchMethod(
        Invocation.method(
          #nameExists,
          [name],
        ),
        returnValue: false,
      ) as bool);
  @override
  String? displayNameFromId(
    _i58.BuildContext? context,
    _i5.Id? id,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #displayNameFromId,
        [
          context,
          id,
        ],
      )) as String?);
  @override
  _i2.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  bool idsMatchesFilter(
    List<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchesFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  Set<_i5.Id> idSet({
    Iterable<_i5.Angler>? entities = const [],
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #idSet,
          [],
          {
            #entities: entities,
            #ids: ids,
          },
        ),
        returnValue: <_i5.Id>{},
      ) as Set<_i5.Id>);
  @override
  Map<String, _i5.Angler> uuidMap() => (super.noSuchMethod(
        Invocation.method(
          #uuidMap,
          [],
        ),
        returnValue: <String, _i5.Angler>{},
      ) as Map<String, _i5.Angler>);
  @override
  List<_i5.Angler> list([Iterable<_i5.Id>? ids = const []]) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [ids],
        ),
        returnValue: <_i5.Angler>[],
      ) as List<_i5.Angler>);
  @override
  List<_i5.Angler> filteredList(
    String? filter, [
    Iterable<_i5.Id>? ids = const [],
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #filteredList,
          [
            filter,
            ids,
          ],
        ),
        returnValue: <_i5.Angler>[],
      ) as List<_i5.Angler>);
  @override
  bool idsMatchFilter(
    Iterable<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool entityExists(_i5.Id? id) => (super.noSuchMethod(
        Invocation.method(
          #entityExists,
          [id],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i2.Future<bool> addOrUpdate(
    _i5.Angler? entity, {
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrUpdate,
          [entity],
          {#notify: notify},
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<int> updateAll({
    required bool Function(_i5.Angler)? where,
    required _i2.Future<void> Function(_i5.Angler)? apply,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAll,
          [],
          {
            #where: where,
            #apply: apply,
          },
        ),
        returnValue: _i2.Future<int>.value(0),
      ) as _i2.Future<int>);
  @override
  _i2.Future<bool> delete(
    _i5.Id? entityId, {
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [entityId],
          {#notify: notify},
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  int numberOf<E extends _i69.GeneratedMessage>(
    _i5.Id? id,
    List<E>? items,
    bool Function(E)? matches, [
    int Function(E)? quantity,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #numberOf,
          [
            id,
            items,
            matches,
            quantity,
          ],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.Angler>> listen(
          _i68.EntityListener<_i5.Angler>? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #listen,
          [listener],
        ),
        returnValue: _FakeStreamSubscription_5<_i68.EntityEvent<_i5.Angler>>(
          this,
          Invocation.method(
            #listen,
            [listener],
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.Angler>>);
  @override
  void notifyAdd(_i5.Angler? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyAdd,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyDelete(_i5.Angler? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyDelete,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyUpdate(_i5.Angler? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdate,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.Angler>> addTypedListener({
    void Function(_i5.Angler)? onAdd,
    void Function(_i5.Angler)? onDelete,
    void Function(_i5.Angler)? onUpdate,
    void Function()? onReset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTypedListener,
          [],
          {
            #onAdd: onAdd,
            #onDelete: onDelete,
            #onUpdate: onUpdate,
            #onReset: onReset,
          },
        ),
        returnValue: _FakeStreamSubscription_5<_i68.EntityEvent<_i5.Angler>>(
          this,
          Invocation.method(
            #addTypedListener,
            [],
            {
              #onAdd: onAdd,
              #onDelete: onDelete,
              #onUpdate: onUpdate,
              #onReset: onReset,
            },
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.Angler>>);
}

/// A class which mocks [AndroidBuildVersion].
///
/// See the documentation for Mockito's code generation for more information.
class MockAndroidBuildVersion extends _i1.Mock
    implements _i6.AndroidBuildVersion {
  MockAndroidBuildVersion() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get codename => (super.noSuchMethod(
        Invocation.getter(#codename),
        returnValue: '',
      ) as String);
  @override
  String get incremental => (super.noSuchMethod(
        Invocation.getter(#incremental),
        returnValue: '',
      ) as String);
  @override
  String get release => (super.noSuchMethod(
        Invocation.getter(#release),
        returnValue: '',
      ) as String);
  @override
  int get sdkInt => (super.noSuchMethod(
        Invocation.getter(#sdkInt),
        returnValue: 0,
      ) as int);
  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [AndroidDeviceInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockAndroidDeviceInfo extends _i1.Mock implements _i6.AndroidDeviceInfo {
  MockAndroidDeviceInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.AndroidBuildVersion get version => (super.noSuchMethod(
        Invocation.getter(#version),
        returnValue: _FakeAndroidBuildVersion_6(
          this,
          Invocation.getter(#version),
        ),
      ) as _i6.AndroidBuildVersion);
  @override
  String get board => (super.noSuchMethod(
        Invocation.getter(#board),
        returnValue: '',
      ) as String);
  @override
  String get bootloader => (super.noSuchMethod(
        Invocation.getter(#bootloader),
        returnValue: '',
      ) as String);
  @override
  String get brand => (super.noSuchMethod(
        Invocation.getter(#brand),
        returnValue: '',
      ) as String);
  @override
  String get device => (super.noSuchMethod(
        Invocation.getter(#device),
        returnValue: '',
      ) as String);
  @override
  String get display => (super.noSuchMethod(
        Invocation.getter(#display),
        returnValue: '',
      ) as String);
  @override
  String get fingerprint => (super.noSuchMethod(
        Invocation.getter(#fingerprint),
        returnValue: '',
      ) as String);
  @override
  String get hardware => (super.noSuchMethod(
        Invocation.getter(#hardware),
        returnValue: '',
      ) as String);
  @override
  String get host => (super.noSuchMethod(
        Invocation.getter(#host),
        returnValue: '',
      ) as String);
  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: '',
      ) as String);
  @override
  String get manufacturer => (super.noSuchMethod(
        Invocation.getter(#manufacturer),
        returnValue: '',
      ) as String);
  @override
  String get model => (super.noSuchMethod(
        Invocation.getter(#model),
        returnValue: '',
      ) as String);
  @override
  String get product => (super.noSuchMethod(
        Invocation.getter(#product),
        returnValue: '',
      ) as String);
  @override
  List<String> get supported32BitAbis => (super.noSuchMethod(
        Invocation.getter(#supported32BitAbis),
        returnValue: <String>[],
      ) as List<String>);
  @override
  List<String> get supported64BitAbis => (super.noSuchMethod(
        Invocation.getter(#supported64BitAbis),
        returnValue: <String>[],
      ) as List<String>);
  @override
  List<String> get supportedAbis => (super.noSuchMethod(
        Invocation.getter(#supportedAbis),
        returnValue: <String>[],
      ) as List<String>);
  @override
  String get tags => (super.noSuchMethod(
        Invocation.getter(#tags),
        returnValue: '',
      ) as String);
  @override
  String get type => (super.noSuchMethod(
        Invocation.getter(#type),
        returnValue: '',
      ) as String);
  @override
  bool get isPhysicalDevice => (super.noSuchMethod(
        Invocation.getter(#isPhysicalDevice),
        returnValue: false,
      ) as bool);
  @override
  List<String> get systemFeatures => (super.noSuchMethod(
        Invocation.getter(#systemFeatures),
        returnValue: <String>[],
      ) as List<String>);
  @override
  _i6.AndroidDisplayMetrics get displayMetrics => (super.noSuchMethod(
        Invocation.getter(#displayMetrics),
        returnValue: _FakeAndroidDisplayMetrics_7(
          this,
          Invocation.getter(#displayMetrics),
        ),
      ) as _i6.AndroidDisplayMetrics);
  @override
  String get serialNumber => (super.noSuchMethod(
        Invocation.getter(#serialNumber),
        returnValue: '',
      ) as String);
  @override
  Map<String, dynamic> get data => (super.noSuchMethod(
        Invocation.getter(#data),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [AppManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppManager extends _i1.Mock implements _i3.AppManager {
  MockAppManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.AnglerManager get anglerManager => (super.noSuchMethod(
        Invocation.getter(#anglerManager),
        returnValue: _FakeAnglerManager_8(
          this,
          Invocation.getter(#anglerManager),
        ),
      ) as _i7.AnglerManager);
  @override
  _i8.BackupRestoreManager get backupRestoreManager => (super.noSuchMethod(
        Invocation.getter(#backupRestoreManager),
        returnValue: _FakeBackupRestoreManager_9(
          this,
          Invocation.getter(#backupRestoreManager),
        ),
      ) as _i8.BackupRestoreManager);
  @override
  _i9.BaitCategoryManager get baitCategoryManager => (super.noSuchMethod(
        Invocation.getter(#baitCategoryManager),
        returnValue: _FakeBaitCategoryManager_10(
          this,
          Invocation.getter(#baitCategoryManager),
        ),
      ) as _i9.BaitCategoryManager);
  @override
  _i10.BaitManager get baitManager => (super.noSuchMethod(
        Invocation.getter(#baitManager),
        returnValue: _FakeBaitManager_11(
          this,
          Invocation.getter(#baitManager),
        ),
      ) as _i10.BaitManager);
  @override
  _i11.BodyOfWaterManager get bodyOfWaterManager => (super.noSuchMethod(
        Invocation.getter(#bodyOfWaterManager),
        returnValue: _FakeBodyOfWaterManager_12(
          this,
          Invocation.getter(#bodyOfWaterManager),
        ),
      ) as _i11.BodyOfWaterManager);
  @override
  _i12.CatchManager get catchManager => (super.noSuchMethod(
        Invocation.getter(#catchManager),
        returnValue: _FakeCatchManager_13(
          this,
          Invocation.getter(#catchManager),
        ),
      ) as _i12.CatchManager);
  @override
  _i13.CustomEntityManager get customEntityManager => (super.noSuchMethod(
        Invocation.getter(#customEntityManager),
        returnValue: _FakeCustomEntityManager_14(
          this,
          Invocation.getter(#customEntityManager),
        ),
      ) as _i13.CustomEntityManager);
  @override
  _i14.FishingSpotManager get fishingSpotManager => (super.noSuchMethod(
        Invocation.getter(#fishingSpotManager),
        returnValue: _FakeFishingSpotManager_15(
          this,
          Invocation.getter(#fishingSpotManager),
        ),
      ) as _i14.FishingSpotManager);
  @override
  _i15.GpsTrailManager get gpsTrailManager => (super.noSuchMethod(
        Invocation.getter(#gpsTrailManager),
        returnValue: _FakeGpsTrailManager_16(
          this,
          Invocation.getter(#gpsTrailManager),
        ),
      ) as _i15.GpsTrailManager);
  @override
  _i16.ImageManager get imageManager => (super.noSuchMethod(
        Invocation.getter(#imageManager),
        returnValue: _FakeImageManager_17(
          this,
          Invocation.getter(#imageManager),
        ),
      ) as _i16.ImageManager);
  @override
  _i4.LocalDatabaseManager get localDatabaseManager => (super.noSuchMethod(
        Invocation.getter(#localDatabaseManager),
        returnValue: _FakeLocalDatabaseManager_2(
          this,
          Invocation.getter(#localDatabaseManager),
        ),
      ) as _i4.LocalDatabaseManager);
  @override
  _i17.LocationMonitor get locationMonitor => (super.noSuchMethod(
        Invocation.getter(#locationMonitor),
        returnValue: _FakeLocationMonitor_18(
          this,
          Invocation.getter(#locationMonitor),
        ),
      ) as _i17.LocationMonitor);
  @override
  _i18.MethodManager get methodManager => (super.noSuchMethod(
        Invocation.getter(#methodManager),
        returnValue: _FakeMethodManager_19(
          this,
          Invocation.getter(#methodManager),
        ),
      ) as _i18.MethodManager);
  @override
  _i19.PollManager get pollManager => (super.noSuchMethod(
        Invocation.getter(#pollManager),
        returnValue: _FakePollManager_20(
          this,
          Invocation.getter(#pollManager),
        ),
      ) as _i19.PollManager);
  @override
  _i20.PropertiesManager get propertiesManager => (super.noSuchMethod(
        Invocation.getter(#propertiesManager),
        returnValue: _FakePropertiesManager_21(
          this,
          Invocation.getter(#propertiesManager),
        ),
      ) as _i20.PropertiesManager);
  @override
  _i21.ReportManager get reportManager => (super.noSuchMethod(
        Invocation.getter(#reportManager),
        returnValue: _FakeReportManager_22(
          this,
          Invocation.getter(#reportManager),
        ),
      ) as _i21.ReportManager);
  @override
  _i22.SpeciesManager get speciesManager => (super.noSuchMethod(
        Invocation.getter(#speciesManager),
        returnValue: _FakeSpeciesManager_23(
          this,
          Invocation.getter(#speciesManager),
        ),
      ) as _i22.SpeciesManager);
  @override
  _i23.SubscriptionManager get subscriptionManager => (super.noSuchMethod(
        Invocation.getter(#subscriptionManager),
        returnValue: _FakeSubscriptionManager_24(
          this,
          Invocation.getter(#subscriptionManager),
        ),
      ) as _i23.SubscriptionManager);
  @override
  _i24.TimeManager get timeManager => (super.noSuchMethod(
        Invocation.getter(#timeManager),
        returnValue: _FakeTimeManager_25(
          this,
          Invocation.getter(#timeManager),
        ),
      ) as _i24.TimeManager);
  @override
  _i25.TripManager get tripManager => (super.noSuchMethod(
        Invocation.getter(#tripManager),
        returnValue: _FakeTripManager_26(
          this,
          Invocation.getter(#tripManager),
        ),
      ) as _i25.TripManager);
  @override
  _i26.UserPreferenceManager get userPreferenceManager => (super.noSuchMethod(
        Invocation.getter(#userPreferenceManager),
        returnValue: _FakeUserPreferenceManager_27(
          this,
          Invocation.getter(#userPreferenceManager),
        ),
      ) as _i26.UserPreferenceManager);
  @override
  _i27.WaterClarityManager get waterClarityManager => (super.noSuchMethod(
        Invocation.getter(#waterClarityManager),
        returnValue: _FakeWaterClarityManager_28(
          this,
          Invocation.getter(#waterClarityManager),
        ),
      ) as _i27.WaterClarityManager);
  @override
  _i28.CrashlyticsWrapper get crashlyticsWrapper => (super.noSuchMethod(
        Invocation.getter(#crashlyticsWrapper),
        returnValue: _FakeCrashlyticsWrapper_29(
          this,
          Invocation.getter(#crashlyticsWrapper),
        ),
      ) as _i28.CrashlyticsWrapper);
  @override
  _i29.DeviceInfoWrapper get deviceInfoWrapper => (super.noSuchMethod(
        Invocation.getter(#deviceInfoWrapper),
        returnValue: _FakeDeviceInfoWrapper_30(
          this,
          Invocation.getter(#deviceInfoWrapper),
        ),
      ) as _i29.DeviceInfoWrapper);
  @override
  _i30.DriveApiWrapper get driveApiWrapper => (super.noSuchMethod(
        Invocation.getter(#driveApiWrapper),
        returnValue: _FakeDriveApiWrapper_31(
          this,
          Invocation.getter(#driveApiWrapper),
        ),
      ) as _i30.DriveApiWrapper);
  @override
  _i31.ExifWrapper get exifWrapper => (super.noSuchMethod(
        Invocation.getter(#exifWrapper),
        returnValue: _FakeExifWrapper_32(
          this,
          Invocation.getter(#exifWrapper),
        ),
      ) as _i31.ExifWrapper);
  @override
  _i32.GeolocatorWrapper get geolocatorWrapper => (super.noSuchMethod(
        Invocation.getter(#geolocatorWrapper),
        returnValue: _FakeGeolocatorWrapper_33(
          this,
          Invocation.getter(#geolocatorWrapper),
        ),
      ) as _i32.GeolocatorWrapper);
  @override
  _i33.FilePickerWrapper get filePickerWrapper => (super.noSuchMethod(
        Invocation.getter(#filePickerWrapper),
        returnValue: _FakeFilePickerWrapper_34(
          this,
          Invocation.getter(#filePickerWrapper),
        ),
      ) as _i33.FilePickerWrapper);
  @override
  _i34.GoogleSignInWrapper get googleSignInWrapper => (super.noSuchMethod(
        Invocation.getter(#googleSignInWrapper),
        returnValue: _FakeGoogleSignInWrapper_35(
          this,
          Invocation.getter(#googleSignInWrapper),
        ),
      ) as _i34.GoogleSignInWrapper);
  @override
  _i35.HttpWrapper get httpWrapper => (super.noSuchMethod(
        Invocation.getter(#httpWrapper),
        returnValue: _FakeHttpWrapper_36(
          this,
          Invocation.getter(#httpWrapper),
        ),
      ) as _i35.HttpWrapper);
  @override
  _i36.ImageCompressWrapper get imageCompressWrapper => (super.noSuchMethod(
        Invocation.getter(#imageCompressWrapper),
        returnValue: _FakeImageCompressWrapper_37(
          this,
          Invocation.getter(#imageCompressWrapper),
        ),
      ) as _i36.ImageCompressWrapper);
  @override
  _i37.ImagePickerWrapper get imagePickerWrapper => (super.noSuchMethod(
        Invocation.getter(#imagePickerWrapper),
        returnValue: _FakeImagePickerWrapper_38(
          this,
          Invocation.getter(#imagePickerWrapper),
        ),
      ) as _i37.ImagePickerWrapper);
  @override
  _i38.IoWrapper get ioWrapper => (super.noSuchMethod(
        Invocation.getter(#ioWrapper),
        returnValue: _FakeIoWrapper_39(
          this,
          Invocation.getter(#ioWrapper),
        ),
      ) as _i38.IoWrapper);
  @override
  _i39.IsolatesWrapper get isolatesWrapper => (super.noSuchMethod(
        Invocation.getter(#isolatesWrapper),
        returnValue: _FakeIsolatesWrapper_40(
          this,
          Invocation.getter(#isolatesWrapper),
        ),
      ) as _i39.IsolatesWrapper);
  @override
  _i40.NativeTimeZoneWrapper get nativeTimeZoneWrapper => (super.noSuchMethod(
        Invocation.getter(#nativeTimeZoneWrapper),
        returnValue: _FakeNativeTimeZoneWrapper_41(
          this,
          Invocation.getter(#nativeTimeZoneWrapper),
        ),
      ) as _i40.NativeTimeZoneWrapper);
  @override
  _i41.PackageInfoWrapper get packageInfoWrapper => (super.noSuchMethod(
        Invocation.getter(#packageInfoWrapper),
        returnValue: _FakePackageInfoWrapper_42(
          this,
          Invocation.getter(#packageInfoWrapper),
        ),
      ) as _i41.PackageInfoWrapper);
  @override
  _i42.PathProviderWrapper get pathProviderWrapper => (super.noSuchMethod(
        Invocation.getter(#pathProviderWrapper),
        returnValue: _FakePathProviderWrapper_43(
          this,
          Invocation.getter(#pathProviderWrapper),
        ),
      ) as _i42.PathProviderWrapper);
  @override
  _i43.PermissionHandlerWrapper get permissionHandlerWrapper =>
      (super.noSuchMethod(
        Invocation.getter(#permissionHandlerWrapper),
        returnValue: _FakePermissionHandlerWrapper_44(
          this,
          Invocation.getter(#permissionHandlerWrapper),
        ),
      ) as _i43.PermissionHandlerWrapper);
  @override
  _i44.PhotoManagerWrapper get photoManagerWrapper => (super.noSuchMethod(
        Invocation.getter(#photoManagerWrapper),
        returnValue: _FakePhotoManagerWrapper_45(
          this,
          Invocation.getter(#photoManagerWrapper),
        ),
      ) as _i44.PhotoManagerWrapper);
  @override
  _i45.PurchasesWrapper get purchasesWrapper => (super.noSuchMethod(
        Invocation.getter(#purchasesWrapper),
        returnValue: _FakePurchasesWrapper_46(
          this,
          Invocation.getter(#purchasesWrapper),
        ),
      ) as _i45.PurchasesWrapper);
  @override
  _i46.ServicesWrapper get servicesWrapper => (super.noSuchMethod(
        Invocation.getter(#servicesWrapper),
        returnValue: _FakeServicesWrapper_47(
          this,
          Invocation.getter(#servicesWrapper),
        ),
      ) as _i46.ServicesWrapper);
  @override
  _i47.SharedPreferencesWrapper get sharedPreferencesWrapper =>
      (super.noSuchMethod(
        Invocation.getter(#sharedPreferencesWrapper),
        returnValue: _FakeSharedPreferencesWrapper_48(
          this,
          Invocation.getter(#sharedPreferencesWrapper),
        ),
      ) as _i47.SharedPreferencesWrapper);
  @override
  _i48.SharePlusWrapper get sharePlusWrapper => (super.noSuchMethod(
        Invocation.getter(#sharePlusWrapper),
        returnValue: _FakeSharePlusWrapper_49(
          this,
          Invocation.getter(#sharePlusWrapper),
        ),
      ) as _i48.SharePlusWrapper);
  @override
  _i49.UrlLauncherWrapper get urlLauncherWrapper => (super.noSuchMethod(
        Invocation.getter(#urlLauncherWrapper),
        returnValue: _FakeUrlLauncherWrapper_50(
          this,
          Invocation.getter(#urlLauncherWrapper),
        ),
      ) as _i49.UrlLauncherWrapper);
  @override
  _i2.Future<void> initialize({bool? isStartup = true}) => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
          {#isStartup: isStartup},
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
}

/// A class which mocks [ArgumentCallbacks].
///
/// See the documentation for Mockito's code generation for more information.
class MockArgumentCallbacks<T> extends _i1.Mock
    implements _i60.ArgumentCallbacks<T> {
  MockArgumentCallbacks() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isEmpty => (super.noSuchMethod(
        Invocation.getter(#isEmpty),
        returnValue: false,
      ) as bool);
  @override
  bool get isNotEmpty => (super.noSuchMethod(
        Invocation.getter(#isNotEmpty),
        returnValue: false,
      ) as bool);
  @override
  void call(T? argument) => super.noSuchMethod(
        Invocation.method(
          #call,
          [argument],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void add(_i70.ArgumentCallback<T>? callback) => super.noSuchMethod(
        Invocation.method(
          #add,
          [callback],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void remove(_i70.ArgumentCallback<T>? callback) => super.noSuchMethod(
        Invocation.method(
          #remove,
          [callback],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void clear() => super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AtmosphereFetcher].
///
/// See the documentation for Mockito's code generation for more information.
class MockAtmosphereFetcher extends _i1.Mock implements _i71.AtmosphereFetcher {
  MockAtmosphereFetcher() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.AppManager get appManager => (super.noSuchMethod(
        Invocation.getter(#appManager),
        returnValue: _FakeAppManager_1(
          this,
          Invocation.getter(#appManager),
        ),
      ) as _i3.AppManager);
  @override
  _i50.TZDateTime get dateTime => (super.noSuchMethod(
        Invocation.getter(#dateTime),
        returnValue: _FakeTZDateTime_51(
          this,
          Invocation.getter(#dateTime),
        ),
      ) as _i50.TZDateTime);
  @override
  _i2.Future<_i51.FetchResult<_i5.Atmosphere?>> fetch() => (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [],
        ),
        returnValue: _i2.Future<_i51.FetchResult<_i5.Atmosphere?>>.value(
            _FakeFetchResult_52<_i5.Atmosphere?>(
          this,
          Invocation.method(
            #fetch,
            [],
          ),
        )),
      ) as _i2.Future<_i51.FetchResult<_i5.Atmosphere?>>);
  @override
  _i2.Future<Map<String, dynamic>?> get(String? elements) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [elements],
        ),
        returnValue: _i2.Future<Map<String, dynamic>?>.value(),
      ) as _i2.Future<Map<String, dynamic>?>);
}

/// A class which mocks [AuthClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthClient extends _i1.Mock implements _i72.AuthClient {
  MockAuthClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i52.AccessCredentials get credentials => (super.noSuchMethod(
        Invocation.getter(#credentials),
        returnValue: _FakeAccessCredentials_53(
          this,
          Invocation.getter(#credentials),
        ),
      ) as _i52.AccessCredentials);
  @override
  _i2.Future<_i53.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i2.Future<_i53.Response>.value(_FakeResponse_54(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i2.Future<_i53.Response>);
  @override
  _i2.Future<_i53.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i2.Future<_i53.Response>.value(_FakeResponse_54(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i2.Future<_i53.Response>);
  @override
  _i2.Future<_i53.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i57.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i2.Future<_i53.Response>.value(_FakeResponse_54(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i2.Future<_i53.Response>);
  @override
  _i2.Future<_i53.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i57.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i2.Future<_i53.Response>.value(_FakeResponse_54(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i2.Future<_i53.Response>);
  @override
  _i2.Future<_i53.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i57.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i2.Future<_i53.Response>.value(_FakeResponse_54(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i2.Future<_i53.Response>);
  @override
  _i2.Future<_i53.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i57.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i2.Future<_i53.Response>.value(_FakeResponse_54(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i2.Future<_i53.Response>);
  @override
  _i2.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i2.Future<String>.value(''),
      ) as _i2.Future<String>);
  @override
  _i2.Future<_i73.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i2.Future<_i73.Uint8List>.value(_i73.Uint8List(0)),
      ) as _i2.Future<_i73.Uint8List>);
  @override
  _i2.Future<_i53.StreamedResponse> send(_i53.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i2.Future<_i53.StreamedResponse>.value(_FakeStreamedResponse_55(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i2.Future<_i53.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [BackupRestoreManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockBackupRestoreManager extends _i1.Mock
    implements _i8.BackupRestoreManager {
  MockBackupRestoreManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Stream<_i8.BackupRestoreAuthState> get authStream => (super.noSuchMethod(
        Invocation.getter(#authStream),
        returnValue: _i2.Stream<_i8.BackupRestoreAuthState>.empty(),
      ) as _i2.Stream<_i8.BackupRestoreAuthState>);
  @override
  _i2.Stream<_i8.BackupRestoreProgress> get progressStream =>
      (super.noSuchMethod(
        Invocation.getter(#progressStream),
        returnValue: _i2.Stream<_i8.BackupRestoreProgress>.empty(),
      ) as _i2.Stream<_i8.BackupRestoreProgress>);
  @override
  bool get isSignedIn => (super.noSuchMethod(
        Invocation.getter(#isSignedIn),
        returnValue: false,
      ) as bool);
  @override
  bool get isInProgress => (super.noSuchMethod(
        Invocation.getter(#isInProgress),
        returnValue: false,
      ) as bool);
  @override
  _i2.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> backup() => (super.noSuchMethod(
        Invocation.method(
          #backup,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> restore() => (super.noSuchMethod(
        Invocation.method(
          #restore,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
}

/// A class which mocks [BaitCategoryManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockBaitCategoryManager extends _i1.Mock
    implements _i9.BaitCategoryManager {
  MockBaitCategoryManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get tableName => (super.noSuchMethod(
        Invocation.getter(#tableName),
        returnValue: '',
      ) as String);
  @override
  _i2.StreamController<_i68.EntityEvent<_i5.BaitCategory>> get controller =>
      (super.noSuchMethod(
        Invocation.getter(#controller),
        returnValue:
            _FakeStreamController_0<_i68.EntityEvent<_i5.BaitCategory>>(
          this,
          Invocation.getter(#controller),
        ),
      ) as _i2.StreamController<_i68.EntityEvent<_i5.BaitCategory>>);
  @override
  Map<_i5.Id, _i5.BaitCategory> get entities => (super.noSuchMethod(
        Invocation.getter(#entities),
        returnValue: <_i5.Id, _i5.BaitCategory>{},
      ) as Map<_i5.Id, _i5.BaitCategory>);
  @override
  _i3.AppManager get appManager => (super.noSuchMethod(
        Invocation.getter(#appManager),
        returnValue: _FakeAppManager_1(
          this,
          Invocation.getter(#appManager),
        ),
      ) as _i3.AppManager);
  @override
  _i4.LocalDatabaseManager get localDatabaseManager => (super.noSuchMethod(
        Invocation.getter(#localDatabaseManager),
        returnValue: _FakeLocalDatabaseManager_2(
          this,
          Invocation.getter(#localDatabaseManager),
        ),
      ) as _i4.LocalDatabaseManager);
  @override
  int get entityCount => (super.noSuchMethod(
        Invocation.getter(#entityCount),
        returnValue: 0,
      ) as int);
  @override
  bool get hasEntities => (super.noSuchMethod(
        Invocation.getter(#hasEntities),
        returnValue: false,
      ) as bool);
  @override
  _i2.Stream<_i68.EntityEvent<_i5.BaitCategory>> get stream =>
      (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i2.Stream<_i68.EntityEvent<_i5.BaitCategory>>.empty(),
      ) as _i2.Stream<_i68.EntityEvent<_i5.BaitCategory>>);
  @override
  _i5.BaitCategory entityFromBytes(List<int>? bytes) => (super.noSuchMethod(
        Invocation.method(
          #entityFromBytes,
          [bytes],
        ),
        returnValue: _FakeBaitCategory_56(
          this,
          Invocation.method(
            #entityFromBytes,
            [bytes],
          ),
        ),
      ) as _i5.BaitCategory);
  @override
  _i5.Id id(_i5.BaitCategory? entity) => (super.noSuchMethod(
        Invocation.method(
          #id,
          [entity],
        ),
        returnValue: _FakeId_4(
          this,
          Invocation.method(
            #id,
            [entity],
          ),
        ),
      ) as _i5.Id);
  @override
  String name(_i5.BaitCategory? entity) => (super.noSuchMethod(
        Invocation.method(
          #name,
          [entity],
        ),
        returnValue: '',
      ) as String);
  @override
  int numberOfBaits(_i5.Id? baitCategoryId) => (super.noSuchMethod(
        Invocation.method(
          #numberOfBaits,
          [baitCategoryId],
        ),
        returnValue: 0,
      ) as int);
  @override
  String deleteMessage(
    _i58.BuildContext? context,
    _i5.BaitCategory? baitCategory,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMessage,
          [
            context,
            baitCategory,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  int Function(
    _i5.BaitCategory,
    _i5.BaitCategory,
  ) displayNameComparator(_i58.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #displayNameComparator,
          [context],
        ),
        returnValue: (
          _i5.BaitCategory __p0,
          _i5.BaitCategory __p1,
        ) =>
            0,
      ) as int Function(
        _i5.BaitCategory,
        _i5.BaitCategory,
      ));
  @override
  List<_i5.BaitCategory> listSortedByDisplayName(
    _i58.BuildContext? context, {
    String? filter,
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listSortedByDisplayName,
          [context],
          {
            #filter: filter,
            #ids: ids,
          },
        ),
        returnValue: <_i5.BaitCategory>[],
      ) as List<_i5.BaitCategory>);
  @override
  String displayName(
    _i58.BuildContext? context,
    _i5.BaitCategory? entity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #displayName,
          [
            context,
            entity,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  bool matchesFilter(
    _i5.Id? id,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #matchesFilter,
          [
            id,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool nameExists(String? name) => (super.noSuchMethod(
        Invocation.method(
          #nameExists,
          [name],
        ),
        returnValue: false,
      ) as bool);
  @override
  String? displayNameFromId(
    _i58.BuildContext? context,
    _i5.Id? id,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #displayNameFromId,
        [
          context,
          id,
        ],
      )) as String?);
  @override
  _i2.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  bool idsMatchesFilter(
    List<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchesFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  Set<_i5.Id> idSet({
    Iterable<_i5.BaitCategory>? entities = const [],
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #idSet,
          [],
          {
            #entities: entities,
            #ids: ids,
          },
        ),
        returnValue: <_i5.Id>{},
      ) as Set<_i5.Id>);
  @override
  Map<String, _i5.BaitCategory> uuidMap() => (super.noSuchMethod(
        Invocation.method(
          #uuidMap,
          [],
        ),
        returnValue: <String, _i5.BaitCategory>{},
      ) as Map<String, _i5.BaitCategory>);
  @override
  List<_i5.BaitCategory> list([Iterable<_i5.Id>? ids = const []]) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [ids],
        ),
        returnValue: <_i5.BaitCategory>[],
      ) as List<_i5.BaitCategory>);
  @override
  List<_i5.BaitCategory> filteredList(
    String? filter, [
    Iterable<_i5.Id>? ids = const [],
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #filteredList,
          [
            filter,
            ids,
          ],
        ),
        returnValue: <_i5.BaitCategory>[],
      ) as List<_i5.BaitCategory>);
  @override
  bool idsMatchFilter(
    Iterable<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool entityExists(_i5.Id? id) => (super.noSuchMethod(
        Invocation.method(
          #entityExists,
          [id],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i2.Future<bool> addOrUpdate(
    _i5.BaitCategory? entity, {
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrUpdate,
          [entity],
          {#notify: notify},
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<int> updateAll({
    required bool Function(_i5.BaitCategory)? where,
    required _i2.Future<void> Function(_i5.BaitCategory)? apply,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAll,
          [],
          {
            #where: where,
            #apply: apply,
          },
        ),
        returnValue: _i2.Future<int>.value(0),
      ) as _i2.Future<int>);
  @override
  _i2.Future<bool> delete(
    _i5.Id? entityId, {
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [entityId],
          {#notify: notify},
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  int numberOf<E extends _i69.GeneratedMessage>(
    _i5.Id? id,
    List<E>? items,
    bool Function(E)? matches, [
    int Function(E)? quantity,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #numberOf,
          [
            id,
            items,
            matches,
            quantity,
          ],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.BaitCategory>> listen(
          _i68.EntityListener<_i5.BaitCategory>? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #listen,
          [listener],
        ),
        returnValue:
            _FakeStreamSubscription_5<_i68.EntityEvent<_i5.BaitCategory>>(
          this,
          Invocation.method(
            #listen,
            [listener],
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.BaitCategory>>);
  @override
  void notifyAdd(_i5.BaitCategory? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyAdd,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyDelete(_i5.BaitCategory? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyDelete,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyUpdate(_i5.BaitCategory? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdate,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.BaitCategory>> addTypedListener({
    void Function(_i5.BaitCategory)? onAdd,
    void Function(_i5.BaitCategory)? onDelete,
    void Function(_i5.BaitCategory)? onUpdate,
    void Function()? onReset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTypedListener,
          [],
          {
            #onAdd: onAdd,
            #onDelete: onDelete,
            #onUpdate: onUpdate,
            #onReset: onReset,
          },
        ),
        returnValue:
            _FakeStreamSubscription_5<_i68.EntityEvent<_i5.BaitCategory>>(
          this,
          Invocation.method(
            #addTypedListener,
            [],
            {
              #onAdd: onAdd,
              #onDelete: onDelete,
              #onUpdate: onUpdate,
              #onReset: onReset,
            },
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.BaitCategory>>);
}

/// A class which mocks [BaitManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockBaitManager extends _i1.Mock implements _i10.BaitManager {
  MockBaitManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get tableName => (super.noSuchMethod(
        Invocation.getter(#tableName),
        returnValue: '',
      ) as String);
  @override
  int Function(
    _i5.BaitAttachment,
    _i5.BaitAttachment,
  ) get attachmentComparator => (super.noSuchMethod(
        Invocation.getter(#attachmentComparator),
        returnValue: (
          _i5.BaitAttachment __p0,
          _i5.BaitAttachment __p1,
        ) =>
            0,
      ) as int Function(
        _i5.BaitAttachment,
        _i5.BaitAttachment,
      ));
  @override
  _i2.StreamController<_i68.EntityEvent<_i5.Bait>> get controller =>
      (super.noSuchMethod(
        Invocation.getter(#controller),
        returnValue: _FakeStreamController_0<_i68.EntityEvent<_i5.Bait>>(
          this,
          Invocation.getter(#controller),
        ),
      ) as _i2.StreamController<_i68.EntityEvent<_i5.Bait>>);
  @override
  Map<_i5.Id, _i5.Bait> get entities => (super.noSuchMethod(
        Invocation.getter(#entities),
        returnValue: <_i5.Id, _i5.Bait>{},
      ) as Map<_i5.Id, _i5.Bait>);
  @override
  _i3.AppManager get appManager => (super.noSuchMethod(
        Invocation.getter(#appManager),
        returnValue: _FakeAppManager_1(
          this,
          Invocation.getter(#appManager),
        ),
      ) as _i3.AppManager);
  @override
  _i4.LocalDatabaseManager get localDatabaseManager => (super.noSuchMethod(
        Invocation.getter(#localDatabaseManager),
        returnValue: _FakeLocalDatabaseManager_2(
          this,
          Invocation.getter(#localDatabaseManager),
        ),
      ) as _i4.LocalDatabaseManager);
  @override
  int get entityCount => (super.noSuchMethod(
        Invocation.getter(#entityCount),
        returnValue: 0,
      ) as int);
  @override
  bool get hasEntities => (super.noSuchMethod(
        Invocation.getter(#hasEntities),
        returnValue: false,
      ) as bool);
  @override
  _i2.Stream<_i68.EntityEvent<_i5.Bait>> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i2.Stream<_i68.EntityEvent<_i5.Bait>>.empty(),
      ) as _i2.Stream<_i68.EntityEvent<_i5.Bait>>);
  @override
  _i5.Bait entityFromBytes(List<int>? bytes) => (super.noSuchMethod(
        Invocation.method(
          #entityFromBytes,
          [bytes],
        ),
        returnValue: _FakeBait_57(
          this,
          Invocation.method(
            #entityFromBytes,
            [bytes],
          ),
        ),
      ) as _i5.Bait);
  @override
  _i5.Id id(_i5.Bait? entity) => (super.noSuchMethod(
        Invocation.method(
          #id,
          [entity],
        ),
        returnValue: _FakeId_4(
          this,
          Invocation.method(
            #id,
            [entity],
          ),
        ),
      ) as _i5.Id);
  @override
  String name(_i5.Bait? entity) => (super.noSuchMethod(
        Invocation.method(
          #name,
          [entity],
        ),
        returnValue: '',
      ) as String);
  @override
  void setImageName(
    _i5.Bait? entity,
    String? imageName,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setImageName,
          [
            entity,
            imageName,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void clearImageName(_i5.Bait? entity) => super.noSuchMethod(
        Invocation.method(
          #clearImageName,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool matchesFilter(
    _i5.Id? id,
    String? filter, [
    _i58.BuildContext? context,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #matchesFilter,
          [
            id,
            filter,
            context,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool attachmentsMatchesFilter(
    Iterable<_i5.BaitAttachment>? attachments,
    String? filter,
    _i58.BuildContext? context,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #attachmentsMatchesFilter,
          [
            attachments,
            filter,
            context,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool duplicate(_i5.Bait? rhs) => (super.noSuchMethod(
        Invocation.method(
          #duplicate,
          [rhs],
        ),
        returnValue: false,
      ) as bool);
  @override
  int numberOfCatches(_i5.Id? baitId) => (super.noSuchMethod(
        Invocation.method(
          #numberOfCatches,
          [baitId],
        ),
        returnValue: 0,
      ) as int);
  @override
  int numberOfCatchQuantities(_i5.Id? baitId) => (super.noSuchMethod(
        Invocation.method(
          #numberOfCatchQuantities,
          [baitId],
        ),
        returnValue: 0,
      ) as int);
  @override
  int numberOfVariantCatches(_i5.Id? variantId) => (super.noSuchMethod(
        Invocation.method(
          #numberOfVariantCatches,
          [variantId],
        ),
        returnValue: 0,
      ) as int);
  @override
  int numberOfCustomEntityValues(_i5.Id? customEntityId) => (super.noSuchMethod(
        Invocation.method(
          #numberOfCustomEntityValues,
          [customEntityId],
        ),
        returnValue: 0,
      ) as int);
  @override
  List<_i5.BaitAttachment> attachmentList() => (super.noSuchMethod(
        Invocation.method(
          #attachmentList,
          [],
        ),
        returnValue: <_i5.BaitAttachment>[],
      ) as List<_i5.BaitAttachment>);
  @override
  bool attachmentExists(_i5.BaitAttachment? attachment) => (super.noSuchMethod(
        Invocation.method(
          #attachmentExists,
          [attachment],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i5.BaitVariant? variant(
    _i5.Bait? bait,
    _i5.Id? variantId,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #variant,
        [
          bait,
          variantId,
        ],
      )) as _i5.BaitVariant?);
  @override
  _i5.BaitVariant? variantFromAttachment(_i5.BaitAttachment? attachment) =>
      (super.noSuchMethod(Invocation.method(
        #variantFromAttachment,
        [attachment],
      )) as _i5.BaitVariant?);
  @override
  String attachmentDisplayValue(
    _i58.BuildContext? context,
    _i5.BaitAttachment? attachment, {
    bool? showAllVariantsLabel = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #attachmentDisplayValue,
          [
            context,
            attachment,
          ],
          {#showAllVariantsLabel: showAllVariantsLabel},
        ),
        returnValue: '',
      ) as String);
  @override
  List<String> attachmentsDisplayValues(
    _i58.BuildContext? context,
    Iterable<_i5.BaitAttachment>? attachments,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #attachmentsDisplayValues,
          [
            context,
            attachments,
          ],
        ),
        returnValue: <String>[],
      ) as List<String>);
  @override
  String variantDisplayValue(
    _i58.BuildContext? context,
    _i5.BaitVariant? variant, {
    bool? includeCustomValues = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #variantDisplayValue,
          [
            context,
            variant,
          ],
          {#includeCustomValues: includeCustomValues},
        ),
        returnValue: '',
      ) as String);
  @override
  String deleteMessage(
    _i58.BuildContext? context,
    _i5.Bait? bait,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMessage,
          [
            context,
            bait,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  String deleteVariantMessage(
    _i58.BuildContext? context,
    _i5.BaitVariant? variant,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteVariantMessage,
          [
            context,
            variant,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  _i2.Future<bool> addOrUpdate(
    _i5.Bait? entity, {
    _i56.File? imageFile,
    bool? compressImages = true,
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrUpdate,
          [entity],
          {
            #imageFile: imageFile,
            #compressImages: compressImages,
            #notify: notify,
          },
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  int Function(
    _i5.Bait,
    _i5.Bait,
  ) displayNameComparator(_i58.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #displayNameComparator,
          [context],
        ),
        returnValue: (
          _i5.Bait __p0,
          _i5.Bait __p1,
        ) =>
            0,
      ) as int Function(
        _i5.Bait,
        _i5.Bait,
      ));
  @override
  List<_i5.Bait> listSortedByDisplayName(
    _i58.BuildContext? context, {
    String? filter,
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listSortedByDisplayName,
          [context],
          {
            #filter: filter,
            #ids: ids,
          },
        ),
        returnValue: <_i5.Bait>[],
      ) as List<_i5.Bait>);
  @override
  String displayName(
    _i58.BuildContext? context,
    _i5.Bait? entity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #displayName,
          [
            context,
            entity,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  bool nameExists(String? name) => (super.noSuchMethod(
        Invocation.method(
          #nameExists,
          [name],
        ),
        returnValue: false,
      ) as bool);
  @override
  String? displayNameFromId(
    _i58.BuildContext? context,
    _i5.Id? id,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #displayNameFromId,
        [
          context,
          id,
        ],
      )) as String?);
  @override
  _i2.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  bool idsMatchesFilter(
    List<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchesFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  Set<_i5.Id> idSet({
    Iterable<_i5.Bait>? entities = const [],
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #idSet,
          [],
          {
            #entities: entities,
            #ids: ids,
          },
        ),
        returnValue: <_i5.Id>{},
      ) as Set<_i5.Id>);
  @override
  Map<String, _i5.Bait> uuidMap() => (super.noSuchMethod(
        Invocation.method(
          #uuidMap,
          [],
        ),
        returnValue: <String, _i5.Bait>{},
      ) as Map<String, _i5.Bait>);
  @override
  List<_i5.Bait> list([Iterable<_i5.Id>? ids = const []]) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [ids],
        ),
        returnValue: <_i5.Bait>[],
      ) as List<_i5.Bait>);
  @override
  List<_i5.Bait> filteredList(
    String? filter, [
    Iterable<_i5.Id>? ids = const [],
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #filteredList,
          [
            filter,
            ids,
          ],
        ),
        returnValue: <_i5.Bait>[],
      ) as List<_i5.Bait>);
  @override
  bool idsMatchFilter(
    Iterable<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool entityExists(_i5.Id? id) => (super.noSuchMethod(
        Invocation.method(
          #entityExists,
          [id],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i2.Future<int> updateAll({
    required bool Function(_i5.Bait)? where,
    required _i2.Future<void> Function(_i5.Bait)? apply,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAll,
          [],
          {
            #where: where,
            #apply: apply,
          },
        ),
        returnValue: _i2.Future<int>.value(0),
      ) as _i2.Future<int>);
  @override
  _i2.Future<bool> delete(
    _i5.Id? entityId, {
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [entityId],
          {#notify: notify},
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  int numberOf<E extends _i69.GeneratedMessage>(
    _i5.Id? id,
    List<E>? items,
    bool Function(E)? matches, [
    int Function(E)? quantity,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #numberOf,
          [
            id,
            items,
            matches,
            quantity,
          ],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.Bait>> listen(
          _i68.EntityListener<_i5.Bait>? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #listen,
          [listener],
        ),
        returnValue: _FakeStreamSubscription_5<_i68.EntityEvent<_i5.Bait>>(
          this,
          Invocation.method(
            #listen,
            [listener],
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.Bait>>);
  @override
  void notifyAdd(_i5.Bait? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyAdd,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyDelete(_i5.Bait? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyDelete,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyUpdate(_i5.Bait? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdate,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.Bait>> addTypedListener({
    void Function(_i5.Bait)? onAdd,
    void Function(_i5.Bait)? onDelete,
    void Function(_i5.Bait)? onUpdate,
    void Function()? onReset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTypedListener,
          [],
          {
            #onAdd: onAdd,
            #onDelete: onDelete,
            #onUpdate: onUpdate,
            #onReset: onReset,
          },
        ),
        returnValue: _FakeStreamSubscription_5<_i68.EntityEvent<_i5.Bait>>(
          this,
          Invocation.method(
            #addTypedListener,
            [],
            {
              #onAdd: onAdd,
              #onDelete: onDelete,
              #onUpdate: onUpdate,
              #onReset: onReset,
            },
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.Bait>>);
}

/// A class which mocks [BodyOfWaterManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockBodyOfWaterManager extends _i1.Mock
    implements _i11.BodyOfWaterManager {
  MockBodyOfWaterManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get tableName => (super.noSuchMethod(
        Invocation.getter(#tableName),
        returnValue: '',
      ) as String);
  @override
  _i2.StreamController<_i68.EntityEvent<_i5.BodyOfWater>> get controller =>
      (super.noSuchMethod(
        Invocation.getter(#controller),
        returnValue: _FakeStreamController_0<_i68.EntityEvent<_i5.BodyOfWater>>(
          this,
          Invocation.getter(#controller),
        ),
      ) as _i2.StreamController<_i68.EntityEvent<_i5.BodyOfWater>>);
  @override
  Map<_i5.Id, _i5.BodyOfWater> get entities => (super.noSuchMethod(
        Invocation.getter(#entities),
        returnValue: <_i5.Id, _i5.BodyOfWater>{},
      ) as Map<_i5.Id, _i5.BodyOfWater>);
  @override
  _i3.AppManager get appManager => (super.noSuchMethod(
        Invocation.getter(#appManager),
        returnValue: _FakeAppManager_1(
          this,
          Invocation.getter(#appManager),
        ),
      ) as _i3.AppManager);
  @override
  _i4.LocalDatabaseManager get localDatabaseManager => (super.noSuchMethod(
        Invocation.getter(#localDatabaseManager),
        returnValue: _FakeLocalDatabaseManager_2(
          this,
          Invocation.getter(#localDatabaseManager),
        ),
      ) as _i4.LocalDatabaseManager);
  @override
  int get entityCount => (super.noSuchMethod(
        Invocation.getter(#entityCount),
        returnValue: 0,
      ) as int);
  @override
  bool get hasEntities => (super.noSuchMethod(
        Invocation.getter(#hasEntities),
        returnValue: false,
      ) as bool);
  @override
  _i2.Stream<_i68.EntityEvent<_i5.BodyOfWater>> get stream =>
      (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i2.Stream<_i68.EntityEvent<_i5.BodyOfWater>>.empty(),
      ) as _i2.Stream<_i68.EntityEvent<_i5.BodyOfWater>>);
  @override
  _i5.BodyOfWater entityFromBytes(List<int>? bytes) => (super.noSuchMethod(
        Invocation.method(
          #entityFromBytes,
          [bytes],
        ),
        returnValue: _FakeBodyOfWater_58(
          this,
          Invocation.method(
            #entityFromBytes,
            [bytes],
          ),
        ),
      ) as _i5.BodyOfWater);
  @override
  _i5.Id id(_i5.BodyOfWater? entity) => (super.noSuchMethod(
        Invocation.method(
          #id,
          [entity],
        ),
        returnValue: _FakeId_4(
          this,
          Invocation.method(
            #id,
            [entity],
          ),
        ),
      ) as _i5.Id);
  @override
  String name(_i5.BodyOfWater? entity) => (super.noSuchMethod(
        Invocation.method(
          #name,
          [entity],
        ),
        returnValue: '',
      ) as String);
  @override
  int numberOfFishingSpots(_i5.Id? bodyOfWaterId) => (super.noSuchMethod(
        Invocation.method(
          #numberOfFishingSpots,
          [bodyOfWaterId],
        ),
        returnValue: 0,
      ) as int);
  @override
  String deleteMessage(
    _i58.BuildContext? context,
    _i5.BodyOfWater? bodyOfWater,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMessage,
          [
            context,
            bodyOfWater,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  int Function(
    _i5.BodyOfWater,
    _i5.BodyOfWater,
  ) displayNameComparator(_i58.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #displayNameComparator,
          [context],
        ),
        returnValue: (
          _i5.BodyOfWater __p0,
          _i5.BodyOfWater __p1,
        ) =>
            0,
      ) as int Function(
        _i5.BodyOfWater,
        _i5.BodyOfWater,
      ));
  @override
  List<_i5.BodyOfWater> listSortedByDisplayName(
    _i58.BuildContext? context, {
    String? filter,
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listSortedByDisplayName,
          [context],
          {
            #filter: filter,
            #ids: ids,
          },
        ),
        returnValue: <_i5.BodyOfWater>[],
      ) as List<_i5.BodyOfWater>);
  @override
  String displayName(
    _i58.BuildContext? context,
    _i5.BodyOfWater? entity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #displayName,
          [
            context,
            entity,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  bool matchesFilter(
    _i5.Id? id,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #matchesFilter,
          [
            id,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool nameExists(String? name) => (super.noSuchMethod(
        Invocation.method(
          #nameExists,
          [name],
        ),
        returnValue: false,
      ) as bool);
  @override
  String? displayNameFromId(
    _i58.BuildContext? context,
    _i5.Id? id,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #displayNameFromId,
        [
          context,
          id,
        ],
      )) as String?);
  @override
  _i2.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  bool idsMatchesFilter(
    List<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchesFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  Set<_i5.Id> idSet({
    Iterable<_i5.BodyOfWater>? entities = const [],
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #idSet,
          [],
          {
            #entities: entities,
            #ids: ids,
          },
        ),
        returnValue: <_i5.Id>{},
      ) as Set<_i5.Id>);
  @override
  Map<String, _i5.BodyOfWater> uuidMap() => (super.noSuchMethod(
        Invocation.method(
          #uuidMap,
          [],
        ),
        returnValue: <String, _i5.BodyOfWater>{},
      ) as Map<String, _i5.BodyOfWater>);
  @override
  List<_i5.BodyOfWater> list([Iterable<_i5.Id>? ids = const []]) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [ids],
        ),
        returnValue: <_i5.BodyOfWater>[],
      ) as List<_i5.BodyOfWater>);
  @override
  List<_i5.BodyOfWater> filteredList(
    String? filter, [
    Iterable<_i5.Id>? ids = const [],
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #filteredList,
          [
            filter,
            ids,
          ],
        ),
        returnValue: <_i5.BodyOfWater>[],
      ) as List<_i5.BodyOfWater>);
  @override
  bool idsMatchFilter(
    Iterable<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool entityExists(_i5.Id? id) => (super.noSuchMethod(
        Invocation.method(
          #entityExists,
          [id],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i2.Future<bool> addOrUpdate(
    _i5.BodyOfWater? entity, {
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrUpdate,
          [entity],
          {#notify: notify},
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<int> updateAll({
    required bool Function(_i5.BodyOfWater)? where,
    required _i2.Future<void> Function(_i5.BodyOfWater)? apply,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAll,
          [],
          {
            #where: where,
            #apply: apply,
          },
        ),
        returnValue: _i2.Future<int>.value(0),
      ) as _i2.Future<int>);
  @override
  _i2.Future<bool> delete(
    _i5.Id? entityId, {
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [entityId],
          {#notify: notify},
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  int numberOf<E extends _i69.GeneratedMessage>(
    _i5.Id? id,
    List<E>? items,
    bool Function(E)? matches, [
    int Function(E)? quantity,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #numberOf,
          [
            id,
            items,
            matches,
            quantity,
          ],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.BodyOfWater>> listen(
          _i68.EntityListener<_i5.BodyOfWater>? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #listen,
          [listener],
        ),
        returnValue:
            _FakeStreamSubscription_5<_i68.EntityEvent<_i5.BodyOfWater>>(
          this,
          Invocation.method(
            #listen,
            [listener],
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.BodyOfWater>>);
  @override
  void notifyAdd(_i5.BodyOfWater? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyAdd,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyDelete(_i5.BodyOfWater? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyDelete,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyUpdate(_i5.BodyOfWater? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdate,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.BodyOfWater>> addTypedListener({
    void Function(_i5.BodyOfWater)? onAdd,
    void Function(_i5.BodyOfWater)? onDelete,
    void Function(_i5.BodyOfWater)? onUpdate,
    void Function()? onReset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTypedListener,
          [],
          {
            #onAdd: onAdd,
            #onDelete: onDelete,
            #onUpdate: onUpdate,
            #onReset: onReset,
          },
        ),
        returnValue:
            _FakeStreamSubscription_5<_i68.EntityEvent<_i5.BodyOfWater>>(
          this,
          Invocation.method(
            #addTypedListener,
            [],
            {
              #onAdd: onAdd,
              #onDelete: onDelete,
              #onUpdate: onUpdate,
              #onReset: onReset,
            },
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.BodyOfWater>>);
}

/// A class which mocks [CatchManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockCatchManager extends _i1.Mock implements _i12.CatchManager {
  MockCatchManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get tableName => (super.noSuchMethod(
        Invocation.getter(#tableName),
        returnValue: '',
      ) as String);
  @override
  _i2.StreamController<_i68.EntityEvent<_i5.Catch>> get controller =>
      (super.noSuchMethod(
        Invocation.getter(#controller),
        returnValue: _FakeStreamController_0<_i68.EntityEvent<_i5.Catch>>(
          this,
          Invocation.getter(#controller),
        ),
      ) as _i2.StreamController<_i68.EntityEvent<_i5.Catch>>);
  @override
  Map<_i5.Id, _i5.Catch> get entities => (super.noSuchMethod(
        Invocation.getter(#entities),
        returnValue: <_i5.Id, _i5.Catch>{},
      ) as Map<_i5.Id, _i5.Catch>);
  @override
  _i3.AppManager get appManager => (super.noSuchMethod(
        Invocation.getter(#appManager),
        returnValue: _FakeAppManager_1(
          this,
          Invocation.getter(#appManager),
        ),
      ) as _i3.AppManager);
  @override
  _i4.LocalDatabaseManager get localDatabaseManager => (super.noSuchMethod(
        Invocation.getter(#localDatabaseManager),
        returnValue: _FakeLocalDatabaseManager_2(
          this,
          Invocation.getter(#localDatabaseManager),
        ),
      ) as _i4.LocalDatabaseManager);
  @override
  int get entityCount => (super.noSuchMethod(
        Invocation.getter(#entityCount),
        returnValue: 0,
      ) as int);
  @override
  bool get hasEntities => (super.noSuchMethod(
        Invocation.getter(#hasEntities),
        returnValue: false,
      ) as bool);
  @override
  _i2.Stream<_i68.EntityEvent<_i5.Catch>> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i2.Stream<_i68.EntityEvent<_i5.Catch>>.empty(),
      ) as _i2.Stream<_i68.EntityEvent<_i5.Catch>>);
  @override
  _i2.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i5.Catch entityFromBytes(List<int>? bytes) => (super.noSuchMethod(
        Invocation.method(
          #entityFromBytes,
          [bytes],
        ),
        returnValue: _FakeCatch_59(
          this,
          Invocation.method(
            #entityFromBytes,
            [bytes],
          ),
        ),
      ) as _i5.Catch);
  @override
  _i5.Id id(_i5.Catch? entity) => (super.noSuchMethod(
        Invocation.method(
          #id,
          [entity],
        ),
        returnValue: _FakeId_4(
          this,
          Invocation.method(
            #id,
            [entity],
          ),
        ),
      ) as _i5.Id);
  @override
  String displayName(
    _i58.BuildContext? context,
    _i5.Catch? entity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #displayName,
          [
            context,
            entity,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  bool matchesFilter(
    _i5.Id? id,
    String? filter, [
    _i58.BuildContext? context,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #matchesFilter,
          [
            id,
            filter,
            context,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  List<_i5.Catch> catches(
    _i58.BuildContext? context, {
    String? filter,
    _i5.CatchFilterOptions? opt,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #catches,
          [context],
          {
            #filter: filter,
            #opt: opt,
          },
        ),
        returnValue: <_i5.Catch>[],
      ) as List<_i5.Catch>);
  @override
  Iterable<_i5.Catch> catchesForGpsTrail(_i5.GpsTrail? trail) =>
      (super.noSuchMethod(
        Invocation.method(
          #catchesForGpsTrail,
          [trail],
        ),
        returnValue: <_i5.Catch>[],
      ) as Iterable<_i5.Catch>);
  @override
  List<String> imageNamesSortedByTimestamp(_i58.BuildContext? context) =>
      (super.noSuchMethod(
        Invocation.method(
          #imageNamesSortedByTimestamp,
          [context],
        ),
        returnValue: <String>[],
      ) as List<String>);
  @override
  _i2.Future<bool> addOrUpdate(
    _i5.Catch? entity, {
    List<_i56.File>? imageFiles = const [],
    bool? compressImages = true,
    bool? notify = true,
    bool? setImages = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrUpdate,
          [entity],
          {
            #imageFiles: imageFiles,
            #compressImages: compressImages,
            #notify: notify,
            #setImages: setImages,
          },
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  bool existsWith({_i5.Id? speciesId}) => (super.noSuchMethod(
        Invocation.method(
          #existsWith,
          [],
          {#speciesId: speciesId},
        ),
        returnValue: false,
      ) as bool);
  @override
  String deleteMessage(
    _i58.BuildContext? context,
    _i5.Catch? cat,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMessage,
          [
            context,
            cat,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  int numberOfCustomEntityValues(_i5.Id? customEntityId) => (super.noSuchMethod(
        Invocation.method(
          #numberOfCustomEntityValues,
          [customEntityId],
        ),
        returnValue: 0,
      ) as int);
  @override
  int totalQuantity(List<_i5.Id>? catchIds) => (super.noSuchMethod(
        Invocation.method(
          #totalQuantity,
          [catchIds],
        ),
        returnValue: 0,
      ) as int);
  @override
  String? displayNameFromId(
    _i58.BuildContext? context,
    _i5.Id? id,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #displayNameFromId,
        [
          context,
          id,
        ],
      )) as String?);
  @override
  bool idsMatchesFilter(
    List<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchesFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  Set<_i5.Id> idSet({
    Iterable<_i5.Catch>? entities = const [],
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #idSet,
          [],
          {
            #entities: entities,
            #ids: ids,
          },
        ),
        returnValue: <_i5.Id>{},
      ) as Set<_i5.Id>);
  @override
  Map<String, _i5.Catch> uuidMap() => (super.noSuchMethod(
        Invocation.method(
          #uuidMap,
          [],
        ),
        returnValue: <String, _i5.Catch>{},
      ) as Map<String, _i5.Catch>);
  @override
  List<_i5.Catch> list([Iterable<_i5.Id>? ids = const []]) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [ids],
        ),
        returnValue: <_i5.Catch>[],
      ) as List<_i5.Catch>);
  @override
  List<_i5.Catch> filteredList(
    String? filter, [
    Iterable<_i5.Id>? ids = const [],
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #filteredList,
          [
            filter,
            ids,
          ],
        ),
        returnValue: <_i5.Catch>[],
      ) as List<_i5.Catch>);
  @override
  bool idsMatchFilter(
    Iterable<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool entityExists(_i5.Id? id) => (super.noSuchMethod(
        Invocation.method(
          #entityExists,
          [id],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i2.Future<int> updateAll({
    required bool Function(_i5.Catch)? where,
    required _i2.Future<void> Function(_i5.Catch)? apply,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAll,
          [],
          {
            #where: where,
            #apply: apply,
          },
        ),
        returnValue: _i2.Future<int>.value(0),
      ) as _i2.Future<int>);
  @override
  _i2.Future<bool> delete(
    _i5.Id? entityId, {
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [entityId],
          {#notify: notify},
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  int numberOf<E extends _i69.GeneratedMessage>(
    _i5.Id? id,
    List<E>? items,
    bool Function(E)? matches, [
    int Function(E)? quantity,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #numberOf,
          [
            id,
            items,
            matches,
            quantity,
          ],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.Catch>> listen(
          _i68.EntityListener<_i5.Catch>? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #listen,
          [listener],
        ),
        returnValue: _FakeStreamSubscription_5<_i68.EntityEvent<_i5.Catch>>(
          this,
          Invocation.method(
            #listen,
            [listener],
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.Catch>>);
  @override
  void notifyAdd(_i5.Catch? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyAdd,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyDelete(_i5.Catch? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyDelete,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyUpdate(_i5.Catch? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdate,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.Catch>> addTypedListener({
    void Function(_i5.Catch)? onAdd,
    void Function(_i5.Catch)? onDelete,
    void Function(_i5.Catch)? onUpdate,
    void Function()? onReset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTypedListener,
          [],
          {
            #onAdd: onAdd,
            #onDelete: onDelete,
            #onUpdate: onUpdate,
            #onReset: onReset,
          },
        ),
        returnValue: _FakeStreamSubscription_5<_i68.EntityEvent<_i5.Catch>>(
          this,
          Invocation.method(
            #addTypedListener,
            [],
            {
              #onAdd: onAdd,
              #onDelete: onDelete,
              #onUpdate: onUpdate,
              #onReset: onReset,
            },
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.Catch>>);
}

/// A class which mocks [CustomEntityManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomEntityManager extends _i1.Mock
    implements _i13.CustomEntityManager {
  MockCustomEntityManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get tableName => (super.noSuchMethod(
        Invocation.getter(#tableName),
        returnValue: '',
      ) as String);
  @override
  _i2.StreamController<_i68.EntityEvent<_i5.CustomEntity>> get controller =>
      (super.noSuchMethod(
        Invocation.getter(#controller),
        returnValue:
            _FakeStreamController_0<_i68.EntityEvent<_i5.CustomEntity>>(
          this,
          Invocation.getter(#controller),
        ),
      ) as _i2.StreamController<_i68.EntityEvent<_i5.CustomEntity>>);
  @override
  Map<_i5.Id, _i5.CustomEntity> get entities => (super.noSuchMethod(
        Invocation.getter(#entities),
        returnValue: <_i5.Id, _i5.CustomEntity>{},
      ) as Map<_i5.Id, _i5.CustomEntity>);
  @override
  _i3.AppManager get appManager => (super.noSuchMethod(
        Invocation.getter(#appManager),
        returnValue: _FakeAppManager_1(
          this,
          Invocation.getter(#appManager),
        ),
      ) as _i3.AppManager);
  @override
  _i4.LocalDatabaseManager get localDatabaseManager => (super.noSuchMethod(
        Invocation.getter(#localDatabaseManager),
        returnValue: _FakeLocalDatabaseManager_2(
          this,
          Invocation.getter(#localDatabaseManager),
        ),
      ) as _i4.LocalDatabaseManager);
  @override
  int get entityCount => (super.noSuchMethod(
        Invocation.getter(#entityCount),
        returnValue: 0,
      ) as int);
  @override
  bool get hasEntities => (super.noSuchMethod(
        Invocation.getter(#hasEntities),
        returnValue: false,
      ) as bool);
  @override
  _i2.Stream<_i68.EntityEvent<_i5.CustomEntity>> get stream =>
      (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i2.Stream<_i68.EntityEvent<_i5.CustomEntity>>.empty(),
      ) as _i2.Stream<_i68.EntityEvent<_i5.CustomEntity>>);
  @override
  _i5.CustomEntity entityFromBytes(List<int>? bytes) => (super.noSuchMethod(
        Invocation.method(
          #entityFromBytes,
          [bytes],
        ),
        returnValue: _FakeCustomEntity_60(
          this,
          Invocation.method(
            #entityFromBytes,
            [bytes],
          ),
        ),
      ) as _i5.CustomEntity);
  @override
  _i5.Id id(_i5.CustomEntity? entity) => (super.noSuchMethod(
        Invocation.method(
          #id,
          [entity],
        ),
        returnValue: _FakeId_4(
          this,
          Invocation.method(
            #id,
            [entity],
          ),
        ),
      ) as _i5.Id);
  @override
  String name(_i5.CustomEntity? entity) => (super.noSuchMethod(
        Invocation.method(
          #name,
          [entity],
        ),
        returnValue: '',
      ) as String);
  @override
  String customValuesDisplayValue(
    List<_i5.CustomEntityValue>? values,
    _i58.BuildContext? context,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #customValuesDisplayValue,
          [
            values,
            context,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  int Function(
    _i5.CustomEntity,
    _i5.CustomEntity,
  ) displayNameComparator(_i58.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #displayNameComparator,
          [context],
        ),
        returnValue: (
          _i5.CustomEntity __p0,
          _i5.CustomEntity __p1,
        ) =>
            0,
      ) as int Function(
        _i5.CustomEntity,
        _i5.CustomEntity,
      ));
  @override
  List<_i5.CustomEntity> listSortedByDisplayName(
    _i58.BuildContext? context, {
    String? filter,
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listSortedByDisplayName,
          [context],
          {
            #filter: filter,
            #ids: ids,
          },
        ),
        returnValue: <_i5.CustomEntity>[],
      ) as List<_i5.CustomEntity>);
  @override
  String displayName(
    _i58.BuildContext? context,
    _i5.CustomEntity? entity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #displayName,
          [
            context,
            entity,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  bool matchesFilter(
    _i5.Id? id,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #matchesFilter,
          [
            id,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool nameExists(String? name) => (super.noSuchMethod(
        Invocation.method(
          #nameExists,
          [name],
        ),
        returnValue: false,
      ) as bool);
  @override
  String? displayNameFromId(
    _i58.BuildContext? context,
    _i5.Id? id,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #displayNameFromId,
        [
          context,
          id,
        ],
      )) as String?);
  @override
  _i2.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  bool idsMatchesFilter(
    List<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchesFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  Set<_i5.Id> idSet({
    Iterable<_i5.CustomEntity>? entities = const [],
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #idSet,
          [],
          {
            #entities: entities,
            #ids: ids,
          },
        ),
        returnValue: <_i5.Id>{},
      ) as Set<_i5.Id>);
  @override
  Map<String, _i5.CustomEntity> uuidMap() => (super.noSuchMethod(
        Invocation.method(
          #uuidMap,
          [],
        ),
        returnValue: <String, _i5.CustomEntity>{},
      ) as Map<String, _i5.CustomEntity>);
  @override
  List<_i5.CustomEntity> list([Iterable<_i5.Id>? ids = const []]) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [ids],
        ),
        returnValue: <_i5.CustomEntity>[],
      ) as List<_i5.CustomEntity>);
  @override
  List<_i5.CustomEntity> filteredList(
    String? filter, [
    Iterable<_i5.Id>? ids = const [],
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #filteredList,
          [
            filter,
            ids,
          ],
        ),
        returnValue: <_i5.CustomEntity>[],
      ) as List<_i5.CustomEntity>);
  @override
  bool idsMatchFilter(
    Iterable<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool entityExists(_i5.Id? id) => (super.noSuchMethod(
        Invocation.method(
          #entityExists,
          [id],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i2.Future<bool> addOrUpdate(
    _i5.CustomEntity? entity, {
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrUpdate,
          [entity],
          {#notify: notify},
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<int> updateAll({
    required bool Function(_i5.CustomEntity)? where,
    required _i2.Future<void> Function(_i5.CustomEntity)? apply,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAll,
          [],
          {
            #where: where,
            #apply: apply,
          },
        ),
        returnValue: _i2.Future<int>.value(0),
      ) as _i2.Future<int>);
  @override
  _i2.Future<bool> delete(
    _i5.Id? entityId, {
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [entityId],
          {#notify: notify},
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  int numberOf<E extends _i69.GeneratedMessage>(
    _i5.Id? id,
    List<E>? items,
    bool Function(E)? matches, [
    int Function(E)? quantity,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #numberOf,
          [
            id,
            items,
            matches,
            quantity,
          ],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.CustomEntity>> listen(
          _i68.EntityListener<_i5.CustomEntity>? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #listen,
          [listener],
        ),
        returnValue:
            _FakeStreamSubscription_5<_i68.EntityEvent<_i5.CustomEntity>>(
          this,
          Invocation.method(
            #listen,
            [listener],
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.CustomEntity>>);
  @override
  void notifyAdd(_i5.CustomEntity? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyAdd,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyDelete(_i5.CustomEntity? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyDelete,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyUpdate(_i5.CustomEntity? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdate,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.CustomEntity>> addTypedListener({
    void Function(_i5.CustomEntity)? onAdd,
    void Function(_i5.CustomEntity)? onDelete,
    void Function(_i5.CustomEntity)? onUpdate,
    void Function()? onReset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTypedListener,
          [],
          {
            #onAdd: onAdd,
            #onDelete: onDelete,
            #onUpdate: onUpdate,
            #onReset: onReset,
          },
        ),
        returnValue:
            _FakeStreamSubscription_5<_i68.EntityEvent<_i5.CustomEntity>>(
          this,
          Invocation.method(
            #addTypedListener,
            [],
            {
              #onAdd: onAdd,
              #onDelete: onDelete,
              #onUpdate: onUpdate,
              #onReset: onReset,
            },
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.CustomEntity>>);
}

/// A class which mocks [DriveApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockDriveApi extends _i1.Mock implements _i54.DriveApi {
  MockDriveApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i54.AboutResource get about => (super.noSuchMethod(
        Invocation.getter(#about),
        returnValue: _FakeAboutResource_61(
          this,
          Invocation.getter(#about),
        ),
      ) as _i54.AboutResource);
  @override
  _i54.ChangesResource get changes => (super.noSuchMethod(
        Invocation.getter(#changes),
        returnValue: _FakeChangesResource_62(
          this,
          Invocation.getter(#changes),
        ),
      ) as _i54.ChangesResource);
  @override
  _i54.ChannelsResource get channels => (super.noSuchMethod(
        Invocation.getter(#channels),
        returnValue: _FakeChannelsResource_63(
          this,
          Invocation.getter(#channels),
        ),
      ) as _i54.ChannelsResource);
  @override
  _i54.CommentsResource get comments => (super.noSuchMethod(
        Invocation.getter(#comments),
        returnValue: _FakeCommentsResource_64(
          this,
          Invocation.getter(#comments),
        ),
      ) as _i54.CommentsResource);
  @override
  _i54.DrivesResource get drives => (super.noSuchMethod(
        Invocation.getter(#drives),
        returnValue: _FakeDrivesResource_65(
          this,
          Invocation.getter(#drives),
        ),
      ) as _i54.DrivesResource);
  @override
  _i54.FilesResource get files => (super.noSuchMethod(
        Invocation.getter(#files),
        returnValue: _FakeFilesResource_66(
          this,
          Invocation.getter(#files),
        ),
      ) as _i54.FilesResource);
  @override
  _i54.PermissionsResource get permissions => (super.noSuchMethod(
        Invocation.getter(#permissions),
        returnValue: _FakePermissionsResource_67(
          this,
          Invocation.getter(#permissions),
        ),
      ) as _i54.PermissionsResource);
  @override
  _i54.RepliesResource get replies => (super.noSuchMethod(
        Invocation.getter(#replies),
        returnValue: _FakeRepliesResource_68(
          this,
          Invocation.getter(#replies),
        ),
      ) as _i54.RepliesResource);
  @override
  _i54.RevisionsResource get revisions => (super.noSuchMethod(
        Invocation.getter(#revisions),
        returnValue: _FakeRevisionsResource_69(
          this,
          Invocation.getter(#revisions),
        ),
      ) as _i54.RevisionsResource);
  @override
  _i54.TeamdrivesResource get teamdrives => (super.noSuchMethod(
        Invocation.getter(#teamdrives),
        returnValue: _FakeTeamdrivesResource_70(
          this,
          Invocation.getter(#teamdrives),
        ),
      ) as _i54.TeamdrivesResource);
}

/// A class which mocks [FileList].
///
/// See the documentation for Mockito's code generation for more information.
class MockFileList extends _i1.Mock implements _i54.FileList {
  MockFileList() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set files(List<_i54.File>? _files) => super.noSuchMethod(
        Invocation.setter(
          #files,
          _files,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set incompleteSearch(bool? _incompleteSearch) => super.noSuchMethod(
        Invocation.setter(
          #incompleteSearch,
          _incompleteSearch,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set kind(String? _kind) => super.noSuchMethod(
        Invocation.setter(
          #kind,
          _kind,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set nextPageToken(String? _nextPageToken) => super.noSuchMethod(
        Invocation.setter(
          #nextPageToken,
          _nextPageToken,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [FilesResource].
///
/// See the documentation for Mockito's code generation for more information.
class MockFilesResource extends _i1.Mock implements _i54.FilesResource {
  MockFilesResource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<_i54.File> copy(
    _i54.File? request,
    String? fileId, {
    bool? enforceSingleParent,
    bool? ignoreDefaultVisibility,
    String? includeLabels,
    String? includePermissionsForView,
    bool? keepRevisionForever,
    String? ocrLanguage,
    bool? supportsAllDrives,
    bool? supportsTeamDrives,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copy,
          [
            request,
            fileId,
          ],
          {
            #enforceSingleParent: enforceSingleParent,
            #ignoreDefaultVisibility: ignoreDefaultVisibility,
            #includeLabels: includeLabels,
            #includePermissionsForView: includePermissionsForView,
            #keepRevisionForever: keepRevisionForever,
            #ocrLanguage: ocrLanguage,
            #supportsAllDrives: supportsAllDrives,
            #supportsTeamDrives: supportsTeamDrives,
            #$fields: $fields,
          },
        ),
        returnValue: _i2.Future<_i54.File>.value(_FakeFile_71(
          this,
          Invocation.method(
            #copy,
            [
              request,
              fileId,
            ],
            {
              #enforceSingleParent: enforceSingleParent,
              #ignoreDefaultVisibility: ignoreDefaultVisibility,
              #includeLabels: includeLabels,
              #includePermissionsForView: includePermissionsForView,
              #keepRevisionForever: keepRevisionForever,
              #ocrLanguage: ocrLanguage,
              #supportsAllDrives: supportsAllDrives,
              #supportsTeamDrives: supportsTeamDrives,
              #$fields: $fields,
            },
          ),
        )),
      ) as _i2.Future<_i54.File>);
  @override
  _i2.Future<_i54.File> create(
    _i54.File? request, {
    bool? enforceSingleParent,
    bool? ignoreDefaultVisibility,
    String? includeLabels,
    String? includePermissionsForView,
    bool? keepRevisionForever,
    String? ocrLanguage,
    bool? supportsAllDrives,
    bool? supportsTeamDrives,
    bool? useContentAsIndexableText,
    String? $fields,
    _i54.UploadOptions? uploadOptions = _i54.UploadOptions.defaultOptions,
    _i54.Media? uploadMedia,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
          {
            #enforceSingleParent: enforceSingleParent,
            #ignoreDefaultVisibility: ignoreDefaultVisibility,
            #includeLabels: includeLabels,
            #includePermissionsForView: includePermissionsForView,
            #keepRevisionForever: keepRevisionForever,
            #ocrLanguage: ocrLanguage,
            #supportsAllDrives: supportsAllDrives,
            #supportsTeamDrives: supportsTeamDrives,
            #useContentAsIndexableText: useContentAsIndexableText,
            #$fields: $fields,
            #uploadOptions: uploadOptions,
            #uploadMedia: uploadMedia,
          },
        ),
        returnValue: _i2.Future<_i54.File>.value(_FakeFile_71(
          this,
          Invocation.method(
            #create,
            [request],
            {
              #enforceSingleParent: enforceSingleParent,
              #ignoreDefaultVisibility: ignoreDefaultVisibility,
              #includeLabels: includeLabels,
              #includePermissionsForView: includePermissionsForView,
              #keepRevisionForever: keepRevisionForever,
              #ocrLanguage: ocrLanguage,
              #supportsAllDrives: supportsAllDrives,
              #supportsTeamDrives: supportsTeamDrives,
              #useContentAsIndexableText: useContentAsIndexableText,
              #$fields: $fields,
              #uploadOptions: uploadOptions,
              #uploadMedia: uploadMedia,
            },
          ),
        )),
      ) as _i2.Future<_i54.File>);
  @override
  _i2.Future<void> delete(
    String? fileId, {
    bool? enforceSingleParent,
    bool? supportsAllDrives,
    bool? supportsTeamDrives,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [fileId],
          {
            #enforceSingleParent: enforceSingleParent,
            #supportsAllDrives: supportsAllDrives,
            #supportsTeamDrives: supportsTeamDrives,
            #$fields: $fields,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> emptyTrash({
    bool? enforceSingleParent,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #emptyTrash,
          [],
          {
            #enforceSingleParent: enforceSingleParent,
            #$fields: $fields,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<_i54.Media?> export(
    String? fileId,
    String? mimeType, {
    String? $fields,
    _i54.DownloadOptions? downloadOptions = _i54.DownloadOptions.metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #export,
          [
            fileId,
            mimeType,
          ],
          {
            #$fields: $fields,
            #downloadOptions: downloadOptions,
          },
        ),
        returnValue: _i2.Future<_i54.Media?>.value(),
      ) as _i2.Future<_i54.Media?>);
  @override
  _i2.Future<_i54.GeneratedIds> generateIds({
    int? count,
    String? space,
    String? type,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateIds,
          [],
          {
            #count: count,
            #space: space,
            #type: type,
            #$fields: $fields,
          },
        ),
        returnValue: _i2.Future<_i54.GeneratedIds>.value(_FakeGeneratedIds_72(
          this,
          Invocation.method(
            #generateIds,
            [],
            {
              #count: count,
              #space: space,
              #type: type,
              #$fields: $fields,
            },
          ),
        )),
      ) as _i2.Future<_i54.GeneratedIds>);
  @override
  _i2.Future<Object> get(
    String? fileId, {
    bool? acknowledgeAbuse,
    String? includeLabels,
    String? includePermissionsForView,
    bool? supportsAllDrives,
    bool? supportsTeamDrives,
    String? $fields,
    _i54.DownloadOptions? downloadOptions = _i54.DownloadOptions.metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [fileId],
          {
            #acknowledgeAbuse: acknowledgeAbuse,
            #includeLabels: includeLabels,
            #includePermissionsForView: includePermissionsForView,
            #supportsAllDrives: supportsAllDrives,
            #supportsTeamDrives: supportsTeamDrives,
            #$fields: $fields,
            #downloadOptions: downloadOptions,
          },
        ),
        returnValue: _i2.Future<Object>.value(_FakeObject_73(
          this,
          Invocation.method(
            #get,
            [fileId],
            {
              #acknowledgeAbuse: acknowledgeAbuse,
              #includeLabels: includeLabels,
              #includePermissionsForView: includePermissionsForView,
              #supportsAllDrives: supportsAllDrives,
              #supportsTeamDrives: supportsTeamDrives,
              #$fields: $fields,
              #downloadOptions: downloadOptions,
            },
          ),
        )),
      ) as _i2.Future<Object>);
  @override
  _i2.Future<_i54.FileList> list({
    String? corpora,
    String? corpus,
    String? driveId,
    bool? includeItemsFromAllDrives,
    String? includeLabels,
    String? includePermissionsForView,
    bool? includeTeamDriveItems,
    String? orderBy,
    int? pageSize,
    String? pageToken,
    String? q,
    String? spaces,
    bool? supportsAllDrives,
    bool? supportsTeamDrives,
    String? teamDriveId,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [],
          {
            #corpora: corpora,
            #corpus: corpus,
            #driveId: driveId,
            #includeItemsFromAllDrives: includeItemsFromAllDrives,
            #includeLabels: includeLabels,
            #includePermissionsForView: includePermissionsForView,
            #includeTeamDriveItems: includeTeamDriveItems,
            #orderBy: orderBy,
            #pageSize: pageSize,
            #pageToken: pageToken,
            #q: q,
            #spaces: spaces,
            #supportsAllDrives: supportsAllDrives,
            #supportsTeamDrives: supportsTeamDrives,
            #teamDriveId: teamDriveId,
            #$fields: $fields,
          },
        ),
        returnValue: _i2.Future<_i54.FileList>.value(_FakeFileList_74(
          this,
          Invocation.method(
            #list,
            [],
            {
              #corpora: corpora,
              #corpus: corpus,
              #driveId: driveId,
              #includeItemsFromAllDrives: includeItemsFromAllDrives,
              #includeLabels: includeLabels,
              #includePermissionsForView: includePermissionsForView,
              #includeTeamDriveItems: includeTeamDriveItems,
              #orderBy: orderBy,
              #pageSize: pageSize,
              #pageToken: pageToken,
              #q: q,
              #spaces: spaces,
              #supportsAllDrives: supportsAllDrives,
              #supportsTeamDrives: supportsTeamDrives,
              #teamDriveId: teamDriveId,
              #$fields: $fields,
            },
          ),
        )),
      ) as _i2.Future<_i54.FileList>);
  @override
  _i2.Future<_i54.LabelList> listLabels(
    String? fileId, {
    int? maxResults,
    String? pageToken,
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listLabels,
          [fileId],
          {
            #maxResults: maxResults,
            #pageToken: pageToken,
            #$fields: $fields,
          },
        ),
        returnValue: _i2.Future<_i54.LabelList>.value(_FakeLabelList_75(
          this,
          Invocation.method(
            #listLabels,
            [fileId],
            {
              #maxResults: maxResults,
              #pageToken: pageToken,
              #$fields: $fields,
            },
          ),
        )),
      ) as _i2.Future<_i54.LabelList>);
  @override
  _i2.Future<_i54.ModifyLabelsResponse> modifyLabels(
    _i54.ModifyLabelsRequest? request,
    String? fileId, {
    String? $fields,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #modifyLabels,
          [
            request,
            fileId,
          ],
          {#$fields: $fields},
        ),
        returnValue: _i2.Future<_i54.ModifyLabelsResponse>.value(
            _FakeModifyLabelsResponse_76(
          this,
          Invocation.method(
            #modifyLabels,
            [
              request,
              fileId,
            ],
            {#$fields: $fields},
          ),
        )),
      ) as _i2.Future<_i54.ModifyLabelsResponse>);
  @override
  _i2.Future<_i54.File> update(
    _i54.File? request,
    String? fileId, {
    String? addParents,
    bool? enforceSingleParent,
    String? includeLabels,
    String? includePermissionsForView,
    bool? keepRevisionForever,
    String? ocrLanguage,
    String? removeParents,
    bool? supportsAllDrives,
    bool? supportsTeamDrives,
    bool? useContentAsIndexableText,
    String? $fields,
    _i54.UploadOptions? uploadOptions = _i54.UploadOptions.defaultOptions,
    _i54.Media? uploadMedia,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [
            request,
            fileId,
          ],
          {
            #addParents: addParents,
            #enforceSingleParent: enforceSingleParent,
            #includeLabels: includeLabels,
            #includePermissionsForView: includePermissionsForView,
            #keepRevisionForever: keepRevisionForever,
            #ocrLanguage: ocrLanguage,
            #removeParents: removeParents,
            #supportsAllDrives: supportsAllDrives,
            #supportsTeamDrives: supportsTeamDrives,
            #useContentAsIndexableText: useContentAsIndexableText,
            #$fields: $fields,
            #uploadOptions: uploadOptions,
            #uploadMedia: uploadMedia,
          },
        ),
        returnValue: _i2.Future<_i54.File>.value(_FakeFile_71(
          this,
          Invocation.method(
            #update,
            [
              request,
              fileId,
            ],
            {
              #addParents: addParents,
              #enforceSingleParent: enforceSingleParent,
              #includeLabels: includeLabels,
              #includePermissionsForView: includePermissionsForView,
              #keepRevisionForever: keepRevisionForever,
              #ocrLanguage: ocrLanguage,
              #removeParents: removeParents,
              #supportsAllDrives: supportsAllDrives,
              #supportsTeamDrives: supportsTeamDrives,
              #useContentAsIndexableText: useContentAsIndexableText,
              #$fields: $fields,
              #uploadOptions: uploadOptions,
              #uploadMedia: uploadMedia,
            },
          ),
        )),
      ) as _i2.Future<_i54.File>);
  @override
  _i2.Future<Object> watch(
    _i74.$Channel? request,
    String? fileId, {
    bool? acknowledgeAbuse,
    String? includeLabels,
    String? includePermissionsForView,
    bool? supportsAllDrives,
    bool? supportsTeamDrives,
    String? $fields,
    _i54.DownloadOptions? downloadOptions = _i54.DownloadOptions.metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #watch,
          [
            request,
            fileId,
          ],
          {
            #acknowledgeAbuse: acknowledgeAbuse,
            #includeLabels: includeLabels,
            #includePermissionsForView: includePermissionsForView,
            #supportsAllDrives: supportsAllDrives,
            #supportsTeamDrives: supportsTeamDrives,
            #$fields: $fields,
            #downloadOptions: downloadOptions,
          },
        ),
        returnValue: _i2.Future<Object>.value(_FakeObject_73(
          this,
          Invocation.method(
            #watch,
            [
              request,
              fileId,
            ],
            {
              #acknowledgeAbuse: acknowledgeAbuse,
              #includeLabels: includeLabels,
              #includePermissionsForView: includePermissionsForView,
              #supportsAllDrives: supportsAllDrives,
              #supportsTeamDrives: supportsTeamDrives,
              #$fields: $fields,
              #downloadOptions: downloadOptions,
            },
          ),
        )),
      ) as _i2.Future<Object>);
}

/// A class which mocks [DriveApiWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDriveApiWrapper extends _i1.Mock implements _i30.DriveApiWrapper {
  MockDriveApiWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i54.DriveApi newInstance(_i53.Client? client) => (super.noSuchMethod(
        Invocation.method(
          #newInstance,
          [client],
        ),
        returnValue: _FakeDriveApi_77(
          this,
          Invocation.method(
            #newInstance,
            [client],
          ),
        ),
      ) as _i54.DriveApi);
}

/// A class which mocks [Exif].
///
/// See the documentation for Mockito's code generation for more information.
class MockExif extends _i1.Mock implements _i59.Exif {
  MockExif() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get active => (super.noSuchMethod(
        Invocation.getter(#active),
        returnValue: false,
      ) as bool);
  @override
  set active(bool? _active) => super.noSuchMethod(
        Invocation.setter(
          #active,
          _active,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.Future<T?> getAttribute<T>(String? tag) => (super.noSuchMethod(
        Invocation.method(
          #getAttribute,
          [tag],
        ),
        returnValue: _i2.Future<T?>.value(),
      ) as _i2.Future<T?>);
  @override
  _i2.Future<Map<String, Object>?> getAttributes() => (super.noSuchMethod(
        Invocation.method(
          #getAttributes,
          [],
        ),
        returnValue: _i2.Future<Map<String, Object>?>.value(),
      ) as _i2.Future<Map<String, Object>?>);
  @override
  _i2.Future<void> writeAttribute(
    String? tag,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeAttribute,
          [
            tag,
            value,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> writeAttributes(Map<String, Object>? values) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeAttributes,
          [values],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<DateTime?> getOriginalDate() => (super.noSuchMethod(
        Invocation.method(
          #getOriginalDate,
          [],
        ),
        returnValue: _i2.Future<DateTime?>.value(),
      ) as _i2.Future<DateTime?>);
  @override
  _i2.Future<_i59.ExifLatLong?> getLatLong() => (super.noSuchMethod(
        Invocation.method(
          #getLatLong,
          [],
        ),
        returnValue: _i2.Future<_i59.ExifLatLong?>.value(),
      ) as _i2.Future<_i59.ExifLatLong?>);
  @override
  _i2.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
}

/// A class which mocks [FishingSpotManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockFishingSpotManager extends _i1.Mock
    implements _i14.FishingSpotManager {
  MockFishingSpotManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get tableName => (super.noSuchMethod(
        Invocation.getter(#tableName),
        returnValue: '',
      ) as String);
  @override
  _i2.StreamController<_i68.EntityEvent<_i5.FishingSpot>> get controller =>
      (super.noSuchMethod(
        Invocation.getter(#controller),
        returnValue: _FakeStreamController_0<_i68.EntityEvent<_i5.FishingSpot>>(
          this,
          Invocation.getter(#controller),
        ),
      ) as _i2.StreamController<_i68.EntityEvent<_i5.FishingSpot>>);
  @override
  Map<_i5.Id, _i5.FishingSpot> get entities => (super.noSuchMethod(
        Invocation.getter(#entities),
        returnValue: <_i5.Id, _i5.FishingSpot>{},
      ) as Map<_i5.Id, _i5.FishingSpot>);
  @override
  _i3.AppManager get appManager => (super.noSuchMethod(
        Invocation.getter(#appManager),
        returnValue: _FakeAppManager_1(
          this,
          Invocation.getter(#appManager),
        ),
      ) as _i3.AppManager);
  @override
  _i4.LocalDatabaseManager get localDatabaseManager => (super.noSuchMethod(
        Invocation.getter(#localDatabaseManager),
        returnValue: _FakeLocalDatabaseManager_2(
          this,
          Invocation.getter(#localDatabaseManager),
        ),
      ) as _i4.LocalDatabaseManager);
  @override
  int get entityCount => (super.noSuchMethod(
        Invocation.getter(#entityCount),
        returnValue: 0,
      ) as int);
  @override
  bool get hasEntities => (super.noSuchMethod(
        Invocation.getter(#hasEntities),
        returnValue: false,
      ) as bool);
  @override
  _i2.Stream<_i68.EntityEvent<_i5.FishingSpot>> get stream =>
      (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i2.Stream<_i68.EntityEvent<_i5.FishingSpot>>.empty(),
      ) as _i2.Stream<_i68.EntityEvent<_i5.FishingSpot>>);
  @override
  _i5.FishingSpot entityFromBytes(List<int>? bytes) => (super.noSuchMethod(
        Invocation.method(
          #entityFromBytes,
          [bytes],
        ),
        returnValue: _FakeFishingSpot_78(
          this,
          Invocation.method(
            #entityFromBytes,
            [bytes],
          ),
        ),
      ) as _i5.FishingSpot);
  @override
  _i5.Id id(_i5.FishingSpot? entity) => (super.noSuchMethod(
        Invocation.method(
          #id,
          [entity],
        ),
        returnValue: _FakeId_4(
          this,
          Invocation.method(
            #id,
            [entity],
          ),
        ),
      ) as _i5.Id);
  @override
  String name(_i5.FishingSpot? entity) => (super.noSuchMethod(
        Invocation.method(
          #name,
          [entity],
        ),
        returnValue: '',
      ) as String);
  @override
  String displayName(
    _i58.BuildContext? context,
    _i5.FishingSpot? entity, {
    bool? useLatLngFallback = true,
    bool? includeLatLngLabels = true,
    bool? includeBodyOfWater = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #displayName,
          [
            context,
            entity,
          ],
          {
            #useLatLngFallback: useLatLngFallback,
            #includeLatLngLabels: includeLatLngLabels,
            #includeBodyOfWater: includeBodyOfWater,
          },
        ),
        returnValue: '',
      ) as String);
  @override
  void setImageName(
    _i5.FishingSpot? entity,
    String? imageName,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setImageName,
          [
            entity,
            imageName,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void clearImageName(_i5.FishingSpot? entity) => super.noSuchMethod(
        Invocation.method(
          #clearImageName,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool matchesFilter(
    _i5.Id? id,
    String? filter, [
    _i58.BuildContext? context,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #matchesFilter,
          [
            id,
            filter,
            context,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  List<_i5.FishingSpot> listSortedByDisplayName(
    _i58.BuildContext? context, {
    String? filter,
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listSortedByDisplayName,
          [context],
          {
            #filter: filter,
            #ids: ids,
          },
        ),
        returnValue: <_i5.FishingSpot>[],
      ) as List<_i5.FishingSpot>);
  @override
  int numberOfCatches(_i5.Id? fishingSpotId) => (super.noSuchMethod(
        Invocation.method(
          #numberOfCatches,
          [fishingSpotId],
        ),
        returnValue: 0,
      ) as int);
  @override
  String deleteMessage(
    _i58.BuildContext? context,
    _i5.FishingSpot? fishingSpot,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMessage,
          [
            context,
            fishingSpot,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  _i2.Future<bool> addOrUpdate(
    _i5.FishingSpot? entity, {
    _i56.File? imageFile,
    bool? compressImages = true,
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrUpdate,
          [entity],
          {
            #imageFile: imageFile,
            #compressImages: compressImages,
            #notify: notify,
          },
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  int Function(
    _i5.FishingSpot,
    _i5.FishingSpot,
  ) displayNameComparator(_i58.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #displayNameComparator,
          [context],
        ),
        returnValue: (
          _i5.FishingSpot __p0,
          _i5.FishingSpot __p1,
        ) =>
            0,
      ) as int Function(
        _i5.FishingSpot,
        _i5.FishingSpot,
      ));
  @override
  bool nameExists(String? name) => (super.noSuchMethod(
        Invocation.method(
          #nameExists,
          [name],
        ),
        returnValue: false,
      ) as bool);
  @override
  String? displayNameFromId(
    _i58.BuildContext? context,
    _i5.Id? id,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #displayNameFromId,
        [
          context,
          id,
        ],
      )) as String?);
  @override
  _i2.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  bool idsMatchesFilter(
    List<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchesFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  Set<_i5.Id> idSet({
    Iterable<_i5.FishingSpot>? entities = const [],
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #idSet,
          [],
          {
            #entities: entities,
            #ids: ids,
          },
        ),
        returnValue: <_i5.Id>{},
      ) as Set<_i5.Id>);
  @override
  Map<String, _i5.FishingSpot> uuidMap() => (super.noSuchMethod(
        Invocation.method(
          #uuidMap,
          [],
        ),
        returnValue: <String, _i5.FishingSpot>{},
      ) as Map<String, _i5.FishingSpot>);
  @override
  List<_i5.FishingSpot> list([Iterable<_i5.Id>? ids = const []]) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [ids],
        ),
        returnValue: <_i5.FishingSpot>[],
      ) as List<_i5.FishingSpot>);
  @override
  List<_i5.FishingSpot> filteredList(
    String? filter, [
    Iterable<_i5.Id>? ids = const [],
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #filteredList,
          [
            filter,
            ids,
          ],
        ),
        returnValue: <_i5.FishingSpot>[],
      ) as List<_i5.FishingSpot>);
  @override
  bool idsMatchFilter(
    Iterable<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool entityExists(_i5.Id? id) => (super.noSuchMethod(
        Invocation.method(
          #entityExists,
          [id],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i2.Future<int> updateAll({
    required bool Function(_i5.FishingSpot)? where,
    required _i2.Future<void> Function(_i5.FishingSpot)? apply,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAll,
          [],
          {
            #where: where,
            #apply: apply,
          },
        ),
        returnValue: _i2.Future<int>.value(0),
      ) as _i2.Future<int>);
  @override
  _i2.Future<bool> delete(
    _i5.Id? entityId, {
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [entityId],
          {#notify: notify},
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  int numberOf<E extends _i69.GeneratedMessage>(
    _i5.Id? id,
    List<E>? items,
    bool Function(E)? matches, [
    int Function(E)? quantity,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #numberOf,
          [
            id,
            items,
            matches,
            quantity,
          ],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.FishingSpot>> listen(
          _i68.EntityListener<_i5.FishingSpot>? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #listen,
          [listener],
        ),
        returnValue:
            _FakeStreamSubscription_5<_i68.EntityEvent<_i5.FishingSpot>>(
          this,
          Invocation.method(
            #listen,
            [listener],
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.FishingSpot>>);
  @override
  void notifyAdd(_i5.FishingSpot? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyAdd,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyDelete(_i5.FishingSpot? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyDelete,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyUpdate(_i5.FishingSpot? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdate,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.FishingSpot>> addTypedListener({
    void Function(_i5.FishingSpot)? onAdd,
    void Function(_i5.FishingSpot)? onDelete,
    void Function(_i5.FishingSpot)? onUpdate,
    void Function()? onReset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTypedListener,
          [],
          {
            #onAdd: onAdd,
            #onDelete: onDelete,
            #onUpdate: onUpdate,
            #onReset: onReset,
          },
        ),
        returnValue:
            _FakeStreamSubscription_5<_i68.EntityEvent<_i5.FishingSpot>>(
          this,
          Invocation.method(
            #addTypedListener,
            [],
            {
              #onAdd: onAdd,
              #onDelete: onDelete,
              #onUpdate: onUpdate,
              #onReset: onReset,
            },
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.FishingSpot>>);
}

/// A class which mocks [GeolocatorWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockGeolocatorWrapper extends _i1.Mock implements _i32.GeolocatorWrapper {
  MockGeolocatorWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<_i75.Position?> getLastKnownPosition() => (super.noSuchMethod(
        Invocation.method(
          #getLastKnownPosition,
          [],
        ),
        returnValue: _i2.Future<_i75.Position?>.value(),
      ) as _i2.Future<_i75.Position?>);
  @override
  _i2.Stream<_i75.Position> getPositionStream(
          {_i75.LocationSettings? locationSettings}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPositionStream,
          [],
          {#locationSettings: locationSettings},
        ),
        returnValue: _i2.Stream<_i75.Position>.empty(),
      ) as _i2.Stream<_i75.Position>);
}

/// A class which mocks [GoogleSignIn].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignIn extends _i1.Mock implements _i55.GoogleSignIn {
  MockGoogleSignIn() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i55.SignInOption get signInOption => (super.noSuchMethod(
        Invocation.getter(#signInOption),
        returnValue: _i55.SignInOption.standard,
      ) as _i55.SignInOption);
  @override
  List<String> get scopes => (super.noSuchMethod(
        Invocation.getter(#scopes),
        returnValue: <String>[],
      ) as List<String>);
  @override
  bool get forceCodeForRefreshToken => (super.noSuchMethod(
        Invocation.getter(#forceCodeForRefreshToken),
        returnValue: false,
      ) as bool);
  @override
  _i2.Stream<_i55.GoogleSignInAccount?> get onCurrentUserChanged =>
      (super.noSuchMethod(
        Invocation.getter(#onCurrentUserChanged),
        returnValue: _i2.Stream<_i55.GoogleSignInAccount?>.empty(),
      ) as _i2.Stream<_i55.GoogleSignInAccount?>);
  @override
  _i2.Future<_i55.GoogleSignInAccount?> signInSilently({
    bool? suppressErrors = true,
    bool? reAuthenticate = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInSilently,
          [],
          {
            #suppressErrors: suppressErrors,
            #reAuthenticate: reAuthenticate,
          },
        ),
        returnValue: _i2.Future<_i55.GoogleSignInAccount?>.value(),
      ) as _i2.Future<_i55.GoogleSignInAccount?>);
  @override
  _i2.Future<bool> isSignedIn() => (super.noSuchMethod(
        Invocation.method(
          #isSignedIn,
          [],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<_i55.GoogleSignInAccount?> signIn() => (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [],
        ),
        returnValue: _i2.Future<_i55.GoogleSignInAccount?>.value(),
      ) as _i2.Future<_i55.GoogleSignInAccount?>);
  @override
  _i2.Future<_i55.GoogleSignInAccount?> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i2.Future<_i55.GoogleSignInAccount?>.value(),
      ) as _i2.Future<_i55.GoogleSignInAccount?>);
  @override
  _i2.Future<_i55.GoogleSignInAccount?> disconnect() => (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
        ),
        returnValue: _i2.Future<_i55.GoogleSignInAccount?>.value(),
      ) as _i2.Future<_i55.GoogleSignInAccount?>);
  @override
  _i2.Future<bool> requestScopes(List<String>? scopes) => (super.noSuchMethod(
        Invocation.method(
          #requestScopes,
          [scopes],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
}

/// A class which mocks [GoogleSignInAccount].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockGoogleSignInAccount extends _i1.Mock
    implements _i55.GoogleSignInAccount {
  MockGoogleSignInAccount() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get email => (super.noSuchMethod(
        Invocation.getter(#email),
        returnValue: '',
      ) as String);
  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: '',
      ) as String);
  @override
  _i2.Future<_i55.GoogleSignInAuthentication> get authentication =>
      (super.noSuchMethod(
        Invocation.getter(#authentication),
        returnValue: _i2.Future<_i55.GoogleSignInAuthentication>.value(
            _FakeGoogleSignInAuthentication_79(
          this,
          Invocation.getter(#authentication),
        )),
      ) as _i2.Future<_i55.GoogleSignInAuthentication>);
  @override
  _i2.Future<Map<String, String>> get authHeaders => (super.noSuchMethod(
        Invocation.getter(#authHeaders),
        returnValue: _i2.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i2.Future<Map<String, String>>);
  @override
  _i2.Future<void> clearAuthCache() => (super.noSuchMethod(
        Invocation.method(
          #clearAuthCache,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
}

/// A class which mocks [GpsTrailManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockGpsTrailManager extends _i1.Mock implements _i15.GpsTrailManager {
  MockGpsTrailManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get tableName => (super.noSuchMethod(
        Invocation.getter(#tableName),
        returnValue: '',
      ) as String);
  @override
  bool get hasActiveTrail => (super.noSuchMethod(
        Invocation.getter(#hasActiveTrail),
        returnValue: false,
      ) as bool);
  @override
  _i2.StreamController<_i68.EntityEvent<_i5.GpsTrail>> get controller =>
      (super.noSuchMethod(
        Invocation.getter(#controller),
        returnValue: _FakeStreamController_0<_i68.EntityEvent<_i5.GpsTrail>>(
          this,
          Invocation.getter(#controller),
        ),
      ) as _i2.StreamController<_i68.EntityEvent<_i5.GpsTrail>>);
  @override
  Map<_i5.Id, _i5.GpsTrail> get entities => (super.noSuchMethod(
        Invocation.getter(#entities),
        returnValue: <_i5.Id, _i5.GpsTrail>{},
      ) as Map<_i5.Id, _i5.GpsTrail>);
  @override
  _i3.AppManager get appManager => (super.noSuchMethod(
        Invocation.getter(#appManager),
        returnValue: _FakeAppManager_1(
          this,
          Invocation.getter(#appManager),
        ),
      ) as _i3.AppManager);
  @override
  _i4.LocalDatabaseManager get localDatabaseManager => (super.noSuchMethod(
        Invocation.getter(#localDatabaseManager),
        returnValue: _FakeLocalDatabaseManager_2(
          this,
          Invocation.getter(#localDatabaseManager),
        ),
      ) as _i4.LocalDatabaseManager);
  @override
  int get entityCount => (super.noSuchMethod(
        Invocation.getter(#entityCount),
        returnValue: 0,
      ) as int);
  @override
  bool get hasEntities => (super.noSuchMethod(
        Invocation.getter(#hasEntities),
        returnValue: false,
      ) as bool);
  @override
  _i2.Stream<_i68.EntityEvent<_i5.GpsTrail>> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i2.Stream<_i68.EntityEvent<_i5.GpsTrail>>.empty(),
      ) as _i2.Stream<_i68.EntityEvent<_i5.GpsTrail>>);
  @override
  _i2.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  String displayName(
    _i58.BuildContext? context,
    _i5.GpsTrail? entity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #displayName,
          [
            context,
            entity,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  _i5.GpsTrail entityFromBytes(List<int>? bytes) => (super.noSuchMethod(
        Invocation.method(
          #entityFromBytes,
          [bytes],
        ),
        returnValue: _FakeGpsTrail_80(
          this,
          Invocation.method(
            #entityFromBytes,
            [bytes],
          ),
        ),
      ) as _i5.GpsTrail);
  @override
  _i5.Id id(_i5.GpsTrail? entity) => (super.noSuchMethod(
        Invocation.method(
          #id,
          [entity],
        ),
        returnValue: _FakeId_4(
          this,
          Invocation.method(
            #id,
            [entity],
          ),
        ),
      ) as _i5.Id);
  @override
  bool matchesFilter(
    _i5.Id? id,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #matchesFilter,
          [
            id,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i2.Future<void> startTracking(_i58.BuildContext? context) =>
      (super.noSuchMethod(
        Invocation.method(
          #startTracking,
          [context],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> stopTracking() => (super.noSuchMethod(
        Invocation.method(
          #stopTracking,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  List<_i5.GpsTrail> gpsTrails({String? filter}) => (super.noSuchMethod(
        Invocation.method(
          #gpsTrails,
          [],
          {#filter: filter},
        ),
        returnValue: <_i5.GpsTrail>[],
      ) as List<_i5.GpsTrail>);
  @override
  int numberOfTrips(_i5.Id? trailId) => (super.noSuchMethod(
        Invocation.method(
          #numberOfTrips,
          [trailId],
        ),
        returnValue: 0,
      ) as int);
  @override
  String deleteMessage(
    _i58.BuildContext? context,
    _i5.GpsTrail? trail,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMessage,
          [
            context,
            trail,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  String? displayNameFromId(
    _i58.BuildContext? context,
    _i5.Id? id,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #displayNameFromId,
        [
          context,
          id,
        ],
      )) as String?);
  @override
  bool idsMatchesFilter(
    List<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchesFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  Set<_i5.Id> idSet({
    Iterable<_i5.GpsTrail>? entities = const [],
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #idSet,
          [],
          {
            #entities: entities,
            #ids: ids,
          },
        ),
        returnValue: <_i5.Id>{},
      ) as Set<_i5.Id>);
  @override
  Map<String, _i5.GpsTrail> uuidMap() => (super.noSuchMethod(
        Invocation.method(
          #uuidMap,
          [],
        ),
        returnValue: <String, _i5.GpsTrail>{},
      ) as Map<String, _i5.GpsTrail>);
  @override
  List<_i5.GpsTrail> list([Iterable<_i5.Id>? ids = const []]) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [ids],
        ),
        returnValue: <_i5.GpsTrail>[],
      ) as List<_i5.GpsTrail>);
  @override
  List<_i5.GpsTrail> filteredList(
    String? filter, [
    Iterable<_i5.Id>? ids = const [],
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #filteredList,
          [
            filter,
            ids,
          ],
        ),
        returnValue: <_i5.GpsTrail>[],
      ) as List<_i5.GpsTrail>);
  @override
  bool idsMatchFilter(
    Iterable<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool entityExists(_i5.Id? id) => (super.noSuchMethod(
        Invocation.method(
          #entityExists,
          [id],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i2.Future<bool> addOrUpdate(
    _i5.GpsTrail? entity, {
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrUpdate,
          [entity],
          {#notify: notify},
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<int> updateAll({
    required bool Function(_i5.GpsTrail)? where,
    required _i2.Future<void> Function(_i5.GpsTrail)? apply,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAll,
          [],
          {
            #where: where,
            #apply: apply,
          },
        ),
        returnValue: _i2.Future<int>.value(0),
      ) as _i2.Future<int>);
  @override
  _i2.Future<bool> delete(
    _i5.Id? entityId, {
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [entityId],
          {#notify: notify},
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  int numberOf<E extends _i69.GeneratedMessage>(
    _i5.Id? id,
    List<E>? items,
    bool Function(E)? matches, [
    int Function(E)? quantity,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #numberOf,
          [
            id,
            items,
            matches,
            quantity,
          ],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.GpsTrail>> listen(
          _i68.EntityListener<_i5.GpsTrail>? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #listen,
          [listener],
        ),
        returnValue: _FakeStreamSubscription_5<_i68.EntityEvent<_i5.GpsTrail>>(
          this,
          Invocation.method(
            #listen,
            [listener],
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.GpsTrail>>);
  @override
  void notifyAdd(_i5.GpsTrail? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyAdd,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyDelete(_i5.GpsTrail? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyDelete,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyUpdate(_i5.GpsTrail? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdate,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.GpsTrail>> addTypedListener({
    void Function(_i5.GpsTrail)? onAdd,
    void Function(_i5.GpsTrail)? onDelete,
    void Function(_i5.GpsTrail)? onUpdate,
    void Function()? onReset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTypedListener,
          [],
          {
            #onAdd: onAdd,
            #onDelete: onDelete,
            #onUpdate: onUpdate,
            #onReset: onReset,
          },
        ),
        returnValue: _FakeStreamSubscription_5<_i68.EntityEvent<_i5.GpsTrail>>(
          this,
          Invocation.method(
            #addTypedListener,
            [],
            {
              #onAdd: onAdd,
              #onDelete: onDelete,
              #onUpdate: onUpdate,
              #onReset: onReset,
            },
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.GpsTrail>>);
}

/// A class which mocks [ImageManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockImageManager extends _i1.Mock implements _i16.ImageManager {
  MockImageManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<List<String>> get imageFiles => (super.noSuchMethod(
        Invocation.getter(#imageFiles),
        returnValue: _i2.Future<List<String>>.value(<String>[]),
      ) as _i2.Future<List<String>>);
  @override
  _i2.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  String imagePath(String? name) => (super.noSuchMethod(
        Invocation.method(
          #imagePath,
          [name],
        ),
        returnValue: '',
      ) as String);
  @override
  List<_i76.XFile> imageXFiles(List<String>? names) => (super.noSuchMethod(
        Invocation.method(
          #imageXFiles,
          [names],
        ),
        returnValue: <_i76.XFile>[],
      ) as List<_i76.XFile>);
  @override
  _i56.File imageFile(String? name) => (super.noSuchMethod(
        Invocation.method(
          #imageFile,
          [name],
        ),
        returnValue: _FakeFile_81(
          this,
          Invocation.method(
            #imageFile,
            [name],
          ),
        ),
      ) as _i56.File);
  @override
  _i2.Future<_i73.Uint8List?> image({
    required String? fileName,
    double? size,
    double? devicePixelRatio,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #image,
          [],
          {
            #fileName: fileName,
            #size: size,
            #devicePixelRatio: devicePixelRatio,
          },
        ),
        returnValue: _i2.Future<_i73.Uint8List?>.value(),
      ) as _i2.Future<_i73.Uint8List?>);
  @override
  _i2.Future<Map<_i56.File, _i73.Uint8List>> images({
    required List<String>? imageNames,
    double? size,
    double? devicePixelRatio,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #images,
          [],
          {
            #imageNames: imageNames,
            #size: size,
            #devicePixelRatio: devicePixelRatio,
          },
        ),
        returnValue: _i2.Future<Map<_i56.File, _i73.Uint8List>>.value(
            <_i56.File, _i73.Uint8List>{}),
      ) as _i2.Future<Map<_i56.File, _i73.Uint8List>>);
  @override
  _i2.Future<List<String>> save(
    List<_i56.File>? files, {
    bool? compress = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #save,
          [files],
          {#compress: compress},
        ),
        returnValue: _i2.Future<List<String>>.value(<String>[]),
      ) as _i2.Future<List<String>>);
  @override
  _i2.Future<bool> saveImageBytes(
    _i73.Uint8List? bytes,
    String? imageName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveImageBytes,
          [
            bytes,
            imageName,
          ],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
}

/// A class which mocks [InputController].
///
/// See the documentation for Mockito's code generation for more information.
class MockInputController<T> extends _i1.Mock
    implements _i67.InputController<T> {
  MockInputController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set error(String? _error) => super.noSuchMethod(
        Invocation.setter(
          #error,
          _error,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasValue => (super.noSuchMethod(
        Invocation.getter(#hasValue),
        returnValue: false,
      ) as bool);
  @override
  set value(T? newValue) => super.noSuchMethod(
        Invocation.setter(
          #value,
          newValue,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void clear() => super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(_i77.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i77.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [IOSink].
///
/// See the documentation for Mockito's code generation for more information.
class MockIOSink extends _i1.Mock implements _i56.IOSink {
  MockIOSink() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i57.Encoding get encoding => (super.noSuchMethod(
        Invocation.getter(#encoding),
        returnValue: _FakeEncoding_82(
          this,
          Invocation.getter(#encoding),
        ),
      ) as _i57.Encoding);
  @override
  set encoding(_i57.Encoding? _encoding) => super.noSuchMethod(
        Invocation.setter(
          #encoding,
          _encoding,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.Future<dynamic> get done => (super.noSuchMethod(
        Invocation.getter(#done),
        returnValue: _i2.Future<dynamic>.value(),
      ) as _i2.Future<dynamic>);
  @override
  void add(List<int>? data) => super.noSuchMethod(
        Invocation.method(
          #add,
          [data],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void write(Object? object) => super.noSuchMethod(
        Invocation.method(
          #write,
          [object],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void writeAll(
    Iterable<dynamic>? objects, [
    String? separator = r'',
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #writeAll,
          [
            objects,
            separator,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void writeln([Object? object = r'']) => super.noSuchMethod(
        Invocation.method(
          #writeln,
          [object],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void writeCharCode(int? charCode) => super.noSuchMethod(
        Invocation.method(
          #writeCharCode,
          [charCode],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.Future<dynamic> addStream(_i2.Stream<List<int>>? stream) =>
      (super.noSuchMethod(
        Invocation.method(
          #addStream,
          [stream],
        ),
        returnValue: _i2.Future<dynamic>.value(),
      ) as _i2.Future<dynamic>);
  @override
  _i2.Future<dynamic> flush() => (super.noSuchMethod(
        Invocation.method(
          #flush,
          [],
        ),
        returnValue: _i2.Future<dynamic>.value(),
      ) as _i2.Future<dynamic>);
  @override
  _i2.Future<dynamic> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i2.Future<dynamic>.value(),
      ) as _i2.Future<dynamic>);
}

/// A class which mocks [LocalDatabaseManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDatabaseManager extends _i1.Mock
    implements _i4.LocalDatabaseManager {
  MockLocalDatabaseManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<void> initialize({_i66.Database? database}) => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
          {#database: database},
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> closeAndDeleteDatabase() => (super.noSuchMethod(
        Invocation.method(
          #closeAndDeleteDatabase,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> resetDatabase() => (super.noSuchMethod(
        Invocation.method(
          #resetDatabase,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  String databasePath() => (super.noSuchMethod(
        Invocation.method(
          #databasePath,
          [],
        ),
        returnValue: '',
      ) as String);
  @override
  _i2.Future<List<dynamic>> commitBatch(void Function(_i66.Batch)? execute) =>
      (super.noSuchMethod(
        Invocation.method(
          #commitBatch,
          [execute],
        ),
        returnValue: _i2.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i2.Future<List<dynamic>>);
  @override
  _i2.Future<bool> insert(
    String? tableName,
    Map<String, dynamic>? values,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #insert,
          [
            tableName,
            values,
          ],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<bool> insertOrReplace(
    String? tableName,
    Map<String, dynamic>? values, [
    _i66.Batch? batch,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertOrReplace,
          [
            tableName,
            values,
            batch,
          ],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<bool> delete(
    String? table, {
    String? where,
    List<dynamic>? whereArgs,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
          {
            #where: where,
            #whereArgs: whereArgs,
          },
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<List<Map<String, dynamic>>> query(
    String? sql, [
    List<dynamic>? args,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #query,
          [
            sql,
            args,
          ],
        ),
        returnValue: _i2.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i2.Future<List<Map<String, dynamic>>>);
  @override
  _i2.Future<bool> rawExists(
    String? query, [
    List<dynamic>? args,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #rawExists,
          [
            query,
            args,
          ],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<bool> rawUpdate(
    String? query, [
    List<dynamic>? args,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #rawUpdate,
          [
            query,
            args,
          ],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<bool> deleteEntity(
    _i5.Id? entityId,
    String? tableName, [
    _i66.Batch? batch,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteEntity,
          [
            entityId,
            tableName,
            batch,
          ],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<List<Map<String, dynamic>>> fetchAll(String? tableName) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAll,
          [tableName],
        ),
        returnValue: _i2.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i2.Future<List<Map<String, dynamic>>>);
  @override
  _i2.Future<void> replaceRows(
    String? tableName,
    List<Map<String, dynamic>>? newRows,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceRows,
          [
            tableName,
            newRows,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> commitTransaction(void Function(_i66.Batch)? updateBatch) =>
      (super.noSuchMethod(
        Invocation.method(
          #commitTransaction,
          [updateBatch],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
}

/// A class which mocks [LocationMonitor].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationMonitor extends _i1.Mock implements _i17.LocationMonitor {
  MockLocationMonitor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Stream<_i17.LocationPoint> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i2.Stream<_i17.LocationPoint>.empty(),
      ) as _i2.Stream<_i17.LocationPoint>);
  @override
  _i2.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> enableBackgroundMode(String? notificationDescription) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableBackgroundMode,
          [notificationDescription],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  void disableBackgroundMode() => super.noSuchMethod(
        Invocation.method(
          #disableBackgroundMode,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Log].
///
/// See the documentation for Mockito's code generation for more information.
class MockLog extends _i1.Mock implements _i78.Log {
  MockLog() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void d(String? msg) => super.noSuchMethod(
        Invocation.method(
          #d,
          [msg],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void e(
    StackTrace? stackTrace,
    String? msg,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #e,
          [
            stackTrace,
            msg,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void w(String? msg) => super.noSuchMethod(
        Invocation.method(
          #w,
          [msg],
        ),
        returnValueForMissingStub: null,
      );
  @override
  T sync<T>(
    String? tag,
    int? msThreshold,
    T Function()? work,
  ) =>
      throw UnsupportedError(
          r'"sync" cannot be used without a mockito fallback generator.');
  @override
  _i2.Future<T> async<T>(
    String? tag,
    int? msThreshold,
    _i2.Future<T>? work,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #async,
          [
            tag,
            msThreshold,
            work,
          ],
        ),
        returnValue: _FakeFuture_83<T>(
          this,
          Invocation.method(
            #async,
            [
              tag,
              msThreshold,
              work,
            ],
          ),
        ),
      ) as _i2.Future<T>);
}

/// A class which mocks [MethodManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockMethodManager extends _i1.Mock implements _i18.MethodManager {
  MockMethodManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get tableName => (super.noSuchMethod(
        Invocation.getter(#tableName),
        returnValue: '',
      ) as String);
  @override
  _i2.StreamController<_i68.EntityEvent<_i5.Method>> get controller =>
      (super.noSuchMethod(
        Invocation.getter(#controller),
        returnValue: _FakeStreamController_0<_i68.EntityEvent<_i5.Method>>(
          this,
          Invocation.getter(#controller),
        ),
      ) as _i2.StreamController<_i68.EntityEvent<_i5.Method>>);
  @override
  Map<_i5.Id, _i5.Method> get entities => (super.noSuchMethod(
        Invocation.getter(#entities),
        returnValue: <_i5.Id, _i5.Method>{},
      ) as Map<_i5.Id, _i5.Method>);
  @override
  _i3.AppManager get appManager => (super.noSuchMethod(
        Invocation.getter(#appManager),
        returnValue: _FakeAppManager_1(
          this,
          Invocation.getter(#appManager),
        ),
      ) as _i3.AppManager);
  @override
  _i4.LocalDatabaseManager get localDatabaseManager => (super.noSuchMethod(
        Invocation.getter(#localDatabaseManager),
        returnValue: _FakeLocalDatabaseManager_2(
          this,
          Invocation.getter(#localDatabaseManager),
        ),
      ) as _i4.LocalDatabaseManager);
  @override
  int get entityCount => (super.noSuchMethod(
        Invocation.getter(#entityCount),
        returnValue: 0,
      ) as int);
  @override
  bool get hasEntities => (super.noSuchMethod(
        Invocation.getter(#hasEntities),
        returnValue: false,
      ) as bool);
  @override
  _i2.Stream<_i68.EntityEvent<_i5.Method>> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i2.Stream<_i68.EntityEvent<_i5.Method>>.empty(),
      ) as _i2.Stream<_i68.EntityEvent<_i5.Method>>);
  @override
  _i5.Method entityFromBytes(List<int>? bytes) => (super.noSuchMethod(
        Invocation.method(
          #entityFromBytes,
          [bytes],
        ),
        returnValue: _FakeMethod_84(
          this,
          Invocation.method(
            #entityFromBytes,
            [bytes],
          ),
        ),
      ) as _i5.Method);
  @override
  _i5.Id id(_i5.Method? entity) => (super.noSuchMethod(
        Invocation.method(
          #id,
          [entity],
        ),
        returnValue: _FakeId_4(
          this,
          Invocation.method(
            #id,
            [entity],
          ),
        ),
      ) as _i5.Id);
  @override
  String name(_i5.Method? entity) => (super.noSuchMethod(
        Invocation.method(
          #name,
          [entity],
        ),
        returnValue: '',
      ) as String);
  @override
  int numberOfCatches(_i5.Id? methodId) => (super.noSuchMethod(
        Invocation.method(
          #numberOfCatches,
          [methodId],
        ),
        returnValue: 0,
      ) as int);
  @override
  String deleteMessage(
    _i58.BuildContext? context,
    _i5.Method? method,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMessage,
          [
            context,
            method,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  int Function(
    _i5.Method,
    _i5.Method,
  ) displayNameComparator(_i58.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #displayNameComparator,
          [context],
        ),
        returnValue: (
          _i5.Method __p0,
          _i5.Method __p1,
        ) =>
            0,
      ) as int Function(
        _i5.Method,
        _i5.Method,
      ));
  @override
  List<_i5.Method> listSortedByDisplayName(
    _i58.BuildContext? context, {
    String? filter,
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listSortedByDisplayName,
          [context],
          {
            #filter: filter,
            #ids: ids,
          },
        ),
        returnValue: <_i5.Method>[],
      ) as List<_i5.Method>);
  @override
  String displayName(
    _i58.BuildContext? context,
    _i5.Method? entity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #displayName,
          [
            context,
            entity,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  bool matchesFilter(
    _i5.Id? id,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #matchesFilter,
          [
            id,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool nameExists(String? name) => (super.noSuchMethod(
        Invocation.method(
          #nameExists,
          [name],
        ),
        returnValue: false,
      ) as bool);
  @override
  String? displayNameFromId(
    _i58.BuildContext? context,
    _i5.Id? id,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #displayNameFromId,
        [
          context,
          id,
        ],
      )) as String?);
  @override
  _i2.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  bool idsMatchesFilter(
    List<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchesFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  Set<_i5.Id> idSet({
    Iterable<_i5.Method>? entities = const [],
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #idSet,
          [],
          {
            #entities: entities,
            #ids: ids,
          },
        ),
        returnValue: <_i5.Id>{},
      ) as Set<_i5.Id>);
  @override
  Map<String, _i5.Method> uuidMap() => (super.noSuchMethod(
        Invocation.method(
          #uuidMap,
          [],
        ),
        returnValue: <String, _i5.Method>{},
      ) as Map<String, _i5.Method>);
  @override
  List<_i5.Method> list([Iterable<_i5.Id>? ids = const []]) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [ids],
        ),
        returnValue: <_i5.Method>[],
      ) as List<_i5.Method>);
  @override
  List<_i5.Method> filteredList(
    String? filter, [
    Iterable<_i5.Id>? ids = const [],
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #filteredList,
          [
            filter,
            ids,
          ],
        ),
        returnValue: <_i5.Method>[],
      ) as List<_i5.Method>);
  @override
  bool idsMatchFilter(
    Iterable<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool entityExists(_i5.Id? id) => (super.noSuchMethod(
        Invocation.method(
          #entityExists,
          [id],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i2.Future<bool> addOrUpdate(
    _i5.Method? entity, {
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrUpdate,
          [entity],
          {#notify: notify},
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<int> updateAll({
    required bool Function(_i5.Method)? where,
    required _i2.Future<void> Function(_i5.Method)? apply,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAll,
          [],
          {
            #where: where,
            #apply: apply,
          },
        ),
        returnValue: _i2.Future<int>.value(0),
      ) as _i2.Future<int>);
  @override
  _i2.Future<bool> delete(
    _i5.Id? entityId, {
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [entityId],
          {#notify: notify},
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  int numberOf<E extends _i69.GeneratedMessage>(
    _i5.Id? id,
    List<E>? items,
    bool Function(E)? matches, [
    int Function(E)? quantity,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #numberOf,
          [
            id,
            items,
            matches,
            quantity,
          ],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.Method>> listen(
          _i68.EntityListener<_i5.Method>? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #listen,
          [listener],
        ),
        returnValue: _FakeStreamSubscription_5<_i68.EntityEvent<_i5.Method>>(
          this,
          Invocation.method(
            #listen,
            [listener],
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.Method>>);
  @override
  void notifyAdd(_i5.Method? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyAdd,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyDelete(_i5.Method? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyDelete,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyUpdate(_i5.Method? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdate,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.Method>> addTypedListener({
    void Function(_i5.Method)? onAdd,
    void Function(_i5.Method)? onDelete,
    void Function(_i5.Method)? onUpdate,
    void Function()? onReset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTypedListener,
          [],
          {
            #onAdd: onAdd,
            #onDelete: onDelete,
            #onUpdate: onUpdate,
            #onReset: onReset,
          },
        ),
        returnValue: _FakeStreamSubscription_5<_i68.EntityEvent<_i5.Method>>(
          this,
          Invocation.method(
            #addTypedListener,
            [],
            {
              #onAdd: onAdd,
              #onDelete: onDelete,
              #onUpdate: onUpdate,
              #onReset: onReset,
            },
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.Method>>);
}

/// A class which mocks [PlatformException].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlatformException extends _i1.Mock implements _i64.PlatformException {
  MockPlatformException() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get code => (super.noSuchMethod(
        Invocation.getter(#code),
        returnValue: '',
      ) as String);
}

/// A class which mocks [PollManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockPollManager extends _i1.Mock implements _i19.PollManager {
  MockPollManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set freePoll(_i19.Poll? _freePoll) => super.noSuchMethod(
        Invocation.setter(
          #freePoll,
          _freePoll,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set proPoll(_i19.Poll? _proPoll) => super.noSuchMethod(
        Invocation.setter(
          #proPoll,
          _proPoll,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.Stream<void> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i2.Stream<void>.empty(),
      ) as _i2.Stream<void>);
  @override
  bool get canVote => (super.noSuchMethod(
        Invocation.getter(#canVote),
        returnValue: false,
      ) as bool);
  @override
  bool get canVoteFree => (super.noSuchMethod(
        Invocation.getter(#canVoteFree),
        returnValue: false,
      ) as bool);
  @override
  bool get canVotePro => (super.noSuchMethod(
        Invocation.getter(#canVotePro),
        returnValue: false,
      ) as bool);
  @override
  _i2.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> fetchPolls() => (super.noSuchMethod(
        Invocation.method(
          #fetchPolls,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<bool> vote(
    _i19.PollType? type,
    String? feature,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #vote,
          [
            type,
            feature,
          ],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
}

/// A class which mocks [PreferenceManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockPreferenceManager extends _i1.Mock implements _i79.PreferenceManager {
  MockPreferenceManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, dynamic> get preferences => (super.noSuchMethod(
        Invocation.getter(#preferences),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  _i3.AppManager get appManager => (super.noSuchMethod(
        Invocation.getter(#appManager),
        returnValue: _FakeAppManager_1(
          this,
          Invocation.getter(#appManager),
        ),
      ) as _i3.AppManager);
  @override
  String get tableName => (super.noSuchMethod(
        Invocation.getter(#tableName),
        returnValue: '',
      ) as String);
  @override
  _i2.Stream<String> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i2.Stream<String>.empty(),
      ) as _i2.Stream<String>);
  @override
  _i2.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> put(
    String? key,
    dynamic value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [
            key,
            value,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  void putLocal(
    String? key,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #putLocal,
          [
            key,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void putStringList(
    String? key,
    List<String>? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #putStringList,
          [
            key,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<String> stringList(String? key) => (super.noSuchMethod(
        Invocation.method(
          #stringList,
          [key],
        ),
        returnValue: <String>[],
      ) as List<String>);
  @override
  _i2.Future<void> putId(
    String? key,
    _i5.Id? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #putId,
          [
            key,
            value,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i5.Id? id(String? key) => (super.noSuchMethod(Invocation.method(
        #id,
        [key],
      )) as _i5.Id?);
  @override
  _i2.Future<void> putIdCollection(
    String? key,
    Iterable<_i5.Id>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #putIdCollection,
          [
            key,
            value,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  List<_i5.Id> idList(String? key) => (super.noSuchMethod(
        Invocation.method(
          #idList,
          [key],
        ),
        returnValue: <_i5.Id>[],
      ) as List<_i5.Id>);
}

/// A class which mocks [PropertiesManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockPropertiesManager extends _i1.Mock implements _i20.PropertiesManager {
  MockPropertiesManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get clientSenderEmail => (super.noSuchMethod(
        Invocation.getter(#clientSenderEmail),
        returnValue: '',
      ) as String);
  @override
  String get supportEmail => (super.noSuchMethod(
        Invocation.getter(#supportEmail),
        returnValue: '',
      ) as String);
  @override
  String get sendGridApiKey => (super.noSuchMethod(
        Invocation.getter(#sendGridApiKey),
        returnValue: '',
      ) as String);
  @override
  String get revenueCatApiKey => (super.noSuchMethod(
        Invocation.getter(#revenueCatApiKey),
        returnValue: '',
      ) as String);
  @override
  String get visualCrossingApiKey => (super.noSuchMethod(
        Invocation.getter(#visualCrossingApiKey),
        returnValue: '',
      ) as String);
  @override
  String get mapboxApiKey => (super.noSuchMethod(
        Invocation.getter(#mapboxApiKey),
        returnValue: '',
      ) as String);
  @override
  String get worldTidesApiKey => (super.noSuchMethod(
        Invocation.getter(#worldTidesApiKey),
        returnValue: '',
      ) as String);
  @override
  String get firebaseSecret => (super.noSuchMethod(
        Invocation.getter(#firebaseSecret),
        returnValue: '',
      ) as String);
  @override
  String get feedbackTemplate => (super.noSuchMethod(
        Invocation.getter(#feedbackTemplate),
        returnValue: '',
      ) as String);
  @override
  _i2.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
}

/// A class which mocks [ReportManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockReportManager extends _i1.Mock implements _i21.ReportManager {
  MockReportManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get tableName => (super.noSuchMethod(
        Invocation.getter(#tableName),
        returnValue: '',
      ) as String);
  @override
  List<_i5.Report> get defaultReports => (super.noSuchMethod(
        Invocation.getter(#defaultReports),
        returnValue: <_i5.Report>[],
      ) as List<_i5.Report>);
  @override
  _i5.Report get defaultReport => (super.noSuchMethod(
        Invocation.getter(#defaultReport),
        returnValue: _FakeReport_85(
          this,
          Invocation.getter(#defaultReport),
        ),
      ) as _i5.Report);
  @override
  _i2.StreamController<_i68.EntityEvent<_i5.Report>> get controller =>
      (super.noSuchMethod(
        Invocation.getter(#controller),
        returnValue: _FakeStreamController_0<_i68.EntityEvent<_i5.Report>>(
          this,
          Invocation.getter(#controller),
        ),
      ) as _i2.StreamController<_i68.EntityEvent<_i5.Report>>);
  @override
  Map<_i5.Id, _i5.Report> get entities => (super.noSuchMethod(
        Invocation.getter(#entities),
        returnValue: <_i5.Id, _i5.Report>{},
      ) as Map<_i5.Id, _i5.Report>);
  @override
  _i3.AppManager get appManager => (super.noSuchMethod(
        Invocation.getter(#appManager),
        returnValue: _FakeAppManager_1(
          this,
          Invocation.getter(#appManager),
        ),
      ) as _i3.AppManager);
  @override
  _i4.LocalDatabaseManager get localDatabaseManager => (super.noSuchMethod(
        Invocation.getter(#localDatabaseManager),
        returnValue: _FakeLocalDatabaseManager_2(
          this,
          Invocation.getter(#localDatabaseManager),
        ),
      ) as _i4.LocalDatabaseManager);
  @override
  int get entityCount => (super.noSuchMethod(
        Invocation.getter(#entityCount),
        returnValue: 0,
      ) as int);
  @override
  bool get hasEntities => (super.noSuchMethod(
        Invocation.getter(#hasEntities),
        returnValue: false,
      ) as bool);
  @override
  _i2.Stream<_i68.EntityEvent<_i5.Report>> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i2.Stream<_i68.EntityEvent<_i5.Report>>.empty(),
      ) as _i2.Stream<_i68.EntityEvent<_i5.Report>>);
  @override
  _i2.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i5.Report entityFromBytes(List<int>? bytes) => (super.noSuchMethod(
        Invocation.method(
          #entityFromBytes,
          [bytes],
        ),
        returnValue: _FakeReport_85(
          this,
          Invocation.method(
            #entityFromBytes,
            [bytes],
          ),
        ),
      ) as _i5.Report);
  @override
  _i5.Id id(_i5.Report? entity) => (super.noSuchMethod(
        Invocation.method(
          #id,
          [entity],
        ),
        returnValue: _FakeId_4(
          this,
          Invocation.method(
            #id,
            [entity],
          ),
        ),
      ) as _i5.Id);
  @override
  String name(_i5.Report? entity) => (super.noSuchMethod(
        Invocation.method(
          #name,
          [entity],
        ),
        returnValue: '',
      ) as String);
  @override
  String displayName(
    _i58.BuildContext? context,
    _i5.Report? entity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #displayName,
          [
            context,
            entity,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  int Function(
    _i5.Report,
    _i5.Report,
  ) displayNameComparator(_i58.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #displayNameComparator,
          [context],
        ),
        returnValue: (
          _i5.Report __p0,
          _i5.Report __p1,
        ) =>
            0,
      ) as int Function(
        _i5.Report,
        _i5.Report,
      ));
  @override
  List<_i5.Report> listSortedByDisplayName(
    _i58.BuildContext? context, {
    String? filter,
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listSortedByDisplayName,
          [context],
          {
            #filter: filter,
            #ids: ids,
          },
        ),
        returnValue: <_i5.Report>[],
      ) as List<_i5.Report>);
  @override
  bool matchesFilter(
    _i5.Id? id,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #matchesFilter,
          [
            id,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool nameExists(String? name) => (super.noSuchMethod(
        Invocation.method(
          #nameExists,
          [name],
        ),
        returnValue: false,
      ) as bool);
  @override
  String? displayNameFromId(
    _i58.BuildContext? context,
    _i5.Id? id,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #displayNameFromId,
        [
          context,
          id,
        ],
      )) as String?);
  @override
  bool idsMatchesFilter(
    List<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchesFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  Set<_i5.Id> idSet({
    Iterable<_i5.Report>? entities = const [],
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #idSet,
          [],
          {
            #entities: entities,
            #ids: ids,
          },
        ),
        returnValue: <_i5.Id>{},
      ) as Set<_i5.Id>);
  @override
  Map<String, _i5.Report> uuidMap() => (super.noSuchMethod(
        Invocation.method(
          #uuidMap,
          [],
        ),
        returnValue: <String, _i5.Report>{},
      ) as Map<String, _i5.Report>);
  @override
  List<_i5.Report> list([Iterable<_i5.Id>? ids = const []]) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [ids],
        ),
        returnValue: <_i5.Report>[],
      ) as List<_i5.Report>);
  @override
  List<_i5.Report> filteredList(
    String? filter, [
    Iterable<_i5.Id>? ids = const [],
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #filteredList,
          [
            filter,
            ids,
          ],
        ),
        returnValue: <_i5.Report>[],
      ) as List<_i5.Report>);
  @override
  bool idsMatchFilter(
    Iterable<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool entityExists(_i5.Id? id) => (super.noSuchMethod(
        Invocation.method(
          #entityExists,
          [id],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i2.Future<bool> addOrUpdate(
    _i5.Report? entity, {
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrUpdate,
          [entity],
          {#notify: notify},
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<int> updateAll({
    required bool Function(_i5.Report)? where,
    required _i2.Future<void> Function(_i5.Report)? apply,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAll,
          [],
          {
            #where: where,
            #apply: apply,
          },
        ),
        returnValue: _i2.Future<int>.value(0),
      ) as _i2.Future<int>);
  @override
  _i2.Future<bool> delete(
    _i5.Id? entityId, {
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [entityId],
          {#notify: notify},
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  int numberOf<E extends _i69.GeneratedMessage>(
    _i5.Id? id,
    List<E>? items,
    bool Function(E)? matches, [
    int Function(E)? quantity,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #numberOf,
          [
            id,
            items,
            matches,
            quantity,
          ],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.Report>> listen(
          _i68.EntityListener<_i5.Report>? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #listen,
          [listener],
        ),
        returnValue: _FakeStreamSubscription_5<_i68.EntityEvent<_i5.Report>>(
          this,
          Invocation.method(
            #listen,
            [listener],
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.Report>>);
  @override
  void notifyAdd(_i5.Report? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyAdd,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyDelete(_i5.Report? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyDelete,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyUpdate(_i5.Report? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdate,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.Report>> addTypedListener({
    void Function(_i5.Report)? onAdd,
    void Function(_i5.Report)? onDelete,
    void Function(_i5.Report)? onUpdate,
    void Function()? onReset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTypedListener,
          [],
          {
            #onAdd: onAdd,
            #onDelete: onDelete,
            #onUpdate: onUpdate,
            #onReset: onReset,
          },
        ),
        returnValue: _FakeStreamSubscription_5<_i68.EntityEvent<_i5.Report>>(
          this,
          Invocation.method(
            #addTypedListener,
            [],
            {
              #onAdd: onAdd,
              #onDelete: onDelete,
              #onUpdate: onUpdate,
              #onReset: onReset,
            },
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.Report>>);
}

/// A class which mocks [SpeciesManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockSpeciesManager extends _i1.Mock implements _i22.SpeciesManager {
  MockSpeciesManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get tableName => (super.noSuchMethod(
        Invocation.getter(#tableName),
        returnValue: '',
      ) as String);
  @override
  _i2.StreamController<_i68.EntityEvent<_i5.Species>> get controller =>
      (super.noSuchMethod(
        Invocation.getter(#controller),
        returnValue: _FakeStreamController_0<_i68.EntityEvent<_i5.Species>>(
          this,
          Invocation.getter(#controller),
        ),
      ) as _i2.StreamController<_i68.EntityEvent<_i5.Species>>);
  @override
  Map<_i5.Id, _i5.Species> get entities => (super.noSuchMethod(
        Invocation.getter(#entities),
        returnValue: <_i5.Id, _i5.Species>{},
      ) as Map<_i5.Id, _i5.Species>);
  @override
  _i3.AppManager get appManager => (super.noSuchMethod(
        Invocation.getter(#appManager),
        returnValue: _FakeAppManager_1(
          this,
          Invocation.getter(#appManager),
        ),
      ) as _i3.AppManager);
  @override
  _i4.LocalDatabaseManager get localDatabaseManager => (super.noSuchMethod(
        Invocation.getter(#localDatabaseManager),
        returnValue: _FakeLocalDatabaseManager_2(
          this,
          Invocation.getter(#localDatabaseManager),
        ),
      ) as _i4.LocalDatabaseManager);
  @override
  int get entityCount => (super.noSuchMethod(
        Invocation.getter(#entityCount),
        returnValue: 0,
      ) as int);
  @override
  bool get hasEntities => (super.noSuchMethod(
        Invocation.getter(#hasEntities),
        returnValue: false,
      ) as bool);
  @override
  _i2.Stream<_i68.EntityEvent<_i5.Species>> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i2.Stream<_i68.EntityEvent<_i5.Species>>.empty(),
      ) as _i2.Stream<_i68.EntityEvent<_i5.Species>>);
  @override
  _i5.Species entityFromBytes(List<int>? bytes) => (super.noSuchMethod(
        Invocation.method(
          #entityFromBytes,
          [bytes],
        ),
        returnValue: _FakeSpecies_86(
          this,
          Invocation.method(
            #entityFromBytes,
            [bytes],
          ),
        ),
      ) as _i5.Species);
  @override
  _i5.Id id(_i5.Species? entity) => (super.noSuchMethod(
        Invocation.method(
          #id,
          [entity],
        ),
        returnValue: _FakeId_4(
          this,
          Invocation.method(
            #id,
            [entity],
          ),
        ),
      ) as _i5.Id);
  @override
  String name(_i5.Species? entity) => (super.noSuchMethod(
        Invocation.method(
          #name,
          [entity],
        ),
        returnValue: '',
      ) as String);
  @override
  _i2.Future<bool> delete(
    _i5.Id? entityId, {
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [entityId],
          {#notify: notify},
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  int numberOfCatches(_i5.Id? speciesId) => (super.noSuchMethod(
        Invocation.method(
          #numberOfCatches,
          [speciesId],
        ),
        returnValue: 0,
      ) as int);
  @override
  int Function(
    _i5.Species,
    _i5.Species,
  ) displayNameComparator(_i58.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #displayNameComparator,
          [context],
        ),
        returnValue: (
          _i5.Species __p0,
          _i5.Species __p1,
        ) =>
            0,
      ) as int Function(
        _i5.Species,
        _i5.Species,
      ));
  @override
  List<_i5.Species> listSortedByDisplayName(
    _i58.BuildContext? context, {
    String? filter,
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listSortedByDisplayName,
          [context],
          {
            #filter: filter,
            #ids: ids,
          },
        ),
        returnValue: <_i5.Species>[],
      ) as List<_i5.Species>);
  @override
  String displayName(
    _i58.BuildContext? context,
    _i5.Species? entity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #displayName,
          [
            context,
            entity,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  bool matchesFilter(
    _i5.Id? id,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #matchesFilter,
          [
            id,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool nameExists(String? name) => (super.noSuchMethod(
        Invocation.method(
          #nameExists,
          [name],
        ),
        returnValue: false,
      ) as bool);
  @override
  String? displayNameFromId(
    _i58.BuildContext? context,
    _i5.Id? id,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #displayNameFromId,
        [
          context,
          id,
        ],
      )) as String?);
  @override
  _i2.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  bool idsMatchesFilter(
    List<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchesFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  Set<_i5.Id> idSet({
    Iterable<_i5.Species>? entities = const [],
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #idSet,
          [],
          {
            #entities: entities,
            #ids: ids,
          },
        ),
        returnValue: <_i5.Id>{},
      ) as Set<_i5.Id>);
  @override
  Map<String, _i5.Species> uuidMap() => (super.noSuchMethod(
        Invocation.method(
          #uuidMap,
          [],
        ),
        returnValue: <String, _i5.Species>{},
      ) as Map<String, _i5.Species>);
  @override
  List<_i5.Species> list([Iterable<_i5.Id>? ids = const []]) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [ids],
        ),
        returnValue: <_i5.Species>[],
      ) as List<_i5.Species>);
  @override
  List<_i5.Species> filteredList(
    String? filter, [
    Iterable<_i5.Id>? ids = const [],
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #filteredList,
          [
            filter,
            ids,
          ],
        ),
        returnValue: <_i5.Species>[],
      ) as List<_i5.Species>);
  @override
  bool idsMatchFilter(
    Iterable<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool entityExists(_i5.Id? id) => (super.noSuchMethod(
        Invocation.method(
          #entityExists,
          [id],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i2.Future<bool> addOrUpdate(
    _i5.Species? entity, {
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrUpdate,
          [entity],
          {#notify: notify},
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<int> updateAll({
    required bool Function(_i5.Species)? where,
    required _i2.Future<void> Function(_i5.Species)? apply,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAll,
          [],
          {
            #where: where,
            #apply: apply,
          },
        ),
        returnValue: _i2.Future<int>.value(0),
      ) as _i2.Future<int>);
  @override
  int numberOf<E extends _i69.GeneratedMessage>(
    _i5.Id? id,
    List<E>? items,
    bool Function(E)? matches, [
    int Function(E)? quantity,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #numberOf,
          [
            id,
            items,
            matches,
            quantity,
          ],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.Species>> listen(
          _i68.EntityListener<_i5.Species>? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #listen,
          [listener],
        ),
        returnValue: _FakeStreamSubscription_5<_i68.EntityEvent<_i5.Species>>(
          this,
          Invocation.method(
            #listen,
            [listener],
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.Species>>);
  @override
  void notifyAdd(_i5.Species? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyAdd,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyDelete(_i5.Species? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyDelete,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyUpdate(_i5.Species? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdate,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.Species>> addTypedListener({
    void Function(_i5.Species)? onAdd,
    void Function(_i5.Species)? onDelete,
    void Function(_i5.Species)? onUpdate,
    void Function()? onReset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTypedListener,
          [],
          {
            #onAdd: onAdd,
            #onDelete: onDelete,
            #onUpdate: onUpdate,
            #onReset: onReset,
          },
        ),
        returnValue: _FakeStreamSubscription_5<_i68.EntityEvent<_i5.Species>>(
          this,
          Invocation.method(
            #addTypedListener,
            [],
            {
              #onAdd: onAdd,
              #onDelete: onDelete,
              #onUpdate: onUpdate,
              #onReset: onReset,
            },
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.Species>>);
}

/// A class which mocks [SubscriptionManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockSubscriptionManager extends _i1.Mock
    implements _i23.SubscriptionManager {
  MockSubscriptionManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isFree => (super.noSuchMethod(
        Invocation.getter(#isFree),
        returnValue: false,
      ) as bool);
  @override
  bool get isPro => (super.noSuchMethod(
        Invocation.getter(#isPro),
        returnValue: false,
      ) as bool);
  @override
  _i2.Stream<void> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i2.Stream<void>.empty(),
      ) as _i2.Stream<void>);
  @override
  _i2.Future<String> get userId => (super.noSuchMethod(
        Invocation.getter(#userId),
        returnValue: _i2.Future<String>.value(''),
      ) as _i2.Future<String>);
  @override
  _i2.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> purchaseSubscription(_i23.Subscription? sub) =>
      (super.noSuchMethod(
        Invocation.method(
          #purchaseSubscription,
          [sub],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<_i23.RestoreSubscriptionResult> restoreSubscription() =>
      (super.noSuchMethod(
        Invocation.method(
          #restoreSubscription,
          [],
        ),
        returnValue: _i2.Future<_i23.RestoreSubscriptionResult>.value(
            _i23.RestoreSubscriptionResult.noSubscriptionsFound),
      ) as _i2.Future<_i23.RestoreSubscriptionResult>);
  @override
  _i2.Future<_i23.Subscriptions?> subscriptions() => (super.noSuchMethod(
        Invocation.method(
          #subscriptions,
          [],
        ),
        returnValue: _i2.Future<_i23.Subscriptions?>.value(),
      ) as _i2.Future<_i23.Subscriptions?>);
}

/// A class which mocks [TimeManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockTimeManager extends _i1.Mock implements _i24.TimeManager {
  MockTimeManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i50.TZDateTime get currentDateTime => (super.noSuchMethod(
        Invocation.getter(#currentDateTime),
        returnValue: _FakeTZDateTime_51(
          this,
          Invocation.getter(#currentDateTime),
        ),
      ) as _i50.TZDateTime);
  @override
  _i24.TimeZoneLocation get currentLocation => (super.noSuchMethod(
        Invocation.getter(#currentLocation),
        returnValue: _FakeTimeZoneLocation_87(
          this,
          Invocation.getter(#currentLocation),
        ),
      ) as _i24.TimeZoneLocation);
  @override
  _i58.TimeOfDay get currentTime => (super.noSuchMethod(
        Invocation.getter(#currentTime),
        returnValue: _FakeTimeOfDay_88(
          this,
          Invocation.getter(#currentTime),
        ),
      ) as _i58.TimeOfDay);
  @override
  int get currentTimestamp => (super.noSuchMethod(
        Invocation.getter(#currentTimestamp),
        returnValue: 0,
      ) as int);
  @override
  String get currentTimeZone => (super.noSuchMethod(
        Invocation.getter(#currentTimeZone),
        returnValue: '',
      ) as String);
  @override
  _i2.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  List<_i24.TimeZoneLocation> filteredLocations(
    String? query, {
    _i24.TimeZoneLocation? exclude,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #filteredLocations,
          [query],
          {#exclude: exclude},
        ),
        returnValue: <_i24.TimeZoneLocation>[],
      ) as List<_i24.TimeZoneLocation>);
  @override
  _i50.TZDateTime dateTime(
    int? timestamp, [
    String? timeZone,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #dateTime,
          [
            timestamp,
            timeZone,
          ],
        ),
        returnValue: _FakeTZDateTime_51(
          this,
          Invocation.method(
            #dateTime,
            [
              timestamp,
              timeZone,
            ],
          ),
        ),
      ) as _i50.TZDateTime);
  @override
  _i50.TZDateTime now([String? timeZone]) => (super.noSuchMethod(
        Invocation.method(
          #now,
          [timeZone],
        ),
        returnValue: _FakeTZDateTime_51(
          this,
          Invocation.method(
            #now,
            [timeZone],
          ),
        ),
      ) as _i50.TZDateTime);
  @override
  _i50.TZDateTime toTZDateTime(DateTime? dateTime) => (super.noSuchMethod(
        Invocation.method(
          #toTZDateTime,
          [dateTime],
        ),
        returnValue: _FakeTZDateTime_51(
          this,
          Invocation.method(
            #toTZDateTime,
            [dateTime],
          ),
        ),
      ) as _i50.TZDateTime);
  @override
  _i50.TZDateTime dateTimeFromSeconds(int? timestampSeconds) =>
      (super.noSuchMethod(
        Invocation.method(
          #dateTimeFromSeconds,
          [timestampSeconds],
        ),
        returnValue: _FakeTZDateTime_51(
          this,
          Invocation.method(
            #dateTimeFromSeconds,
            [timestampSeconds],
          ),
        ),
      ) as _i50.TZDateTime);
}

/// A class which mocks [TimeZoneLocation].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockTimeZoneLocation extends _i1.Mock implements _i24.TimeZoneLocation {
  MockTimeZoneLocation() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i50.TimeZone get currentTimeZone => (super.noSuchMethod(
        Invocation.getter(#currentTimeZone),
        returnValue: _FakeTimeZone_89(
          this,
          Invocation.getter(#currentTimeZone),
        ),
      ) as _i50.TimeZone);
  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: '',
      ) as String);
  @override
  String get displayName => (super.noSuchMethod(
        Invocation.getter(#displayName),
        returnValue: '',
      ) as String);
  @override
  String get displayNameUtc => (super.noSuchMethod(
        Invocation.getter(#displayNameUtc),
        returnValue: '',
      ) as String);
  @override
  String get displayUtc => (super.noSuchMethod(
        Invocation.getter(#displayUtc),
        returnValue: '',
      ) as String);
  @override
  _i50.Location get value => (super.noSuchMethod(
        Invocation.getter(#value),
        returnValue: _FakeLocation_90(
          this,
          Invocation.getter(#value),
        ),
      ) as _i50.Location);
  @override
  bool matchesFilter(String? filter) => (super.noSuchMethod(
        Invocation.method(
          #matchesFilter,
          [filter],
        ),
        returnValue: false,
      ) as bool);
}

/// A class which mocks [TripManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockTripManager extends _i1.Mock implements _i25.TripManager {
  MockTripManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get tableName => (super.noSuchMethod(
        Invocation.getter(#tableName),
        returnValue: '',
      ) as String);
  @override
  _i2.StreamController<_i68.EntityEvent<_i5.Trip>> get controller =>
      (super.noSuchMethod(
        Invocation.getter(#controller),
        returnValue: _FakeStreamController_0<_i68.EntityEvent<_i5.Trip>>(
          this,
          Invocation.getter(#controller),
        ),
      ) as _i2.StreamController<_i68.EntityEvent<_i5.Trip>>);
  @override
  Map<_i5.Id, _i5.Trip> get entities => (super.noSuchMethod(
        Invocation.getter(#entities),
        returnValue: <_i5.Id, _i5.Trip>{},
      ) as Map<_i5.Id, _i5.Trip>);
  @override
  _i3.AppManager get appManager => (super.noSuchMethod(
        Invocation.getter(#appManager),
        returnValue: _FakeAppManager_1(
          this,
          Invocation.getter(#appManager),
        ),
      ) as _i3.AppManager);
  @override
  _i4.LocalDatabaseManager get localDatabaseManager => (super.noSuchMethod(
        Invocation.getter(#localDatabaseManager),
        returnValue: _FakeLocalDatabaseManager_2(
          this,
          Invocation.getter(#localDatabaseManager),
        ),
      ) as _i4.LocalDatabaseManager);
  @override
  int get entityCount => (super.noSuchMethod(
        Invocation.getter(#entityCount),
        returnValue: 0,
      ) as int);
  @override
  bool get hasEntities => (super.noSuchMethod(
        Invocation.getter(#hasEntities),
        returnValue: false,
      ) as bool);
  @override
  _i2.Stream<_i68.EntityEvent<_i5.Trip>> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i2.Stream<_i68.EntityEvent<_i5.Trip>>.empty(),
      ) as _i2.Stream<_i68.EntityEvent<_i5.Trip>>);
  @override
  _i2.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i5.Trip entityFromBytes(List<int>? bytes) => (super.noSuchMethod(
        Invocation.method(
          #entityFromBytes,
          [bytes],
        ),
        returnValue: _FakeTrip_91(
          this,
          Invocation.method(
            #entityFromBytes,
            [bytes],
          ),
        ),
      ) as _i5.Trip);
  @override
  _i5.Id id(_i5.Trip? entity) => (super.noSuchMethod(
        Invocation.method(
          #id,
          [entity],
        ),
        returnValue: _FakeId_4(
          this,
          Invocation.method(
            #id,
            [entity],
          ),
        ),
      ) as _i5.Id);
  @override
  String name(_i5.Trip? entity) => (super.noSuchMethod(
        Invocation.method(
          #name,
          [entity],
        ),
        returnValue: '',
      ) as String);
  @override
  String displayName(
    _i58.BuildContext? context,
    _i5.Trip? entity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #displayName,
          [
            context,
            entity,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  List<_i5.Trip> trips({
    _i58.BuildContext? context,
    String? filter,
    _i5.TripFilterOptions? opt,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #trips,
          [],
          {
            #context: context,
            #filter: filter,
            #opt: opt,
          },
        ),
        returnValue: <_i5.Trip>[],
      ) as List<_i5.Trip>);
  @override
  _i2.Future<bool> addOrUpdate(
    _i5.Trip? entity, {
    List<_i56.File>? imageFiles = const [],
    bool? notify = true,
    bool? setImages = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrUpdate,
          [entity],
          {
            #imageFiles: imageFiles,
            #notify: notify,
            #setImages: setImages,
          },
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  bool matchesFilter(
    _i5.Id? id,
    String? filter, [
    _i58.BuildContext? context,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #matchesFilter,
          [
            id,
            filter,
            context,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  String deleteMessage(
    _i58.BuildContext? context,
    _i5.Trip? trip,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMessage,
          [
            context,
            trip,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  int numberOfCatches(_i5.Trip? trip) => (super.noSuchMethod(
        Invocation.method(
          #numberOfCatches,
          [trip],
        ),
        returnValue: 0,
      ) as int);
  @override
  bool isCatchIdInTrip(_i5.Id? id) => (super.noSuchMethod(
        Invocation.method(
          #isCatchIdInTrip,
          [id],
        ),
        returnValue: false,
      ) as bool);
  @override
  int Function(
    _i5.Trip,
    _i5.Trip,
  ) displayNameComparator(_i58.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #displayNameComparator,
          [context],
        ),
        returnValue: (
          _i5.Trip __p0,
          _i5.Trip __p1,
        ) =>
            0,
      ) as int Function(
        _i5.Trip,
        _i5.Trip,
      ));
  @override
  List<_i5.Trip> listSortedByDisplayName(
    _i58.BuildContext? context, {
    String? filter,
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listSortedByDisplayName,
          [context],
          {
            #filter: filter,
            #ids: ids,
          },
        ),
        returnValue: <_i5.Trip>[],
      ) as List<_i5.Trip>);
  @override
  bool nameExists(String? name) => (super.noSuchMethod(
        Invocation.method(
          #nameExists,
          [name],
        ),
        returnValue: false,
      ) as bool);
  @override
  String? displayNameFromId(
    _i58.BuildContext? context,
    _i5.Id? id,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #displayNameFromId,
        [
          context,
          id,
        ],
      )) as String?);
  @override
  bool idsMatchesFilter(
    List<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchesFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  Set<_i5.Id> idSet({
    Iterable<_i5.Trip>? entities = const [],
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #idSet,
          [],
          {
            #entities: entities,
            #ids: ids,
          },
        ),
        returnValue: <_i5.Id>{},
      ) as Set<_i5.Id>);
  @override
  Map<String, _i5.Trip> uuidMap() => (super.noSuchMethod(
        Invocation.method(
          #uuidMap,
          [],
        ),
        returnValue: <String, _i5.Trip>{},
      ) as Map<String, _i5.Trip>);
  @override
  List<_i5.Trip> list([Iterable<_i5.Id>? ids = const []]) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [ids],
        ),
        returnValue: <_i5.Trip>[],
      ) as List<_i5.Trip>);
  @override
  List<_i5.Trip> filteredList(
    String? filter, [
    Iterable<_i5.Id>? ids = const [],
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #filteredList,
          [
            filter,
            ids,
          ],
        ),
        returnValue: <_i5.Trip>[],
      ) as List<_i5.Trip>);
  @override
  bool idsMatchFilter(
    Iterable<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool entityExists(_i5.Id? id) => (super.noSuchMethod(
        Invocation.method(
          #entityExists,
          [id],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i2.Future<int> updateAll({
    required bool Function(_i5.Trip)? where,
    required _i2.Future<void> Function(_i5.Trip)? apply,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAll,
          [],
          {
            #where: where,
            #apply: apply,
          },
        ),
        returnValue: _i2.Future<int>.value(0),
      ) as _i2.Future<int>);
  @override
  _i2.Future<bool> delete(
    _i5.Id? entityId, {
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [entityId],
          {#notify: notify},
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  int numberOf<E extends _i69.GeneratedMessage>(
    _i5.Id? id,
    List<E>? items,
    bool Function(E)? matches, [
    int Function(E)? quantity,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #numberOf,
          [
            id,
            items,
            matches,
            quantity,
          ],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.Trip>> listen(
          _i68.EntityListener<_i5.Trip>? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #listen,
          [listener],
        ),
        returnValue: _FakeStreamSubscription_5<_i68.EntityEvent<_i5.Trip>>(
          this,
          Invocation.method(
            #listen,
            [listener],
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.Trip>>);
  @override
  void notifyAdd(_i5.Trip? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyAdd,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyDelete(_i5.Trip? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyDelete,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyUpdate(_i5.Trip? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdate,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.Trip>> addTypedListener({
    void Function(_i5.Trip)? onAdd,
    void Function(_i5.Trip)? onDelete,
    void Function(_i5.Trip)? onUpdate,
    void Function()? onReset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTypedListener,
          [],
          {
            #onAdd: onAdd,
            #onDelete: onDelete,
            #onUpdate: onUpdate,
            #onReset: onReset,
          },
        ),
        returnValue: _FakeStreamSubscription_5<_i68.EntityEvent<_i5.Trip>>(
          this,
          Invocation.method(
            #addTypedListener,
            [],
            {
              #onAdd: onAdd,
              #onDelete: onDelete,
              #onUpdate: onUpdate,
              #onReset: onReset,
            },
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.Trip>>);
}

/// A class which mocks [UserPreferenceManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserPreferenceManager extends _i1.Mock
    implements _i26.UserPreferenceManager {
  MockUserPreferenceManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get tableName => (super.noSuchMethod(
        Invocation.getter(#tableName),
        returnValue: '',
      ) as String);
  @override
  List<_i5.Id> get atmosphereFieldIds => (super.noSuchMethod(
        Invocation.getter(#atmosphereFieldIds),
        returnValue: <_i5.Id>[],
      ) as List<_i5.Id>);
  @override
  List<_i5.Id> get baitVariantFieldIds => (super.noSuchMethod(
        Invocation.getter(#baitVariantFieldIds),
        returnValue: <_i5.Id>[],
      ) as List<_i5.Id>);
  @override
  List<_i5.Id> get catchFieldIds => (super.noSuchMethod(
        Invocation.getter(#catchFieldIds),
        returnValue: <_i5.Id>[],
      ) as List<_i5.Id>);
  @override
  List<_i5.Id> get tripFieldIds => (super.noSuchMethod(
        Invocation.getter(#tripFieldIds),
        returnValue: <_i5.Id>[],
      ) as List<_i5.Id>);
  @override
  bool get autoSetTripFields => (super.noSuchMethod(
        Invocation.getter(#autoSetTripFields),
        returnValue: false,
      ) as bool);
  @override
  _i5.MeasurementSystem get tideHeightSystem => (super.noSuchMethod(
        Invocation.getter(#tideHeightSystem),
        returnValue: _FakeMeasurementSystem_92(
          this,
          Invocation.getter(#tideHeightSystem),
        ),
      ) as _i5.MeasurementSystem);
  @override
  _i5.MeasurementSystem get catchLengthSystem => (super.noSuchMethod(
        Invocation.getter(#catchLengthSystem),
        returnValue: _FakeMeasurementSystem_92(
          this,
          Invocation.getter(#catchLengthSystem),
        ),
      ) as _i5.MeasurementSystem);
  @override
  _i5.MeasurementSystem get catchWeightSystem => (super.noSuchMethod(
        Invocation.getter(#catchWeightSystem),
        returnValue: _FakeMeasurementSystem_92(
          this,
          Invocation.getter(#catchWeightSystem),
        ),
      ) as _i5.MeasurementSystem);
  @override
  _i5.MeasurementSystem get waterDepthSystem => (super.noSuchMethod(
        Invocation.getter(#waterDepthSystem),
        returnValue: _FakeMeasurementSystem_92(
          this,
          Invocation.getter(#waterDepthSystem),
        ),
      ) as _i5.MeasurementSystem);
  @override
  _i5.MeasurementSystem get waterTemperatureSystem => (super.noSuchMethod(
        Invocation.getter(#waterTemperatureSystem),
        returnValue: _FakeMeasurementSystem_92(
          this,
          Invocation.getter(#waterTemperatureSystem),
        ),
      ) as _i5.MeasurementSystem);
  @override
  _i5.MeasurementSystem get airTemperatureSystem => (super.noSuchMethod(
        Invocation.getter(#airTemperatureSystem),
        returnValue: _FakeMeasurementSystem_92(
          this,
          Invocation.getter(#airTemperatureSystem),
        ),
      ) as _i5.MeasurementSystem);
  @override
  _i5.MeasurementSystem get airPressureSystem => (super.noSuchMethod(
        Invocation.getter(#airPressureSystem),
        returnValue: _FakeMeasurementSystem_92(
          this,
          Invocation.getter(#airPressureSystem),
        ),
      ) as _i5.MeasurementSystem);
  @override
  _i5.Unit get airPressureImperialUnit => (super.noSuchMethod(
        Invocation.getter(#airPressureImperialUnit),
        returnValue: _FakeUnit_93(
          this,
          Invocation.getter(#airPressureImperialUnit),
        ),
      ) as _i5.Unit);
  @override
  _i5.MeasurementSystem get airVisibilitySystem => (super.noSuchMethod(
        Invocation.getter(#airVisibilitySystem),
        returnValue: _FakeMeasurementSystem_92(
          this,
          Invocation.getter(#airVisibilitySystem),
        ),
      ) as _i5.MeasurementSystem);
  @override
  _i5.MeasurementSystem get windSpeedSystem => (super.noSuchMethod(
        Invocation.getter(#windSpeedSystem),
        returnValue: _FakeMeasurementSystem_92(
          this,
          Invocation.getter(#windSpeedSystem),
        ),
      ) as _i5.MeasurementSystem);
  @override
  bool get autoFetchAtmosphere => (super.noSuchMethod(
        Invocation.getter(#autoFetchAtmosphere),
        returnValue: false,
      ) as bool);
  @override
  bool get autoFetchTide => (super.noSuchMethod(
        Invocation.getter(#autoFetchTide),
        returnValue: false,
      ) as bool);
  @override
  _i5.MultiMeasurement get fishingSpotDistance => (super.noSuchMethod(
        Invocation.getter(#fishingSpotDistance),
        returnValue: _FakeMultiMeasurement_94(
          this,
          Invocation.getter(#fishingSpotDistance),
        ),
      ) as _i5.MultiMeasurement);
  @override
  _i5.MultiMeasurement get minGpsTrailDistance => (super.noSuchMethod(
        Invocation.getter(#minGpsTrailDistance),
        returnValue: _FakeMultiMeasurement_94(
          this,
          Invocation.getter(#minGpsTrailDistance),
        ),
      ) as _i5.MultiMeasurement);
  @override
  bool get didRateApp => (super.noSuchMethod(
        Invocation.getter(#didRateApp),
        returnValue: false,
      ) as bool);
  @override
  bool get didOnboard => (super.noSuchMethod(
        Invocation.getter(#didOnboard),
        returnValue: false,
      ) as bool);
  @override
  bool get didSetupBackup => (super.noSuchMethod(
        Invocation.getter(#didSetupBackup),
        returnValue: false,
      ) as bool);
  @override
  bool get autoBackup => (super.noSuchMethod(
        Invocation.getter(#autoBackup),
        returnValue: false,
      ) as bool);
  @override
  _i58.ThemeMode get themeMode => (super.noSuchMethod(
        Invocation.getter(#themeMode),
        returnValue: _i58.ThemeMode.system,
      ) as _i58.ThemeMode);
  @override
  bool get isTrackingMoonPhases => (super.noSuchMethod(
        Invocation.getter(#isTrackingMoonPhases),
        returnValue: false,
      ) as bool);
  @override
  bool get isTrackingAnglers => (super.noSuchMethod(
        Invocation.getter(#isTrackingAnglers),
        returnValue: false,
      ) as bool);
  @override
  bool get isTrackingBaits => (super.noSuchMethod(
        Invocation.getter(#isTrackingBaits),
        returnValue: false,
      ) as bool);
  @override
  bool get isTrackingFishingSpots => (super.noSuchMethod(
        Invocation.getter(#isTrackingFishingSpots),
        returnValue: false,
      ) as bool);
  @override
  bool get isTrackingImages => (super.noSuchMethod(
        Invocation.getter(#isTrackingImages),
        returnValue: false,
      ) as bool);
  @override
  bool get isTrackingSpecies => (super.noSuchMethod(
        Invocation.getter(#isTrackingSpecies),
        returnValue: false,
      ) as bool);
  @override
  bool get isTrackingLength => (super.noSuchMethod(
        Invocation.getter(#isTrackingLength),
        returnValue: false,
      ) as bool);
  @override
  bool get isTrackingWeight => (super.noSuchMethod(
        Invocation.getter(#isTrackingWeight),
        returnValue: false,
      ) as bool);
  @override
  bool get isTrackingMethods => (super.noSuchMethod(
        Invocation.getter(#isTrackingMethods),
        returnValue: false,
      ) as bool);
  @override
  bool get isTrackingSeasons => (super.noSuchMethod(
        Invocation.getter(#isTrackingSeasons),
        returnValue: false,
      ) as bool);
  @override
  bool get isTrackingTides => (super.noSuchMethod(
        Invocation.getter(#isTrackingTides),
        returnValue: false,
      ) as bool);
  @override
  bool get isTrackingPeriods => (super.noSuchMethod(
        Invocation.getter(#isTrackingPeriods),
        returnValue: false,
      ) as bool);
  @override
  bool get isTrackingWaterClarities => (super.noSuchMethod(
        Invocation.getter(#isTrackingWaterClarities),
        returnValue: false,
      ) as bool);
  @override
  Map<String, dynamic> get preferences => (super.noSuchMethod(
        Invocation.getter(#preferences),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  _i3.AppManager get appManager => (super.noSuchMethod(
        Invocation.getter(#appManager),
        returnValue: _FakeAppManager_1(
          this,
          Invocation.getter(#appManager),
        ),
      ) as _i3.AppManager);
  @override
  _i2.Stream<String> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i2.Stream<String>.empty(),
      ) as _i2.Stream<String>);
  @override
  _i2.Future<void> setAtmosphereFieldIds(List<_i5.Id>? ids) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAtmosphereFieldIds,
          [ids],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setBaitVariantFieldIds(List<_i5.Id>? ids) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBaitVariantFieldIds,
          [ids],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setCatchFieldIds(List<_i5.Id>? ids) => (super.noSuchMethod(
        Invocation.method(
          #setCatchFieldIds,
          [ids],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setTripFieldIds(List<_i5.Id>? ids) => (super.noSuchMethod(
        Invocation.method(
          #setTripFieldIds,
          [ids],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setAutoSetTripFields(bool? autoFetch) => (super.noSuchMethod(
        Invocation.method(
          #setAutoSetTripFields,
          [autoFetch],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setTideHeightSystem(_i5.MeasurementSystem? system) =>
      (super.noSuchMethod(
        Invocation.method(
          #setTideHeightSystem,
          [system],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setCatchLengthSystem(_i5.MeasurementSystem? system) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCatchLengthSystem,
          [system],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setCatchWeightSystem(_i5.MeasurementSystem? system) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCatchWeightSystem,
          [system],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setWaterDepthSystem(_i5.MeasurementSystem? system) =>
      (super.noSuchMethod(
        Invocation.method(
          #setWaterDepthSystem,
          [system],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setWaterTemperatureSystem(_i5.MeasurementSystem? system) =>
      (super.noSuchMethod(
        Invocation.method(
          #setWaterTemperatureSystem,
          [system],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setAirTemperatureSystem(_i5.MeasurementSystem? system) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAirTemperatureSystem,
          [system],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setAirPressureSystem(_i5.MeasurementSystem? system) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAirPressureSystem,
          [system],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setAirPressureImperialUnit(_i5.Unit? unit) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAirPressureImperialUnit,
          [unit],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setAirVisibilitySystem(_i5.MeasurementSystem? system) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAirVisibilitySystem,
          [system],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setWindSpeedSystem(_i5.MeasurementSystem? system) =>
      (super.noSuchMethod(
        Invocation.method(
          #setWindSpeedSystem,
          [system],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setAutoFetchAtmosphere(bool? autoFetch) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAutoFetchAtmosphere,
          [autoFetch],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setAutoFetchTide(bool? autoFetch) => (super.noSuchMethod(
        Invocation.method(
          #setAutoFetchTide,
          [autoFetch],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setFishingSpotDistance(_i5.MultiMeasurement? distance) =>
      (super.noSuchMethod(
        Invocation.method(
          #setFishingSpotDistance,
          [distance],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setMinGpsTrailDistance(_i5.MultiMeasurement? distance) =>
      (super.noSuchMethod(
        Invocation.method(
          #setMinGpsTrailDistance,
          [distance],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setRateTimerStartedAt(int? timestamp) => (super.noSuchMethod(
        Invocation.method(
          #setRateTimerStartedAt,
          [timestamp],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setProTimerStartedAt(int? timestamp) => (super.noSuchMethod(
        Invocation.method(
          #setProTimerStartedAt,
          [timestamp],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setDidRateApp(bool? rated) => (super.noSuchMethod(
        Invocation.method(
          #setDidRateApp,
          [rated],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setDidOnboard(bool? onboarded) => (super.noSuchMethod(
        Invocation.method(
          #setDidOnboard,
          [onboarded],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setDidSetupBackup(bool? setupBackup) => (super.noSuchMethod(
        Invocation.method(
          #setDidSetupBackup,
          [setupBackup],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setLastBackupAt(int? lastBackupAt) => (super.noSuchMethod(
        Invocation.method(
          #setLastBackupAt,
          [lastBackupAt],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setAutoBackup(bool? auto) => (super.noSuchMethod(
        Invocation.method(
          #setAutoBackup,
          [auto],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setSelectedReportId(_i5.Id? id) => (super.noSuchMethod(
        Invocation.method(
          #setSelectedReportId,
          [id],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setMapType(String? type) => (super.noSuchMethod(
        Invocation.method(
          #setMapType,
          [type],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> updateAppVersion() => (super.noSuchMethod(
        Invocation.method(
          #updateAppVersion,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setUserEmail(String? email) => (super.noSuchMethod(
        Invocation.method(
          #setUserEmail,
          [email],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setUserName(String? name) => (super.noSuchMethod(
        Invocation.method(
          #setUserName,
          [name],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setStatsDateRange(_i5.DateRange? dateRange) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStatsDateRange,
          [dateRange],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setThemeMode(_i58.ThemeMode? themeMode) =>
      (super.noSuchMethod(
        Invocation.method(
          #setThemeMode,
          [themeMode],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setFreePollVotedAt(int? timestamp) => (super.noSuchMethod(
        Invocation.method(
          #setFreePollVotedAt,
          [timestamp],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setProPollVotedAt(int? timestamp) => (super.noSuchMethod(
        Invocation.method(
          #setProPollVotedAt,
          [timestamp],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> put(
    String? key,
    dynamic value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [
            key,
            value,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  void putLocal(
    String? key,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #putLocal,
          [
            key,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void putStringList(
    String? key,
    List<String>? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #putStringList,
          [
            key,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<String> stringList(String? key) => (super.noSuchMethod(
        Invocation.method(
          #stringList,
          [key],
        ),
        returnValue: <String>[],
      ) as List<String>);
  @override
  _i2.Future<void> putId(
    String? key,
    _i5.Id? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #putId,
          [
            key,
            value,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i5.Id? id(String? key) => (super.noSuchMethod(Invocation.method(
        #id,
        [key],
      )) as _i5.Id?);
  @override
  _i2.Future<void> putIdCollection(
    String? key,
    Iterable<_i5.Id>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #putIdCollection,
          [
            key,
            value,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  List<_i5.Id> idList(String? key) => (super.noSuchMethod(
        Invocation.method(
          #idList,
          [key],
        ),
        returnValue: <_i5.Id>[],
      ) as List<_i5.Id>);
}

/// A class which mocks [WaterClarityManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockWaterClarityManager extends _i1.Mock
    implements _i27.WaterClarityManager {
  MockWaterClarityManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get tableName => (super.noSuchMethod(
        Invocation.getter(#tableName),
        returnValue: '',
      ) as String);
  @override
  _i2.StreamController<_i68.EntityEvent<_i5.WaterClarity>> get controller =>
      (super.noSuchMethod(
        Invocation.getter(#controller),
        returnValue:
            _FakeStreamController_0<_i68.EntityEvent<_i5.WaterClarity>>(
          this,
          Invocation.getter(#controller),
        ),
      ) as _i2.StreamController<_i68.EntityEvent<_i5.WaterClarity>>);
  @override
  Map<_i5.Id, _i5.WaterClarity> get entities => (super.noSuchMethod(
        Invocation.getter(#entities),
        returnValue: <_i5.Id, _i5.WaterClarity>{},
      ) as Map<_i5.Id, _i5.WaterClarity>);
  @override
  _i3.AppManager get appManager => (super.noSuchMethod(
        Invocation.getter(#appManager),
        returnValue: _FakeAppManager_1(
          this,
          Invocation.getter(#appManager),
        ),
      ) as _i3.AppManager);
  @override
  _i4.LocalDatabaseManager get localDatabaseManager => (super.noSuchMethod(
        Invocation.getter(#localDatabaseManager),
        returnValue: _FakeLocalDatabaseManager_2(
          this,
          Invocation.getter(#localDatabaseManager),
        ),
      ) as _i4.LocalDatabaseManager);
  @override
  int get entityCount => (super.noSuchMethod(
        Invocation.getter(#entityCount),
        returnValue: 0,
      ) as int);
  @override
  bool get hasEntities => (super.noSuchMethod(
        Invocation.getter(#hasEntities),
        returnValue: false,
      ) as bool);
  @override
  _i2.Stream<_i68.EntityEvent<_i5.WaterClarity>> get stream =>
      (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i2.Stream<_i68.EntityEvent<_i5.WaterClarity>>.empty(),
      ) as _i2.Stream<_i68.EntityEvent<_i5.WaterClarity>>);
  @override
  _i5.WaterClarity entityFromBytes(List<int>? bytes) => (super.noSuchMethod(
        Invocation.method(
          #entityFromBytes,
          [bytes],
        ),
        returnValue: _FakeWaterClarity_95(
          this,
          Invocation.method(
            #entityFromBytes,
            [bytes],
          ),
        ),
      ) as _i5.WaterClarity);
  @override
  _i5.Id id(_i5.WaterClarity? entity) => (super.noSuchMethod(
        Invocation.method(
          #id,
          [entity],
        ),
        returnValue: _FakeId_4(
          this,
          Invocation.method(
            #id,
            [entity],
          ),
        ),
      ) as _i5.Id);
  @override
  String name(_i5.WaterClarity? entity) => (super.noSuchMethod(
        Invocation.method(
          #name,
          [entity],
        ),
        returnValue: '',
      ) as String);
  @override
  int numberOfCatches(_i5.Id? clarityId) => (super.noSuchMethod(
        Invocation.method(
          #numberOfCatches,
          [clarityId],
        ),
        returnValue: 0,
      ) as int);
  @override
  String deleteMessage(
    _i58.BuildContext? context,
    _i5.WaterClarity? clarity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMessage,
          [
            context,
            clarity,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  int Function(
    _i5.WaterClarity,
    _i5.WaterClarity,
  ) displayNameComparator(_i58.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #displayNameComparator,
          [context],
        ),
        returnValue: (
          _i5.WaterClarity __p0,
          _i5.WaterClarity __p1,
        ) =>
            0,
      ) as int Function(
        _i5.WaterClarity,
        _i5.WaterClarity,
      ));
  @override
  List<_i5.WaterClarity> listSortedByDisplayName(
    _i58.BuildContext? context, {
    String? filter,
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listSortedByDisplayName,
          [context],
          {
            #filter: filter,
            #ids: ids,
          },
        ),
        returnValue: <_i5.WaterClarity>[],
      ) as List<_i5.WaterClarity>);
  @override
  String displayName(
    _i58.BuildContext? context,
    _i5.WaterClarity? entity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #displayName,
          [
            context,
            entity,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  bool matchesFilter(
    _i5.Id? id,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #matchesFilter,
          [
            id,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool nameExists(String? name) => (super.noSuchMethod(
        Invocation.method(
          #nameExists,
          [name],
        ),
        returnValue: false,
      ) as bool);
  @override
  String? displayNameFromId(
    _i58.BuildContext? context,
    _i5.Id? id,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #displayNameFromId,
        [
          context,
          id,
        ],
      )) as String?);
  @override
  _i2.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  bool idsMatchesFilter(
    List<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchesFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  Set<_i5.Id> idSet({
    Iterable<_i5.WaterClarity>? entities = const [],
    Iterable<_i5.Id>? ids = const [],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #idSet,
          [],
          {
            #entities: entities,
            #ids: ids,
          },
        ),
        returnValue: <_i5.Id>{},
      ) as Set<_i5.Id>);
  @override
  Map<String, _i5.WaterClarity> uuidMap() => (super.noSuchMethod(
        Invocation.method(
          #uuidMap,
          [],
        ),
        returnValue: <String, _i5.WaterClarity>{},
      ) as Map<String, _i5.WaterClarity>);
  @override
  List<_i5.WaterClarity> list([Iterable<_i5.Id>? ids = const []]) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [ids],
        ),
        returnValue: <_i5.WaterClarity>[],
      ) as List<_i5.WaterClarity>);
  @override
  List<_i5.WaterClarity> filteredList(
    String? filter, [
    Iterable<_i5.Id>? ids = const [],
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #filteredList,
          [
            filter,
            ids,
          ],
        ),
        returnValue: <_i5.WaterClarity>[],
      ) as List<_i5.WaterClarity>);
  @override
  bool idsMatchFilter(
    Iterable<_i5.Id>? ids,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #idsMatchFilter,
          [
            ids,
            filter,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool entityExists(_i5.Id? id) => (super.noSuchMethod(
        Invocation.method(
          #entityExists,
          [id],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i2.Future<bool> addOrUpdate(
    _i5.WaterClarity? entity, {
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrUpdate,
          [entity],
          {#notify: notify},
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<int> updateAll({
    required bool Function(_i5.WaterClarity)? where,
    required _i2.Future<void> Function(_i5.WaterClarity)? apply,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAll,
          [],
          {
            #where: where,
            #apply: apply,
          },
        ),
        returnValue: _i2.Future<int>.value(0),
      ) as _i2.Future<int>);
  @override
  _i2.Future<bool> delete(
    _i5.Id? entityId, {
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [entityId],
          {#notify: notify},
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  int numberOf<E extends _i69.GeneratedMessage>(
    _i5.Id? id,
    List<E>? items,
    bool Function(E)? matches, [
    int Function(E)? quantity,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #numberOf,
          [
            id,
            items,
            matches,
            quantity,
          ],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.WaterClarity>> listen(
          _i68.EntityListener<_i5.WaterClarity>? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #listen,
          [listener],
        ),
        returnValue:
            _FakeStreamSubscription_5<_i68.EntityEvent<_i5.WaterClarity>>(
          this,
          Invocation.method(
            #listen,
            [listener],
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.WaterClarity>>);
  @override
  void notifyAdd(_i5.WaterClarity? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyAdd,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyDelete(_i5.WaterClarity? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyDelete,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyUpdate(_i5.WaterClarity? entity) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdate,
          [entity],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.StreamSubscription<_i68.EntityEvent<_i5.WaterClarity>> addTypedListener({
    void Function(_i5.WaterClarity)? onAdd,
    void Function(_i5.WaterClarity)? onDelete,
    void Function(_i5.WaterClarity)? onUpdate,
    void Function()? onReset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTypedListener,
          [],
          {
            #onAdd: onAdd,
            #onDelete: onDelete,
            #onUpdate: onUpdate,
            #onReset: onReset,
          },
        ),
        returnValue:
            _FakeStreamSubscription_5<_i68.EntityEvent<_i5.WaterClarity>>(
          this,
          Invocation.method(
            #addTypedListener,
            [],
            {
              #onAdd: onAdd,
              #onDelete: onDelete,
              #onUpdate: onUpdate,
              #onReset: onReset,
            },
          ),
        ),
      ) as _i2.StreamSubscription<_i68.EntityEvent<_i5.WaterClarity>>);
}

/// A class which mocks [CrashlyticsWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockCrashlyticsWrapper extends _i1.Mock
    implements _i28.CrashlyticsWrapper {
  MockCrashlyticsWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<void> log(String? message) => (super.noSuchMethod(
        Invocation.method(
          #log,
          [message],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setUserId(String? identifier) => (super.noSuchMethod(
        Invocation.method(
          #setUserId,
          [identifier],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> recordError(
    String? message,
    StackTrace? stack,
    String? reason,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #recordError,
          [
            message,
            stack,
            reason,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
}

/// A class which mocks [DeviceInfoWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeviceInfoWrapper extends _i1.Mock implements _i29.DeviceInfoWrapper {
  MockDeviceInfoWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<_i6.AndroidDeviceInfo> get androidInfo => (super.noSuchMethod(
        Invocation.getter(#androidInfo),
        returnValue:
            _i2.Future<_i6.AndroidDeviceInfo>.value(_FakeAndroidDeviceInfo_96(
          this,
          Invocation.getter(#androidInfo),
        )),
      ) as _i2.Future<_i6.AndroidDeviceInfo>);
  @override
  _i2.Future<_i6.IosDeviceInfo> get iosInfo => (super.noSuchMethod(
        Invocation.getter(#iosInfo),
        returnValue: _i2.Future<_i6.IosDeviceInfo>.value(_FakeIosDeviceInfo_97(
          this,
          Invocation.getter(#iosInfo),
        )),
      ) as _i2.Future<_i6.IosDeviceInfo>);
}

/// A class which mocks [ExifWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockExifWrapper extends _i1.Mock implements _i31.ExifWrapper {
  MockExifWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<_i59.Exif> fromPath(String? path) => (super.noSuchMethod(
        Invocation.method(
          #fromPath,
          [path],
        ),
        returnValue: _i2.Future<_i59.Exif>.value(_FakeExif_98(
          this,
          Invocation.method(
            #fromPath,
            [path],
          ),
        )),
      ) as _i2.Future<_i59.Exif>);
}

/// A class which mocks [FilePickerWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockFilePickerWrapper extends _i1.Mock implements _i33.FilePickerWrapper {
  MockFilePickerWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<_i80.FilePickerResult?> pickFiles({
    _i80.FileType? type = _i80.FileType.any,
    List<String>? allowedExtensions,
    bool? allowMultiple = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickFiles,
          [],
          {
            #type: type,
            #allowedExtensions: allowedExtensions,
            #allowMultiple: allowMultiple,
          },
        ),
        returnValue: _i2.Future<_i80.FilePickerResult?>.value(),
      ) as _i2.Future<_i80.FilePickerResult?>);
}

/// A class which mocks [GlobalKey].
///
/// See the documentation for Mockito's code generation for more information.
class MockGlobalKey<T extends _i58.State<_i58.StatefulWidget>> extends _i1.Mock
    implements _i58.GlobalKey<T> {
  MockGlobalKey() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [GoogleSignInWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignInWrapper extends _i1.Mock
    implements _i34.GoogleSignInWrapper {
  MockGoogleSignInWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i55.GoogleSignIn newInstance(List<String>? scopes) => (super.noSuchMethod(
        Invocation.method(
          #newInstance,
          [scopes],
        ),
        returnValue: _FakeGoogleSignIn_99(
          this,
          Invocation.method(
            #newInstance,
            [scopes],
          ),
        ),
      ) as _i55.GoogleSignIn);
  @override
  _i2.Future<_i72.AuthClient?> authenticatedClient(
          _i55.GoogleSignIn? googleSignIn) =>
      (super.noSuchMethod(
        Invocation.method(
          #authenticatedClient,
          [googleSignIn],
        ),
        returnValue: _i2.Future<_i72.AuthClient?>.value(),
      ) as _i2.Future<_i72.AuthClient?>);
}

/// A class which mocks [HttpWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpWrapper extends _i1.Mock implements _i35.HttpWrapper {
  MockHttpWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<_i53.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i57.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i2.Future<_i53.Response>.value(_FakeResponse_54(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i2.Future<_i53.Response>);
  @override
  _i2.Future<_i53.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i57.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i2.Future<_i53.Response>.value(_FakeResponse_54(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i2.Future<_i53.Response>);
  @override
  _i2.Future<_i53.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i2.Future<_i53.Response>.value(_FakeResponse_54(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i2.Future<_i53.Response>);
}

/// A class which mocks [ImageCompressWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockImageCompressWrapper extends _i1.Mock
    implements _i36.ImageCompressWrapper {
  MockImageCompressWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<_i73.Uint8List?> compress(
    String? path,
    int? quality,
    int? size,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #compress,
          [
            path,
            quality,
            size,
          ],
        ),
        returnValue: _i2.Future<_i73.Uint8List?>.value(),
      ) as _i2.Future<_i73.Uint8List?>);
}

/// A class which mocks [IoWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockIoWrapper extends _i1.Mock implements _i38.IoWrapper {
  MockIoWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isAndroid => (super.noSuchMethod(
        Invocation.getter(#isAndroid),
        returnValue: false,
      ) as bool);
  @override
  bool get isIOS => (super.noSuchMethod(
        Invocation.getter(#isIOS),
        returnValue: false,
      ) as bool);
  @override
  bool isFileSync(String? path) => (super.noSuchMethod(
        Invocation.method(
          #isFileSync,
          [path],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i56.Directory directory(String? path) => (super.noSuchMethod(
        Invocation.method(
          #directory,
          [path],
        ),
        returnValue: _FakeDirectory_100(
          this,
          Invocation.method(
            #directory,
            [path],
          ),
        ),
      ) as _i56.Directory);
  @override
  _i56.File file(String? path) => (super.noSuchMethod(
        Invocation.method(
          #file,
          [path],
        ),
        returnValue: _FakeFile_81(
          this,
          Invocation.method(
            #file,
            [path],
          ),
        ),
      ) as _i56.File);
  @override
  _i2.Future<bool> isConnected() => (super.noSuchMethod(
        Invocation.method(
          #isConnected,
          [],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
}

/// A class which mocks [IsolatesWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockIsolatesWrapper extends _i1.Mock implements _i39.IsolatesWrapper {
  MockIsolatesWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<List<int>> computeIntList(
    List<int> Function(List<int>)? callback,
    List<int>? arg,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #computeIntList,
          [
            callback,
            arg,
          ],
        ),
        returnValue: _i2.Future<List<int>>.value(<int>[]),
      ) as _i2.Future<List<int>>);
}

/// A class which mocks [NativeTimeZoneWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockNativeTimeZoneWrapper extends _i1.Mock
    implements _i40.NativeTimeZoneWrapper {
  MockNativeTimeZoneWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<List<String>> getAvailableTimeZones() => (super.noSuchMethod(
        Invocation.method(
          #getAvailableTimeZones,
          [],
        ),
        returnValue: _i2.Future<List<String>>.value(<String>[]),
      ) as _i2.Future<List<String>>);
  @override
  _i2.Future<String> getLocalTimeZone() => (super.noSuchMethod(
        Invocation.method(
          #getLocalTimeZone,
          [],
        ),
        returnValue: _i2.Future<String>.value(''),
      ) as _i2.Future<String>);
}

/// A class which mocks [MapboxMapController].
///
/// See the documentation for Mockito's code generation for more information.
class MockMapboxMapController extends _i1.Mock
    implements _i60.MapboxMapController {
  MockMapboxMapController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set fillManager(_i60.FillManager? _fillManager) => super.noSuchMethod(
        Invocation.setter(
          #fillManager,
          _fillManager,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set lineManager(_i60.LineManager? _lineManager) => super.noSuchMethod(
        Invocation.setter(
          #lineManager,
          _lineManager,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set circleManager(_i60.CircleManager? _circleManager) => super.noSuchMethod(
        Invocation.setter(
          #circleManager,
          _circleManager,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set symbolManager(_i60.SymbolManager? _symbolManager) => super.noSuchMethod(
        Invocation.setter(
          #symbolManager,
          _symbolManager,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.ArgumentCallbacks<_i60.Symbol> get onSymbolTapped => (super.noSuchMethod(
        Invocation.getter(#onSymbolTapped),
        returnValue: _FakeArgumentCallbacks_101<_i60.Symbol>(
          this,
          Invocation.getter(#onSymbolTapped),
        ),
      ) as _i60.ArgumentCallbacks<_i60.Symbol>);
  @override
  _i60.ArgumentCallbacks<_i60.Circle> get onCircleTapped => (super.noSuchMethod(
        Invocation.getter(#onCircleTapped),
        returnValue: _FakeArgumentCallbacks_101<_i60.Circle>(
          this,
          Invocation.getter(#onCircleTapped),
        ),
      ) as _i60.ArgumentCallbacks<_i60.Circle>);
  @override
  _i60.ArgumentCallbacks<_i60.Fill> get onFillTapped => (super.noSuchMethod(
        Invocation.getter(#onFillTapped),
        returnValue: _FakeArgumentCallbacks_101<_i60.Fill>(
          this,
          Invocation.getter(#onFillTapped),
        ),
      ) as _i60.ArgumentCallbacks<_i60.Fill>);
  @override
  List<_i60.OnFeatureInteractionCallback> get onFeatureTapped =>
      (super.noSuchMethod(
        Invocation.getter(#onFeatureTapped),
        returnValue: <_i60.OnFeatureInteractionCallback>[],
      ) as List<_i60.OnFeatureInteractionCallback>);
  @override
  List<_i60.OnFeatureDragnCallback> get onFeatureDrag => (super.noSuchMethod(
        Invocation.getter(#onFeatureDrag),
        returnValue: <_i60.OnFeatureDragnCallback>[],
      ) as List<_i60.OnFeatureDragnCallback>);
  @override
  _i60.ArgumentCallbacks<_i60.Symbol> get onInfoWindowTapped =>
      (super.noSuchMethod(
        Invocation.getter(#onInfoWindowTapped),
        returnValue: _FakeArgumentCallbacks_101<_i60.Symbol>(
          this,
          Invocation.getter(#onInfoWindowTapped),
        ),
      ) as _i60.ArgumentCallbacks<_i60.Symbol>);
  @override
  _i60.ArgumentCallbacks<_i60.Line> get onLineTapped => (super.noSuchMethod(
        Invocation.getter(#onLineTapped),
        returnValue: _FakeArgumentCallbacks_101<_i60.Line>(
          this,
          Invocation.getter(#onLineTapped),
        ),
      ) as _i60.ArgumentCallbacks<_i60.Line>);
  @override
  Set<_i60.Symbol> get symbols => (super.noSuchMethod(
        Invocation.getter(#symbols),
        returnValue: <_i60.Symbol>{},
      ) as Set<_i60.Symbol>);
  @override
  Set<_i60.Line> get lines => (super.noSuchMethod(
        Invocation.getter(#lines),
        returnValue: <_i60.Line>{},
      ) as Set<_i60.Line>);
  @override
  Set<_i60.Circle> get circles => (super.noSuchMethod(
        Invocation.getter(#circles),
        returnValue: <_i60.Circle>{},
      ) as Set<_i60.Circle>);
  @override
  Set<_i60.Fill> get fills => (super.noSuchMethod(
        Invocation.getter(#fills),
        returnValue: <_i60.Fill>{},
      ) as Set<_i60.Fill>);
  @override
  bool get isCameraMoving => (super.noSuchMethod(
        Invocation.getter(#isCameraMoving),
        returnValue: false,
      ) as bool);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  void resizeWebMap() => super.noSuchMethod(
        Invocation.method(
          #resizeWebMap,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void forceResizeWebMap() => super.noSuchMethod(
        Invocation.method(
          #forceResizeWebMap,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.Future<bool?> animateCamera(
    _i60.CameraUpdate? cameraUpdate, {
    Duration? duration,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #animateCamera,
          [cameraUpdate],
          {#duration: duration},
        ),
        returnValue: _i2.Future<bool?>.value(),
      ) as _i2.Future<bool?>);
  @override
  _i2.Future<bool?> moveCamera(_i60.CameraUpdate? cameraUpdate) =>
      (super.noSuchMethod(
        Invocation.method(
          #moveCamera,
          [cameraUpdate],
        ),
        returnValue: _i2.Future<bool?>.value(),
      ) as _i2.Future<bool?>);
  @override
  _i2.Future<void> addGeoJsonSource(
    String? sourceId,
    Map<String, dynamic>? geojson, {
    String? promoteId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addGeoJsonSource,
          [
            sourceId,
            geojson,
          ],
          {#promoteId: promoteId},
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setGeoJsonSource(
    String? sourceId,
    Map<String, dynamic>? geojson,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setGeoJsonSource,
          [
            sourceId,
            geojson,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setGeoJsonFeature(
    String? sourceId,
    Map<String, dynamic>? geojsonFeature,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setGeoJsonFeature,
          [
            sourceId,
            geojsonFeature,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> addSymbolLayer(
    String? sourceId,
    String? layerId,
    _i60.SymbolLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
    dynamic filter,
    bool? enableInteraction = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSymbolLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
            #filter: filter,
            #enableInteraction: enableInteraction,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> addLineLayer(
    String? sourceId,
    String? layerId,
    _i60.LineLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
    dynamic filter,
    bool? enableInteraction = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLineLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
            #filter: filter,
            #enableInteraction: enableInteraction,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> addFillLayer(
    String? sourceId,
    String? layerId,
    _i60.FillLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
    dynamic filter,
    bool? enableInteraction = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFillLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
            #filter: filter,
            #enableInteraction: enableInteraction,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> addFillExtrusionLayer(
    String? sourceId,
    String? layerId,
    _i60.FillExtrusionLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
    dynamic filter,
    bool? enableInteraction = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFillExtrusionLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
            #filter: filter,
            #enableInteraction: enableInteraction,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> addCircleLayer(
    String? sourceId,
    String? layerId,
    _i60.CircleLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
    dynamic filter,
    bool? enableInteraction = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCircleLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
            #filter: filter,
            #enableInteraction: enableInteraction,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> addRasterLayer(
    String? sourceId,
    String? layerId,
    _i60.RasterLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addRasterLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> addHillshadeLayer(
    String? sourceId,
    String? layerId,
    _i60.HillshadeLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addHillshadeLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> addHeatmapLayer(
    String? sourceId,
    String? layerId,
    _i60.HeatmapLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addHeatmapLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> updateMyLocationTrackingMode(
          _i60.MyLocationTrackingMode? myLocationTrackingMode) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMyLocationTrackingMode,
          [myLocationTrackingMode],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> matchMapLanguageWithDeviceDefault() => (super.noSuchMethod(
        Invocation.method(
          #matchMapLanguageWithDeviceDefault,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> updateContentInsets(
    _i58.EdgeInsets? insets, [
    bool? animated = false,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateContentInsets,
          [
            insets,
            animated,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setMapLanguage(String? language) => (super.noSuchMethod(
        Invocation.method(
          #setMapLanguage,
          [language],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setTelemetryEnabled(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #setTelemetryEnabled,
          [enabled],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<bool> getTelemetryEnabled() => (super.noSuchMethod(
        Invocation.method(
          #getTelemetryEnabled,
          [],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<_i60.Symbol> addSymbol(
    _i60.SymbolOptions? options, [
    Map<dynamic, dynamic>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSymbol,
          [
            options,
            data,
          ],
        ),
        returnValue: _i2.Future<_i60.Symbol>.value(_FakeSymbol_102(
          this,
          Invocation.method(
            #addSymbol,
            [
              options,
              data,
            ],
          ),
        )),
      ) as _i2.Future<_i60.Symbol>);
  @override
  _i2.Future<List<_i60.Symbol>> addSymbols(
    List<_i60.SymbolOptions>? options, [
    List<Map<dynamic, dynamic>>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSymbols,
          [
            options,
            data,
          ],
        ),
        returnValue: _i2.Future<List<_i60.Symbol>>.value(<_i60.Symbol>[]),
      ) as _i2.Future<List<_i60.Symbol>>);
  @override
  _i2.Future<void> updateSymbol(
    _i60.Symbol? symbol,
    _i60.SymbolOptions? changes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSymbol,
          [
            symbol,
            changes,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<_i60.LatLng> getSymbolLatLng(_i60.Symbol? symbol) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSymbolLatLng,
          [symbol],
        ),
        returnValue: _i2.Future<_i60.LatLng>.value(_FakeLatLng_103(
          this,
          Invocation.method(
            #getSymbolLatLng,
            [symbol],
          ),
        )),
      ) as _i2.Future<_i60.LatLng>);
  @override
  _i2.Future<void> removeSymbol(_i60.Symbol? symbol) => (super.noSuchMethod(
        Invocation.method(
          #removeSymbol,
          [symbol],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> removeSymbols(Iterable<_i60.Symbol>? symbols) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeSymbols,
          [symbols],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> clearSymbols() => (super.noSuchMethod(
        Invocation.method(
          #clearSymbols,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<_i60.Line> addLine(
    _i60.LineOptions? options, [
    Map<dynamic, dynamic>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLine,
          [
            options,
            data,
          ],
        ),
        returnValue: _i2.Future<_i60.Line>.value(_FakeLine_104(
          this,
          Invocation.method(
            #addLine,
            [
              options,
              data,
            ],
          ),
        )),
      ) as _i2.Future<_i60.Line>);
  @override
  _i2.Future<List<_i60.Line>> addLines(
    List<_i60.LineOptions>? options, [
    List<Map<dynamic, dynamic>>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLines,
          [
            options,
            data,
          ],
        ),
        returnValue: _i2.Future<List<_i60.Line>>.value(<_i60.Line>[]),
      ) as _i2.Future<List<_i60.Line>>);
  @override
  _i2.Future<void> updateLine(
    _i60.Line? line,
    _i60.LineOptions? changes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLine,
          [
            line,
            changes,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<List<_i60.LatLng>> getLineLatLngs(_i60.Line? line) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLineLatLngs,
          [line],
        ),
        returnValue: _i2.Future<List<_i60.LatLng>>.value(<_i60.LatLng>[]),
      ) as _i2.Future<List<_i60.LatLng>>);
  @override
  _i2.Future<void> removeLine(_i60.Line? line) => (super.noSuchMethod(
        Invocation.method(
          #removeLine,
          [line],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> removeLines(Iterable<_i60.Line>? lines) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeLines,
          [lines],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> clearLines() => (super.noSuchMethod(
        Invocation.method(
          #clearLines,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<_i60.Circle> addCircle(
    _i60.CircleOptions? options, [
    Map<dynamic, dynamic>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCircle,
          [
            options,
            data,
          ],
        ),
        returnValue: _i2.Future<_i60.Circle>.value(_FakeCircle_105(
          this,
          Invocation.method(
            #addCircle,
            [
              options,
              data,
            ],
          ),
        )),
      ) as _i2.Future<_i60.Circle>);
  @override
  _i2.Future<List<_i60.Circle>> addCircles(
    List<_i60.CircleOptions>? options, [
    List<Map<dynamic, dynamic>>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCircles,
          [
            options,
            data,
          ],
        ),
        returnValue: _i2.Future<List<_i60.Circle>>.value(<_i60.Circle>[]),
      ) as _i2.Future<List<_i60.Circle>>);
  @override
  _i2.Future<void> updateCircle(
    _i60.Circle? circle,
    _i60.CircleOptions? changes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCircle,
          [
            circle,
            changes,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<_i60.LatLng> getCircleLatLng(_i60.Circle? circle) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCircleLatLng,
          [circle],
        ),
        returnValue: _i2.Future<_i60.LatLng>.value(_FakeLatLng_103(
          this,
          Invocation.method(
            #getCircleLatLng,
            [circle],
          ),
        )),
      ) as _i2.Future<_i60.LatLng>);
  @override
  _i2.Future<void> removeCircle(_i60.Circle? circle) => (super.noSuchMethod(
        Invocation.method(
          #removeCircle,
          [circle],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> removeCircles(Iterable<_i60.Circle>? circles) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeCircles,
          [circles],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> clearCircles() => (super.noSuchMethod(
        Invocation.method(
          #clearCircles,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<_i60.Fill> addFill(
    _i60.FillOptions? options, [
    Map<dynamic, dynamic>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFill,
          [
            options,
            data,
          ],
        ),
        returnValue: _i2.Future<_i60.Fill>.value(_FakeFill_106(
          this,
          Invocation.method(
            #addFill,
            [
              options,
              data,
            ],
          ),
        )),
      ) as _i2.Future<_i60.Fill>);
  @override
  _i2.Future<List<_i60.Fill>> addFills(
    List<_i60.FillOptions>? options, [
    List<Map<dynamic, dynamic>>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFills,
          [
            options,
            data,
          ],
        ),
        returnValue: _i2.Future<List<_i60.Fill>>.value(<_i60.Fill>[]),
      ) as _i2.Future<List<_i60.Fill>>);
  @override
  _i2.Future<void> updateFill(
    _i60.Fill? fill,
    _i60.FillOptions? changes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateFill,
          [
            fill,
            changes,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> clearFills() => (super.noSuchMethod(
        Invocation.method(
          #clearFills,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> removeFill(_i60.Fill? fill) => (super.noSuchMethod(
        Invocation.method(
          #removeFill,
          [fill],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> removeFills(Iterable<_i60.Fill>? fills) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFills,
          [fills],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<List<dynamic>> queryRenderedFeatures(
    _i61.Point<double>? point,
    List<String>? layerIds,
    List<Object>? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryRenderedFeatures,
          [
            point,
            layerIds,
            filter,
          ],
        ),
        returnValue: _i2.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i2.Future<List<dynamic>>);
  @override
  _i2.Future<List<dynamic>> queryRenderedFeaturesInRect(
    _i77.Rect? rect,
    List<String>? layerIds,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryRenderedFeaturesInRect,
          [
            rect,
            layerIds,
            filter,
          ],
        ),
        returnValue: _i2.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i2.Future<List<dynamic>>);
  @override
  _i2.Future<dynamic> invalidateAmbientCache() => (super.noSuchMethod(
        Invocation.method(
          #invalidateAmbientCache,
          [],
        ),
        returnValue: _i2.Future<dynamic>.value(),
      ) as _i2.Future<dynamic>);
  @override
  _i2.Future<_i60.LatLng?> requestMyLocationLatLng() => (super.noSuchMethod(
        Invocation.method(
          #requestMyLocationLatLng,
          [],
        ),
        returnValue: _i2.Future<_i60.LatLng?>.value(),
      ) as _i2.Future<_i60.LatLng?>);
  @override
  _i2.Future<_i60.LatLngBounds> getVisibleRegion() => (super.noSuchMethod(
        Invocation.method(
          #getVisibleRegion,
          [],
        ),
        returnValue: _i2.Future<_i60.LatLngBounds>.value(_FakeLatLngBounds_107(
          this,
          Invocation.method(
            #getVisibleRegion,
            [],
          ),
        )),
      ) as _i2.Future<_i60.LatLngBounds>);
  @override
  _i2.Future<void> addImage(
    String? name,
    _i73.Uint8List? bytes, [
    bool? sdf = false,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addImage,
          [
            name,
            bytes,
            sdf,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setSymbolIconAllowOverlap(bool? enable) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSymbolIconAllowOverlap,
          [enable],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setSymbolIconIgnorePlacement(bool? enable) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSymbolIconIgnorePlacement,
          [enable],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setSymbolTextAllowOverlap(bool? enable) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSymbolTextAllowOverlap,
          [enable],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setSymbolTextIgnorePlacement(bool? enable) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSymbolTextIgnorePlacement,
          [enable],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> addImageSource(
    String? imageSourceId,
    _i73.Uint8List? bytes,
    _i60.LatLngQuad? coordinates,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addImageSource,
          [
            imageSourceId,
            bytes,
            coordinates,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> updateImageSource(
    String? imageSourceId,
    _i73.Uint8List? bytes,
    _i60.LatLngQuad? coordinates,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateImageSource,
          [
            imageSourceId,
            bytes,
            coordinates,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> removeImageSource(String? imageSourceId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeImageSource,
          [imageSourceId],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> removeSource(String? sourceId) => (super.noSuchMethod(
        Invocation.method(
          #removeSource,
          [sourceId],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> addImageLayer(
    String? layerId,
    String? imageSourceId, {
    double? minzoom,
    double? maxzoom,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addImageLayer,
          [
            layerId,
            imageSourceId,
          ],
          {
            #minzoom: minzoom,
            #maxzoom: maxzoom,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> addImageLayerBelow(
    String? layerId,
    String? sourceId,
    String? imageSourceId, {
    double? minzoom,
    double? maxzoom,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addImageLayerBelow,
          [
            layerId,
            sourceId,
            imageSourceId,
          ],
          {
            #minzoom: minzoom,
            #maxzoom: maxzoom,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> addLayerBelow(
    String? layerId,
    String? sourceId,
    String? imageSourceId, {
    double? minzoom,
    double? maxzoom,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLayerBelow,
          [
            layerId,
            sourceId,
            imageSourceId,
          ],
          {
            #minzoom: minzoom,
            #maxzoom: maxzoom,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> removeLayer(String? layerId) => (super.noSuchMethod(
        Invocation.method(
          #removeLayer,
          [layerId],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> setFilter(
    String? layerId,
    dynamic filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setFilter,
          [
            layerId,
            filter,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<_i61.Point<num>> toScreenLocation(_i60.LatLng? latLng) =>
      (super.noSuchMethod(
        Invocation.method(
          #toScreenLocation,
          [latLng],
        ),
        returnValue: _i2.Future<_i61.Point<num>>.value(_FakePoint_108<num>(
          this,
          Invocation.method(
            #toScreenLocation,
            [latLng],
          ),
        )),
      ) as _i2.Future<_i61.Point<num>>);
  @override
  _i2.Future<List<_i61.Point<num>>> toScreenLocationBatch(
          Iterable<_i60.LatLng>? latLngs) =>
      (super.noSuchMethod(
        Invocation.method(
          #toScreenLocationBatch,
          [latLngs],
        ),
        returnValue:
            _i2.Future<List<_i61.Point<num>>>.value(<_i61.Point<num>>[]),
      ) as _i2.Future<List<_i61.Point<num>>>);
  @override
  _i2.Future<_i60.LatLng> toLatLng(_i61.Point<num>? screenLocation) =>
      (super.noSuchMethod(
        Invocation.method(
          #toLatLng,
          [screenLocation],
        ),
        returnValue: _i2.Future<_i60.LatLng>.value(_FakeLatLng_103(
          this,
          Invocation.method(
            #toLatLng,
            [screenLocation],
          ),
        )),
      ) as _i2.Future<_i60.LatLng>);
  @override
  _i2.Future<double> getMetersPerPixelAtLatitude(double? latitude) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMetersPerPixelAtLatitude,
          [latitude],
        ),
        returnValue: _i2.Future<double>.value(0.0),
      ) as _i2.Future<double>);
  @override
  _i2.Future<void> addSource(
    String? sourceid,
    _i60.SourceProperties? properties,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSource,
          [
            sourceid,
            properties,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> addLayer(
    String? sourceId,
    String? layerId,
    _i60.LayerProperties? properties, {
    String? belowLayerId,
    bool? enableInteraction = true,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
    dynamic filter,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #enableInteraction: enableInteraction,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
            #filter: filter,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<String> takeSnapshot(_i60.SnapshotOptions? snapshotOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #takeSnapshot,
          [snapshotOptions],
        ),
        returnValue: _i2.Future<String>.value(''),
      ) as _i2.Future<String>);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(_i77.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i77.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PackageInfoWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockPackageInfoWrapper extends _i1.Mock
    implements _i41.PackageInfoWrapper {
  MockPackageInfoWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<_i62.PackageInfo> fromPlatform() => (super.noSuchMethod(
        Invocation.method(
          #fromPlatform,
          [],
        ),
        returnValue: _i2.Future<_i62.PackageInfo>.value(_FakePackageInfo_109(
          this,
          Invocation.method(
            #fromPlatform,
            [],
          ),
        )),
      ) as _i2.Future<_i62.PackageInfo>);
}

/// A class which mocks [PathProviderWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockPathProviderWrapper extends _i1.Mock
    implements _i42.PathProviderWrapper {
  MockPathProviderWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<String> get appDocumentsPath => (super.noSuchMethod(
        Invocation.getter(#appDocumentsPath),
        returnValue: _i2.Future<String>.value(''),
      ) as _i2.Future<String>);
  @override
  _i2.Future<String> get temporaryPath => (super.noSuchMethod(
        Invocation.getter(#temporaryPath),
        returnValue: _i2.Future<String>.value(''),
      ) as _i2.Future<String>);
}

/// A class which mocks [PermissionHandlerWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockPermissionHandlerWrapper extends _i1.Mock
    implements _i43.PermissionHandlerWrapper {
  MockPermissionHandlerWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<bool> get isLocationGranted => (super.noSuchMethod(
        Invocation.getter(#isLocationGranted),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<bool> get isLocationAlwaysGranted => (super.noSuchMethod(
        Invocation.getter(#isLocationAlwaysGranted),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<bool> requestLocation() => (super.noSuchMethod(
        Invocation.method(
          #requestLocation,
          [],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<bool> requestLocationAlways() => (super.noSuchMethod(
        Invocation.method(
          #requestLocationAlways,
          [],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<bool> requestPhotos(
    _i29.DeviceInfoWrapper? deviceInfo,
    _i38.IoWrapper? ioWrapper,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestPhotos,
          [
            deviceInfo,
            ioWrapper,
          ],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<bool> requestNotification() => (super.noSuchMethod(
        Invocation.method(
          #requestNotification,
          [],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<bool> openSettings() => (super.noSuchMethod(
        Invocation.method(
          #openSettings,
          [],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
}

/// A class which mocks [PhotoManagerWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockPhotoManagerWrapper extends _i1.Mock
    implements _i44.PhotoManagerWrapper {
  MockPhotoManagerWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<_i65.AssetPathEntity?> getAllAssetPathEntity(
          _i65.RequestType? type) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllAssetPathEntity,
          [type],
        ),
        returnValue: _i2.Future<_i65.AssetPathEntity?>.value(),
      ) as _i2.Future<_i65.AssetPathEntity?>);
}

/// A class which mocks [PurchasesWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockPurchasesWrapper extends _i1.Mock implements _i45.PurchasesWrapper {
  MockPurchasesWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<bool> get isAnonymous => (super.noSuchMethod(
        Invocation.getter(#isAnonymous),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  void addCustomerInfoUpdateListener(
          dynamic Function(_i63.CustomerInfo)? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #addCustomerInfoUpdateListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.Future<void> configure(String? apiKey) => (super.noSuchMethod(
        Invocation.method(
          #configure,
          [apiKey],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  void setLogLevel(_i63.LogLevel? level) => super.noSuchMethod(
        Invocation.method(
          #setLogLevel,
          [level],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.Future<_i63.Offerings> getOfferings() => (super.noSuchMethod(
        Invocation.method(
          #getOfferings,
          [],
        ),
        returnValue: _i2.Future<_i63.Offerings>.value(_FakeOfferings_110(
          this,
          Invocation.method(
            #getOfferings,
            [],
          ),
        )),
      ) as _i2.Future<_i63.Offerings>);
  @override
  _i2.Future<_i63.CustomerInfo> getCustomerInfo() => (super.noSuchMethod(
        Invocation.method(
          #getCustomerInfo,
          [],
        ),
        returnValue: _i2.Future<_i63.CustomerInfo>.value(_FakeCustomerInfo_111(
          this,
          Invocation.method(
            #getCustomerInfo,
            [],
          ),
        )),
      ) as _i2.Future<_i63.CustomerInfo>);
  @override
  _i2.Future<_i63.LogInResult> logIn(String? appUserId) => (super.noSuchMethod(
        Invocation.method(
          #logIn,
          [appUserId],
        ),
        returnValue: _i2.Future<_i63.LogInResult>.value(_FakeLogInResult_112(
          this,
          Invocation.method(
            #logIn,
            [appUserId],
          ),
        )),
      ) as _i2.Future<_i63.LogInResult>);
  @override
  _i2.Future<_i63.CustomerInfo> purchasePackage(_i63.Package? package) =>
      (super.noSuchMethod(
        Invocation.method(
          #purchasePackage,
          [package],
        ),
        returnValue: _i2.Future<_i63.CustomerInfo>.value(_FakeCustomerInfo_111(
          this,
          Invocation.method(
            #purchasePackage,
            [package],
          ),
        )),
      ) as _i2.Future<_i63.CustomerInfo>);
  @override
  _i2.Future<_i63.CustomerInfo> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i2.Future<_i63.CustomerInfo>.value(_FakeCustomerInfo_111(
          this,
          Invocation.method(
            #logOut,
            [],
          ),
        )),
      ) as _i2.Future<_i63.CustomerInfo>);
  @override
  _i2.Future<_i63.CustomerInfo> restorePurchases() => (super.noSuchMethod(
        Invocation.method(
          #restorePurchases,
          [],
        ),
        returnValue: _i2.Future<_i63.CustomerInfo>.value(_FakeCustomerInfo_111(
          this,
          Invocation.method(
            #restorePurchases,
            [],
          ),
        )),
      ) as _i2.Future<_i63.CustomerInfo>);
}

/// A class which mocks [ServicesWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockServicesWrapper extends _i1.Mock implements _i46.ServicesWrapper {
  MockServicesWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i64.MethodChannel methodChannel(String? name) => (super.noSuchMethod(
        Invocation.method(
          #methodChannel,
          [name],
        ),
        returnValue: _FakeMethodChannel_113(
          this,
          Invocation.method(
            #methodChannel,
            [name],
          ),
        ),
      ) as _i64.MethodChannel);
}

/// A class which mocks [SharedPreferencesWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferencesWrapper extends _i1.Mock
    implements _i47.SharedPreferencesWrapper {
  MockSharedPreferencesWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<bool> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<bool> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
}

/// A class which mocks [SharePlusWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharePlusWrapper extends _i1.Mock implements _i48.SharePlusWrapper {
  MockSharePlusWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<void> shareFiles(
    List<_i76.XFile>? files, {
    String? subject,
    String? text,
    _i77.Rect? sharePositionOrigin,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #shareFiles,
          [files],
          {
            #subject: subject,
            #text: text,
            #sharePositionOrigin: sharePositionOrigin,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<void> share(
    String? text, {
    String? subject,
    _i77.Rect? sharePositionOrigin,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #share,
          [text],
          {
            #subject: subject,
            #sharePositionOrigin: sharePositionOrigin,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
}

/// A class which mocks [UrlLauncherWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockUrlLauncherWrapper extends _i1.Mock
    implements _i49.UrlLauncherWrapper {
  MockUrlLauncherWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<bool> canLaunch(String? url) => (super.noSuchMethod(
        Invocation.method(
          #canLaunch,
          [url],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<bool> launch(String? url) => (super.noSuchMethod(
        Invocation.method(
          #launch,
          [url],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
}

/// A class which mocks [AssetPathEntity].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockAssetPathEntity extends _i1.Mock implements _i65.AssetPathEntity {
  MockAssetPathEntity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: '',
      ) as String);
  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: '',
      ) as String);
  @override
  int get assetCount => (super.noSuchMethod(
        Invocation.getter(#assetCount),
        returnValue: 0,
      ) as int);
  @override
  int get albumType => (super.noSuchMethod(
        Invocation.getter(#albumType),
        returnValue: 0,
      ) as int);
  @override
  _i65.RequestType get type => (super.noSuchMethod(
        Invocation.getter(#type),
        returnValue: _FakeRequestType_114(
          this,
          Invocation.getter(#type),
        ),
      ) as _i65.RequestType);
  @override
  bool get isAll => (super.noSuchMethod(
        Invocation.getter(#isAll),
        returnValue: false,
      ) as bool);
  @override
  _i65.PMFilter get filterOption => (super.noSuchMethod(
        Invocation.getter(#filterOption),
        returnValue: _FakePMFilter_115(
          this,
          Invocation.getter(#filterOption),
        ),
      ) as _i65.PMFilter);
  @override
  _i2.Future<int> get assetCountAsync => (super.noSuchMethod(
        Invocation.getter(#assetCountAsync),
        returnValue: _i2.Future<int>.value(0),
      ) as _i2.Future<int>);
  @override
  _i2.Future<_i65.AssetPathEntity> obtainForNewProperties(
          {bool? maxDateTimeToNow = true}) =>
      (super.noSuchMethod(
        Invocation.method(
          #obtainForNewProperties,
          [],
          {#maxDateTimeToNow: maxDateTimeToNow},
        ),
        returnValue:
            _i2.Future<_i65.AssetPathEntity>.value(_FakeAssetPathEntity_116(
          this,
          Invocation.method(
            #obtainForNewProperties,
            [],
            {#maxDateTimeToNow: maxDateTimeToNow},
          ),
        )),
      ) as _i2.Future<_i65.AssetPathEntity>);
  @override
  _i2.Future<List<_i65.AssetEntity>> getAssetListPaged({
    required int? page,
    required int? size,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAssetListPaged,
          [],
          {
            #page: page,
            #size: size,
          },
        ),
        returnValue:
            _i2.Future<List<_i65.AssetEntity>>.value(<_i65.AssetEntity>[]),
      ) as _i2.Future<List<_i65.AssetEntity>>);
  @override
  _i2.Future<List<_i65.AssetEntity>> getAssetListRange({
    required int? start,
    required int? end,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAssetListRange,
          [],
          {
            #start: start,
            #end: end,
          },
        ),
        returnValue:
            _i2.Future<List<_i65.AssetEntity>>.value(<_i65.AssetEntity>[]),
      ) as _i2.Future<List<_i65.AssetEntity>>);
  @override
  _i2.Future<List<_i65.AssetPathEntity>> getSubPathList() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSubPathList,
          [],
        ),
        returnValue: _i2.Future<List<_i65.AssetPathEntity>>.value(
            <_i65.AssetPathEntity>[]),
      ) as _i2.Future<List<_i65.AssetPathEntity>>);
  @override
  _i2.Future<_i65.AssetPathEntity?> fetchPathProperties(
          {_i65.FilterOptionGroup? filterOptionGroup}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPathProperties,
          [],
          {#filterOptionGroup: filterOptionGroup},
        ),
        returnValue: _i2.Future<_i65.AssetPathEntity?>.value(),
      ) as _i2.Future<_i65.AssetPathEntity?>);
  @override
  _i65.AssetPathEntity copyWith({
    String? id,
    String? name,
    int? albumType = 1,
    DateTime? lastModified,
    _i65.RequestType? type,
    bool? isAll,
    _i65.FilterOptionGroup? filterOption,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #id: id,
            #name: name,
            #albumType: albumType,
            #lastModified: lastModified,
            #type: type,
            #isAll: isAll,
            #filterOption: filterOption,
          },
        ),
        returnValue: _FakeAssetPathEntity_116(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #id: id,
              #name: name,
              #albumType: albumType,
              #lastModified: lastModified,
              #type: type,
              #isAll: isAll,
              #filterOption: filterOption,
            },
          ),
        ),
      ) as _i65.AssetPathEntity);
}

/// A class which mocks [Batch].
///
/// See the documentation for Mockito's code generation for more information.
class MockBatch extends _i1.Mock implements _i66.Batch {
  MockBatch() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get length => (super.noSuchMethod(
        Invocation.getter(#length),
        returnValue: 0,
      ) as int);
  @override
  _i2.Future<List<Object?>> commit({
    bool? exclusive,
    bool? noResult,
    bool? continueOnError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #commit,
          [],
          {
            #exclusive: exclusive,
            #noResult: noResult,
            #continueOnError: continueOnError,
          },
        ),
        returnValue: _i2.Future<List<Object?>>.value(<Object?>[]),
      ) as _i2.Future<List<Object?>>);
  @override
  _i2.Future<List<Object?>> apply({
    bool? noResult,
    bool? continueOnError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #apply,
          [],
          {
            #noResult: noResult,
            #continueOnError: continueOnError,
          },
        ),
        returnValue: _i2.Future<List<Object?>>.value(<Object?>[]),
      ) as _i2.Future<List<Object?>>);
  @override
  void rawInsert(
    String? sql, [
    List<Object?>? arguments,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #rawInsert,
          [
            sql,
            arguments,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void insert(
    String? table,
    Map<String, Object?>? values, {
    String? nullColumnHack,
    _i66.ConflictAlgorithm? conflictAlgorithm,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #insert,
          [
            table,
            values,
          ],
          {
            #nullColumnHack: nullColumnHack,
            #conflictAlgorithm: conflictAlgorithm,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void rawUpdate(
    String? sql, [
    List<Object?>? arguments,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #rawUpdate,
          [
            sql,
            arguments,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void update(
    String? table,
    Map<String, Object?>? values, {
    String? where,
    List<Object?>? whereArgs,
    _i66.ConflictAlgorithm? conflictAlgorithm,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            table,
            values,
          ],
          {
            #where: where,
            #whereArgs: whereArgs,
            #conflictAlgorithm: conflictAlgorithm,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void rawDelete(
    String? sql, [
    List<Object?>? arguments,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #rawDelete,
          [
            sql,
            arguments,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void delete(
    String? table, {
    String? where,
    List<Object?>? whereArgs,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
          {
            #where: where,
            #whereArgs: whereArgs,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void execute(
    String? sql, [
    List<Object?>? arguments,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #execute,
          [
            sql,
            arguments,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void query(
    String? table, {
    bool? distinct,
    List<String>? columns,
    String? where,
    List<Object?>? whereArgs,
    String? groupBy,
    String? having,
    String? orderBy,
    int? limit,
    int? offset,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #query,
          [table],
          {
            #distinct: distinct,
            #columns: columns,
            #where: where,
            #whereArgs: whereArgs,
            #groupBy: groupBy,
            #having: having,
            #orderBy: orderBy,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void rawQuery(
    String? sql, [
    List<Object?>? arguments,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #rawQuery,
          [
            sql,
            arguments,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Completer].
///
/// See the documentation for Mockito's code generation for more information.
class MockCompleter<T> extends _i1.Mock implements _i2.Completer<T> {
  MockCompleter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<T> get future => (super.noSuchMethod(
        Invocation.getter(#future),
        returnValue: _FakeFuture_83<T>(
          this,
          Invocation.getter(#future),
        ),
      ) as _i2.Future<T>);
  @override
  bool get isCompleted => (super.noSuchMethod(
        Invocation.getter(#isCompleted),
        returnValue: false,
      ) as bool);
  @override
  void complete([_i2.FutureOr<T>? value]) => super.noSuchMethod(
        Invocation.method(
          #complete,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void completeError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #completeError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Database].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabase extends _i1.Mock implements _i66.Database {
  MockDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get path => (super.noSuchMethod(
        Invocation.getter(#path),
        returnValue: '',
      ) as String);
  @override
  bool get isOpen => (super.noSuchMethod(
        Invocation.getter(#isOpen),
        returnValue: false,
      ) as bool);
  @override
  _i66.Database get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _FakeDatabase_117(
          this,
          Invocation.getter(#database),
        ),
      ) as _i66.Database);
  @override
  _i2.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<T> transaction<T>(
    _i2.Future<T> Function(_i66.Transaction)? action, {
    bool? exclusive,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [action],
          {#exclusive: exclusive},
        ),
        returnValue: _FakeFuture_83<T>(
          this,
          Invocation.method(
            #transaction,
            [action],
            {#exclusive: exclusive},
          ),
        ),
      ) as _i2.Future<T>);
  @override
  _i2.Future<T> devInvokeMethod<T>(
    String? method, [
    Object? arguments,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #devInvokeMethod,
          [
            method,
            arguments,
          ],
        ),
        returnValue: _FakeFuture_83<T>(
          this,
          Invocation.method(
            #devInvokeMethod,
            [
              method,
              arguments,
            ],
          ),
        ),
      ) as _i2.Future<T>);
  @override
  _i2.Future<T> devInvokeSqlMethod<T>(
    String? method,
    String? sql, [
    List<Object?>? arguments,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #devInvokeSqlMethod,
          [
            method,
            sql,
            arguments,
          ],
        ),
        returnValue: _FakeFuture_83<T>(
          this,
          Invocation.method(
            #devInvokeSqlMethod,
            [
              method,
              sql,
              arguments,
            ],
          ),
        ),
      ) as _i2.Future<T>);
  @override
  _i2.Future<void> execute(
    String? sql, [
    List<Object?>? arguments,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [
            sql,
            arguments,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<int> rawInsert(
    String? sql, [
    List<Object?>? arguments,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #rawInsert,
          [
            sql,
            arguments,
          ],
        ),
        returnValue: _i2.Future<int>.value(0),
      ) as _i2.Future<int>);
  @override
  _i2.Future<int> insert(
    String? table,
    Map<String, Object?>? values, {
    String? nullColumnHack,
    _i66.ConflictAlgorithm? conflictAlgorithm,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #insert,
          [
            table,
            values,
          ],
          {
            #nullColumnHack: nullColumnHack,
            #conflictAlgorithm: conflictAlgorithm,
          },
        ),
        returnValue: _i2.Future<int>.value(0),
      ) as _i2.Future<int>);
  @override
  _i2.Future<List<Map<String, Object?>>> query(
    String? table, {
    bool? distinct,
    List<String>? columns,
    String? where,
    List<Object?>? whereArgs,
    String? groupBy,
    String? having,
    String? orderBy,
    int? limit,
    int? offset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #query,
          [table],
          {
            #distinct: distinct,
            #columns: columns,
            #where: where,
            #whereArgs: whereArgs,
            #groupBy: groupBy,
            #having: having,
            #orderBy: orderBy,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i2.Future<List<Map<String, Object?>>>.value(
            <Map<String, Object?>>[]),
      ) as _i2.Future<List<Map<String, Object?>>>);
  @override
  _i2.Future<List<Map<String, Object?>>> rawQuery(
    String? sql, [
    List<Object?>? arguments,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #rawQuery,
          [
            sql,
            arguments,
          ],
        ),
        returnValue: _i2.Future<List<Map<String, Object?>>>.value(
            <Map<String, Object?>>[]),
      ) as _i2.Future<List<Map<String, Object?>>>);
  @override
  _i2.Future<_i66.QueryCursor> rawQueryCursor(
    String? sql,
    List<Object?>? arguments, {
    int? bufferSize,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #rawQueryCursor,
          [
            sql,
            arguments,
          ],
          {#bufferSize: bufferSize},
        ),
        returnValue: _i2.Future<_i66.QueryCursor>.value(_FakeQueryCursor_118(
          this,
          Invocation.method(
            #rawQueryCursor,
            [
              sql,
              arguments,
            ],
            {#bufferSize: bufferSize},
          ),
        )),
      ) as _i2.Future<_i66.QueryCursor>);
  @override
  _i2.Future<_i66.QueryCursor> queryCursor(
    String? table, {
    bool? distinct,
    List<String>? columns,
    String? where,
    List<Object?>? whereArgs,
    String? groupBy,
    String? having,
    String? orderBy,
    int? limit,
    int? offset,
    int? bufferSize,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryCursor,
          [table],
          {
            #distinct: distinct,
            #columns: columns,
            #where: where,
            #whereArgs: whereArgs,
            #groupBy: groupBy,
            #having: having,
            #orderBy: orderBy,
            #limit: limit,
            #offset: offset,
            #bufferSize: bufferSize,
          },
        ),
        returnValue: _i2.Future<_i66.QueryCursor>.value(_FakeQueryCursor_118(
          this,
          Invocation.method(
            #queryCursor,
            [table],
            {
              #distinct: distinct,
              #columns: columns,
              #where: where,
              #whereArgs: whereArgs,
              #groupBy: groupBy,
              #having: having,
              #orderBy: orderBy,
              #limit: limit,
              #offset: offset,
              #bufferSize: bufferSize,
            },
          ),
        )),
      ) as _i2.Future<_i66.QueryCursor>);
  @override
  _i2.Future<int> rawUpdate(
    String? sql, [
    List<Object?>? arguments,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #rawUpdate,
          [
            sql,
            arguments,
          ],
        ),
        returnValue: _i2.Future<int>.value(0),
      ) as _i2.Future<int>);
  @override
  _i2.Future<int> update(
    String? table,
    Map<String, Object?>? values, {
    String? where,
    List<Object?>? whereArgs,
    _i66.ConflictAlgorithm? conflictAlgorithm,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [
            table,
            values,
          ],
          {
            #where: where,
            #whereArgs: whereArgs,
            #conflictAlgorithm: conflictAlgorithm,
          },
        ),
        returnValue: _i2.Future<int>.value(0),
      ) as _i2.Future<int>);
  @override
  _i2.Future<int> rawDelete(
    String? sql, [
    List<Object?>? arguments,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #rawDelete,
          [
            sql,
            arguments,
          ],
        ),
        returnValue: _i2.Future<int>.value(0),
      ) as _i2.Future<int>);
  @override
  _i2.Future<int> delete(
    String? table, {
    String? where,
    List<Object?>? whereArgs,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
          {
            #where: where,
            #whereArgs: whereArgs,
          },
        ),
        returnValue: _i2.Future<int>.value(0),
      ) as _i2.Future<int>);
  @override
  _i66.Batch batch() => (super.noSuchMethod(
        Invocation.method(
          #batch,
          [],
        ),
        returnValue: _FakeBatch_119(
          this,
          Invocation.method(
            #batch,
            [],
          ),
        ),
      ) as _i66.Batch);
}

/// A class which mocks [Directory].
///
/// See the documentation for Mockito's code generation for more information.
class MockDirectory extends _i1.Mock implements _i56.Directory {
  MockDirectory() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get path => (super.noSuchMethod(
        Invocation.getter(#path),
        returnValue: '',
      ) as String);
  @override
  Uri get uri => (super.noSuchMethod(
        Invocation.getter(#uri),
        returnValue: _FakeUri_120(
          this,
          Invocation.getter(#uri),
        ),
      ) as Uri);
  @override
  _i56.Directory get absolute => (super.noSuchMethod(
        Invocation.getter(#absolute),
        returnValue: _FakeDirectory_100(
          this,
          Invocation.getter(#absolute),
        ),
      ) as _i56.Directory);
  @override
  bool get isAbsolute => (super.noSuchMethod(
        Invocation.getter(#isAbsolute),
        returnValue: false,
      ) as bool);
  @override
  _i56.Directory get parent => (super.noSuchMethod(
        Invocation.getter(#parent),
        returnValue: _FakeDirectory_100(
          this,
          Invocation.getter(#parent),
        ),
      ) as _i56.Directory);
  @override
  _i2.Future<_i56.Directory> create({bool? recursive = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [],
          {#recursive: recursive},
        ),
        returnValue: _i2.Future<_i56.Directory>.value(_FakeDirectory_100(
          this,
          Invocation.method(
            #create,
            [],
            {#recursive: recursive},
          ),
        )),
      ) as _i2.Future<_i56.Directory>);
  @override
  void createSync({bool? recursive = false}) => super.noSuchMethod(
        Invocation.method(
          #createSync,
          [],
          {#recursive: recursive},
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.Future<_i56.Directory> createTemp([String? prefix]) =>
      (super.noSuchMethod(
        Invocation.method(
          #createTemp,
          [prefix],
        ),
        returnValue: _i2.Future<_i56.Directory>.value(_FakeDirectory_100(
          this,
          Invocation.method(
            #createTemp,
            [prefix],
          ),
        )),
      ) as _i2.Future<_i56.Directory>);
  @override
  _i56.Directory createTempSync([String? prefix]) => (super.noSuchMethod(
        Invocation.method(
          #createTempSync,
          [prefix],
        ),
        returnValue: _FakeDirectory_100(
          this,
          Invocation.method(
            #createTempSync,
            [prefix],
          ),
        ),
      ) as _i56.Directory);
  @override
  _i2.Future<String> resolveSymbolicLinks() => (super.noSuchMethod(
        Invocation.method(
          #resolveSymbolicLinks,
          [],
        ),
        returnValue: _i2.Future<String>.value(''),
      ) as _i2.Future<String>);
  @override
  String resolveSymbolicLinksSync() => (super.noSuchMethod(
        Invocation.method(
          #resolveSymbolicLinksSync,
          [],
        ),
        returnValue: '',
      ) as String);
  @override
  _i2.Future<_i56.Directory> rename(String? newPath) => (super.noSuchMethod(
        Invocation.method(
          #rename,
          [newPath],
        ),
        returnValue: _i2.Future<_i56.Directory>.value(_FakeDirectory_100(
          this,
          Invocation.method(
            #rename,
            [newPath],
          ),
        )),
      ) as _i2.Future<_i56.Directory>);
  @override
  _i56.Directory renameSync(String? newPath) => (super.noSuchMethod(
        Invocation.method(
          #renameSync,
          [newPath],
        ),
        returnValue: _FakeDirectory_100(
          this,
          Invocation.method(
            #renameSync,
            [newPath],
          ),
        ),
      ) as _i56.Directory);
  @override
  _i2.Stream<_i56.FileSystemEntity> list({
    bool? recursive = false,
    bool? followLinks = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [],
          {
            #recursive: recursive,
            #followLinks: followLinks,
          },
        ),
        returnValue: _i2.Stream<_i56.FileSystemEntity>.empty(),
      ) as _i2.Stream<_i56.FileSystemEntity>);
  @override
  List<_i56.FileSystemEntity> listSync({
    bool? recursive = false,
    bool? followLinks = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listSync,
          [],
          {
            #recursive: recursive,
            #followLinks: followLinks,
          },
        ),
        returnValue: <_i56.FileSystemEntity>[],
      ) as List<_i56.FileSystemEntity>);
  @override
  _i2.Future<bool> exists() => (super.noSuchMethod(
        Invocation.method(
          #exists,
          [],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  bool existsSync() => (super.noSuchMethod(
        Invocation.method(
          #existsSync,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i2.Future<_i56.FileStat> stat() => (super.noSuchMethod(
        Invocation.method(
          #stat,
          [],
        ),
        returnValue: _i2.Future<_i56.FileStat>.value(_FakeFileStat_121(
          this,
          Invocation.method(
            #stat,
            [],
          ),
        )),
      ) as _i2.Future<_i56.FileStat>);
  @override
  _i56.FileStat statSync() => (super.noSuchMethod(
        Invocation.method(
          #statSync,
          [],
        ),
        returnValue: _FakeFileStat_121(
          this,
          Invocation.method(
            #statSync,
            [],
          ),
        ),
      ) as _i56.FileStat);
  @override
  _i2.Future<_i56.FileSystemEntity> delete({bool? recursive = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {#recursive: recursive},
        ),
        returnValue:
            _i2.Future<_i56.FileSystemEntity>.value(_FakeFileSystemEntity_122(
          this,
          Invocation.method(
            #delete,
            [],
            {#recursive: recursive},
          ),
        )),
      ) as _i2.Future<_i56.FileSystemEntity>);
  @override
  void deleteSync({bool? recursive = false}) => super.noSuchMethod(
        Invocation.method(
          #deleteSync,
          [],
          {#recursive: recursive},
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.Stream<_i56.FileSystemEvent> watch({
    int? events = 15,
    bool? recursive = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #watch,
          [],
          {
            #events: events,
            #recursive: recursive,
          },
        ),
        returnValue: _i2.Stream<_i56.FileSystemEvent>.empty(),
      ) as _i2.Stream<_i56.FileSystemEvent>);
}

/// A class which mocks [EntitlementInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockEntitlementInfo extends _i1.Mock implements _i63.EntitlementInfo {
  MockEntitlementInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get identifier => (super.noSuchMethod(
        Invocation.getter(#identifier),
        returnValue: '',
      ) as String);
  @override
  bool get isActive => (super.noSuchMethod(
        Invocation.getter(#isActive),
        returnValue: false,
      ) as bool);
  @override
  bool get willRenew => (super.noSuchMethod(
        Invocation.getter(#willRenew),
        returnValue: false,
      ) as bool);
  @override
  String get latestPurchaseDate => (super.noSuchMethod(
        Invocation.getter(#latestPurchaseDate),
        returnValue: '',
      ) as String);
  @override
  String get originalPurchaseDate => (super.noSuchMethod(
        Invocation.getter(#originalPurchaseDate),
        returnValue: '',
      ) as String);
  @override
  String get productIdentifier => (super.noSuchMethod(
        Invocation.getter(#productIdentifier),
        returnValue: '',
      ) as String);
  @override
  bool get isSandbox => (super.noSuchMethod(
        Invocation.getter(#isSandbox),
        returnValue: false,
      ) as bool);
  @override
  _i63.OwnershipType get ownershipType => (super.noSuchMethod(
        Invocation.getter(#ownershipType),
        returnValue: _i63.OwnershipType.purchased,
      ) as _i63.OwnershipType);
  @override
  _i63.Store get store => (super.noSuchMethod(
        Invocation.getter(#store),
        returnValue: _i63.Store.appStore,
      ) as _i63.Store);
  @override
  _i63.PeriodType get periodType => (super.noSuchMethod(
        Invocation.getter(#periodType),
        returnValue: _i63.PeriodType.intro,
      ) as _i63.PeriodType);
  @override
  _i63.$EntitlementInfoCopyWith<_i63.EntitlementInfo> get copyWith =>
      (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$EntitlementInfoCopyWith_123<_i63.EntitlementInfo>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i63.$EntitlementInfoCopyWith<_i63.EntitlementInfo>);
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [EntitlementInfos].
///
/// See the documentation for Mockito's code generation for more information.
class MockEntitlementInfos extends _i1.Mock implements _i63.EntitlementInfos {
  MockEntitlementInfos() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, _i63.EntitlementInfo> get all => (super.noSuchMethod(
        Invocation.getter(#all),
        returnValue: <String, _i63.EntitlementInfo>{},
      ) as Map<String, _i63.EntitlementInfo>);
  @override
  Map<String, _i63.EntitlementInfo> get active => (super.noSuchMethod(
        Invocation.getter(#active),
        returnValue: <String, _i63.EntitlementInfo>{},
      ) as Map<String, _i63.EntitlementInfo>);
  @override
  _i63.$EntitlementInfosCopyWith<_i63.EntitlementInfos> get copyWith =>
      (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$EntitlementInfosCopyWith_124<_i63.EntitlementInfos>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i63.$EntitlementInfosCopyWith<_i63.EntitlementInfos>);
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [EntityListener].
///
/// See the documentation for Mockito's code generation for more information.
class MockEntityListener<T> extends _i1.Mock implements _i68.EntityListener<T> {
  MockEntityListener() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set onAdd(void Function(T)? _onAdd) => super.noSuchMethod(
        Invocation.setter(
          #onAdd,
          _onAdd,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set onDelete(void Function(T)? _onDelete) => super.noSuchMethod(
        Invocation.setter(
          #onDelete,
          _onDelete,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set onUpdate(void Function(T)? _onUpdate) => super.noSuchMethod(
        Invocation.setter(
          #onUpdate,
          _onUpdate,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set onReset(void Function()? _onReset) => super.noSuchMethod(
        Invocation.setter(
          #onReset,
          _onReset,
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FileSystemEntity].
///
/// See the documentation for Mockito's code generation for more information.
class MockFileSystemEntity extends _i1.Mock implements _i56.FileSystemEntity {
  MockFileSystemEntity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get path => (super.noSuchMethod(
        Invocation.getter(#path),
        returnValue: '',
      ) as String);
  @override
  Uri get uri => (super.noSuchMethod(
        Invocation.getter(#uri),
        returnValue: _FakeUri_120(
          this,
          Invocation.getter(#uri),
        ),
      ) as Uri);
  @override
  bool get isAbsolute => (super.noSuchMethod(
        Invocation.getter(#isAbsolute),
        returnValue: false,
      ) as bool);
  @override
  _i56.FileSystemEntity get absolute => (super.noSuchMethod(
        Invocation.getter(#absolute),
        returnValue: _FakeFileSystemEntity_122(
          this,
          Invocation.getter(#absolute),
        ),
      ) as _i56.FileSystemEntity);
  @override
  _i56.Directory get parent => (super.noSuchMethod(
        Invocation.getter(#parent),
        returnValue: _FakeDirectory_100(
          this,
          Invocation.getter(#parent),
        ),
      ) as _i56.Directory);
  @override
  _i2.Future<bool> exists() => (super.noSuchMethod(
        Invocation.method(
          #exists,
          [],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  bool existsSync() => (super.noSuchMethod(
        Invocation.method(
          #existsSync,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i2.Future<_i56.FileSystemEntity> rename(String? newPath) =>
      (super.noSuchMethod(
        Invocation.method(
          #rename,
          [newPath],
        ),
        returnValue:
            _i2.Future<_i56.FileSystemEntity>.value(_FakeFileSystemEntity_122(
          this,
          Invocation.method(
            #rename,
            [newPath],
          ),
        )),
      ) as _i2.Future<_i56.FileSystemEntity>);
  @override
  _i56.FileSystemEntity renameSync(String? newPath) => (super.noSuchMethod(
        Invocation.method(
          #renameSync,
          [newPath],
        ),
        returnValue: _FakeFileSystemEntity_122(
          this,
          Invocation.method(
            #renameSync,
            [newPath],
          ),
        ),
      ) as _i56.FileSystemEntity);
  @override
  _i2.Future<String> resolveSymbolicLinks() => (super.noSuchMethod(
        Invocation.method(
          #resolveSymbolicLinks,
          [],
        ),
        returnValue: _i2.Future<String>.value(''),
      ) as _i2.Future<String>);
  @override
  String resolveSymbolicLinksSync() => (super.noSuchMethod(
        Invocation.method(
          #resolveSymbolicLinksSync,
          [],
        ),
        returnValue: '',
      ) as String);
  @override
  _i2.Future<_i56.FileStat> stat() => (super.noSuchMethod(
        Invocation.method(
          #stat,
          [],
        ),
        returnValue: _i2.Future<_i56.FileStat>.value(_FakeFileStat_121(
          this,
          Invocation.method(
            #stat,
            [],
          ),
        )),
      ) as _i2.Future<_i56.FileStat>);
  @override
  _i56.FileStat statSync() => (super.noSuchMethod(
        Invocation.method(
          #statSync,
          [],
        ),
        returnValue: _FakeFileStat_121(
          this,
          Invocation.method(
            #statSync,
            [],
          ),
        ),
      ) as _i56.FileStat);
  @override
  _i2.Future<_i56.FileSystemEntity> delete({bool? recursive = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {#recursive: recursive},
        ),
        returnValue:
            _i2.Future<_i56.FileSystemEntity>.value(_FakeFileSystemEntity_122(
          this,
          Invocation.method(
            #delete,
            [],
            {#recursive: recursive},
          ),
        )),
      ) as _i2.Future<_i56.FileSystemEntity>);
  @override
  void deleteSync({bool? recursive = false}) => super.noSuchMethod(
        Invocation.method(
          #deleteSync,
          [],
          {#recursive: recursive},
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.Stream<_i56.FileSystemEvent> watch({
    int? events = 15,
    bool? recursive = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #watch,
          [],
          {
            #events: events,
            #recursive: recursive,
          },
        ),
        returnValue: _i2.Stream<_i56.FileSystemEvent>.empty(),
      ) as _i2.Stream<_i56.FileSystemEvent>);
}

/// A class which mocks [LegacyImporter].
///
/// See the documentation for Mockito's code generation for more information.
class MockLegacyImporter extends _i1.Mock implements _i81.LegacyImporter {
  MockLegacyImporter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<void> start() => (super.noSuchMethod(
        Invocation.method(
          #start,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
}

/// A class which mocks [LogInResult].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogInResult extends _i1.Mock implements _i63.LogInResult {
  MockLogInResult() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get created => (super.noSuchMethod(
        Invocation.getter(#created),
        returnValue: false,
      ) as bool);
  @override
  _i63.CustomerInfo get customerInfo => (super.noSuchMethod(
        Invocation.getter(#customerInfo),
        returnValue: _FakeCustomerInfo_111(
          this,
          Invocation.getter(#customerInfo),
        ),
      ) as _i63.CustomerInfo);
}

/// A class which mocks [MethodChannel].
///
/// See the documentation for Mockito's code generation for more information.
class MockMethodChannel extends _i1.Mock implements _i64.MethodChannel {
  MockMethodChannel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: '',
      ) as String);
  @override
  _i64.MethodCodec get codec => (super.noSuchMethod(
        Invocation.getter(#codec),
        returnValue: _FakeMethodCodec_125(
          this,
          Invocation.getter(#codec),
        ),
      ) as _i64.MethodCodec);
  @override
  _i64.BinaryMessenger get binaryMessenger => (super.noSuchMethod(
        Invocation.getter(#binaryMessenger),
        returnValue: _FakeBinaryMessenger_126(
          this,
          Invocation.getter(#binaryMessenger),
        ),
      ) as _i64.BinaryMessenger);
  @override
  _i2.Future<T?> invokeMethod<T>(
    String? method, [
    dynamic arguments,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #invokeMethod,
          [
            method,
            arguments,
          ],
        ),
        returnValue: _i2.Future<T?>.value(),
      ) as _i2.Future<T?>);
  @override
  _i2.Future<List<T>?> invokeListMethod<T>(
    String? method, [
    dynamic arguments,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #invokeListMethod,
          [
            method,
            arguments,
          ],
        ),
        returnValue: _i2.Future<List<T>?>.value(),
      ) as _i2.Future<List<T>?>);
  @override
  _i2.Future<Map<K, V>?> invokeMapMethod<K, V>(
    String? method, [
    dynamic arguments,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #invokeMapMethod,
          [
            method,
            arguments,
          ],
        ),
        returnValue: _i2.Future<Map<K, V>?>.value(),
      ) as _i2.Future<Map<K, V>?>);
  @override
  void setMethodCallHandler(
          _i2.Future<dynamic> Function(_i64.MethodCall)? handler) =>
      super.noSuchMethod(
        Invocation.method(
          #setMethodCallHandler,
          [handler],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [NameValidator].
///
/// See the documentation for Mockito's code generation for more information.
class MockNameValidator extends _i1.Mock implements _i82.NameValidator {
  MockNameValidator() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i82.ValidationCallback? run(
    _i58.BuildContext? context,
    String? newName,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #run,
        [
          context,
          newName,
        ],
      )) as _i82.ValidationCallback?);
}

/// A class which mocks [NavigatorObserver].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigatorObserver extends _i1.Mock implements _i58.NavigatorObserver {
  MockNavigatorObserver() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void didPush(
    _i58.Route<dynamic>? route,
    _i58.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didPush,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void didPop(
    _i58.Route<dynamic>? route,
    _i58.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didPop,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void didRemove(
    _i58.Route<dynamic>? route,
    _i58.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didRemove,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void didReplace({
    _i58.Route<dynamic>? newRoute,
    _i58.Route<dynamic>? oldRoute,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #didReplace,
          [],
          {
            #newRoute: newRoute,
            #oldRoute: oldRoute,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void didStartUserGesture(
    _i58.Route<dynamic>? route,
    _i58.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didStartUserGesture,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void didStopUserGesture() => super.noSuchMethod(
        Invocation.method(
          #didStopUserGesture,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Offering].
///
/// See the documentation for Mockito's code generation for more information.
class MockOffering extends _i1.Mock implements _i63.Offering {
  MockOffering() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get identifier => (super.noSuchMethod(
        Invocation.getter(#identifier),
        returnValue: '',
      ) as String);
  @override
  String get serverDescription => (super.noSuchMethod(
        Invocation.getter(#serverDescription),
        returnValue: '',
      ) as String);
  @override
  Map<String, Object> get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: <String, Object>{},
      ) as Map<String, Object>);
  @override
  List<_i63.Package> get availablePackages => (super.noSuchMethod(
        Invocation.getter(#availablePackages),
        returnValue: <_i63.Package>[],
      ) as List<_i63.Package>);
  @override
  _i63.$OfferingCopyWith<_i63.Offering> get copyWith => (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$OfferingCopyWith_127<_i63.Offering>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i63.$OfferingCopyWith<_i63.Offering>);
  @override
  _i63.Package? getPackage(String? identifier) =>
      (super.noSuchMethod(Invocation.method(
        #getPackage,
        [identifier],
      )) as _i63.Package?);
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [Offerings].
///
/// See the documentation for Mockito's code generation for more information.
class MockOfferings extends _i1.Mock implements _i63.Offerings {
  MockOfferings() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, _i63.Offering> get all => (super.noSuchMethod(
        Invocation.getter(#all),
        returnValue: <String, _i63.Offering>{},
      ) as Map<String, _i63.Offering>);
  @override
  _i63.$OfferingsCopyWith<_i63.Offerings> get copyWith => (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$OfferingsCopyWith_128<_i63.Offerings>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i63.$OfferingsCopyWith<_i63.Offerings>);
  @override
  _i63.Offering? getOffering(String? identifier) =>
      (super.noSuchMethod(Invocation.method(
        #getOffering,
        [identifier],
      )) as _i63.Offering?);
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [Package].
///
/// See the documentation for Mockito's code generation for more information.
class MockPackage extends _i1.Mock implements _i63.Package {
  MockPackage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get identifier => (super.noSuchMethod(
        Invocation.getter(#identifier),
        returnValue: '',
      ) as String);
  @override
  _i63.PackageType get packageType => (super.noSuchMethod(
        Invocation.getter(#packageType),
        returnValue: _i63.PackageType.unknown,
      ) as _i63.PackageType);
  @override
  _i63.StoreProduct get storeProduct => (super.noSuchMethod(
        Invocation.getter(#storeProduct),
        returnValue: _FakeStoreProduct_129(
          this,
          Invocation.getter(#storeProduct),
        ),
      ) as _i63.StoreProduct);
  @override
  String get offeringIdentifier => (super.noSuchMethod(
        Invocation.getter(#offeringIdentifier),
        returnValue: '',
      ) as String);
  @override
  _i63.$PackageCopyWith<_i63.Package> get copyWith => (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$PackageCopyWith_130<_i63.Package>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i63.$PackageCopyWith<_i63.Package>);
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [PackageInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockPackageInfo extends _i1.Mock implements _i62.PackageInfo {
  MockPackageInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get appName => (super.noSuchMethod(
        Invocation.getter(#appName),
        returnValue: '',
      ) as String);
  @override
  String get packageName => (super.noSuchMethod(
        Invocation.getter(#packageName),
        returnValue: '',
      ) as String);
  @override
  String get version => (super.noSuchMethod(
        Invocation.getter(#version),
        returnValue: '',
      ) as String);
  @override
  String get buildNumber => (super.noSuchMethod(
        Invocation.getter(#buildNumber),
        returnValue: '',
      ) as String);
  @override
  String get buildSignature => (super.noSuchMethod(
        Invocation.getter(#buildSignature),
        returnValue: '',
      ) as String);
}

/// A class which mocks [StoreProduct].
///
/// See the documentation for Mockito's code generation for more information.
class MockStoreProduct extends _i1.Mock implements _i63.StoreProduct {
  MockStoreProduct() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get identifier => (super.noSuchMethod(
        Invocation.getter(#identifier),
        returnValue: '',
      ) as String);
  @override
  String get description => (super.noSuchMethod(
        Invocation.getter(#description),
        returnValue: '',
      ) as String);
  @override
  String get title => (super.noSuchMethod(
        Invocation.getter(#title),
        returnValue: '',
      ) as String);
  @override
  double get price => (super.noSuchMethod(
        Invocation.getter(#price),
        returnValue: 0.0,
      ) as double);
  @override
  String get priceString => (super.noSuchMethod(
        Invocation.getter(#priceString),
        returnValue: '',
      ) as String);
  @override
  String get currencyCode => (super.noSuchMethod(
        Invocation.getter(#currencyCode),
        returnValue: '',
      ) as String);
  @override
  _i63.$StoreProductCopyWith<_i63.StoreProduct> get copyWith =>
      (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$StoreProductCopyWith_131<_i63.StoreProduct>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i63.$StoreProductCopyWith<_i63.StoreProduct>);
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [Symbol].
///
/// See the documentation for Mockito's code generation for more information.
class MockSymbol extends _i1.Mock implements _i60.Symbol {
  MockSymbol() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i60.SymbolOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeSymbolOptions_132(
          this,
          Invocation.getter(#options),
        ),
      ) as _i60.SymbolOptions);
  @override
  set options(_i60.SymbolOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: '',
      ) as String);
  @override
  Map<String, dynamic> toGeoJson() => (super.noSuchMethod(
        Invocation.method(
          #toGeoJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  void translate(_i60.LatLng? delta) => super.noSuchMethod(
        Invocation.method(
          #translate,
          [delta],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CustomerInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomerInfo extends _i1.Mock implements _i63.CustomerInfo {
  MockCustomerInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i63.EntitlementInfos get entitlements => (super.noSuchMethod(
        Invocation.getter(#entitlements),
        returnValue: _FakeEntitlementInfos_133(
          this,
          Invocation.getter(#entitlements),
        ),
      ) as _i63.EntitlementInfos);
  @override
  Map<String, String> get allPurchaseDates => (super.noSuchMethod(
        Invocation.getter(#allPurchaseDates),
        returnValue: <String, String>{},
      ) as Map<String, String>);
  @override
  List<String> get activeSubscriptions => (super.noSuchMethod(
        Invocation.getter(#activeSubscriptions),
        returnValue: <String>[],
      ) as List<String>);
  @override
  List<String> get allPurchasedProductIdentifiers => (super.noSuchMethod(
        Invocation.getter(#allPurchasedProductIdentifiers),
        returnValue: <String>[],
      ) as List<String>);
  @override
  List<_i63.StoreTransaction> get nonSubscriptionTransactions =>
      (super.noSuchMethod(
        Invocation.getter(#nonSubscriptionTransactions),
        returnValue: <_i63.StoreTransaction>[],
      ) as List<_i63.StoreTransaction>);
  @override
  String get firstSeen => (super.noSuchMethod(
        Invocation.getter(#firstSeen),
        returnValue: '',
      ) as String);
  @override
  String get originalAppUserId => (super.noSuchMethod(
        Invocation.getter(#originalAppUserId),
        returnValue: '',
      ) as String);
  @override
  Map<String, String?> get allExpirationDates => (super.noSuchMethod(
        Invocation.getter(#allExpirationDates),
        returnValue: <String, String?>{},
      ) as Map<String, String?>);
  @override
  String get requestDate => (super.noSuchMethod(
        Invocation.getter(#requestDate),
        returnValue: '',
      ) as String);
  @override
  _i63.$CustomerInfoCopyWith<_i63.CustomerInfo> get copyWith =>
      (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$CustomerInfoCopyWith_134<_i63.CustomerInfo>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i63.$CustomerInfoCopyWith<_i63.CustomerInfo>);
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [QuantityPickerInputDelegate].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockQuantityPickerInputDelegate<PickerType extends _i69.GeneratedMessage,
        InputType> extends _i1.Mock
    implements _i83.QuantityPickerInputDelegate<PickerType, InputType> {
  MockQuantityPickerInputDelegate() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i67.SetInputController<InputType> get controller => (super.noSuchMethod(
        Invocation.getter(#controller),
        returnValue: _FakeSetInputController_135<InputType>(
          this,
          Invocation.getter(#controller),
        ),
      ) as _i67.SetInputController<InputType>);
  @override
  Set<PickerType> get pickerTypeInitialValues => (super.noSuchMethod(
        Invocation.getter(#pickerTypeInitialValues),
        returnValue: <PickerType>{},
      ) as Set<PickerType>);
  @override
  _i58.Widget pickerPage(
          _i84.ManageableListPagePickerSettings<PickerType>? pickerSettings) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickerPage,
          [pickerSettings],
        ),
        returnValue: _FakeWidget_136(
          this,
          Invocation.method(
            #pickerPage,
            [pickerSettings],
          ),
        ),
      ) as _i58.Widget);
  @override
  bool inputTypeEntityExists(InputType? item) => (super.noSuchMethod(
        Invocation.method(
          #inputTypeEntityExists,
          [item],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool inputTypeHasValue(InputType? item) => (super.noSuchMethod(
        Invocation.method(
          #inputTypeHasValue,
          [item],
        ),
        returnValue: false,
      ) as bool);
  @override
  int? inputTypeValue(InputType? item) => (super.noSuchMethod(Invocation.method(
        #inputTypeValue,
        [item],
      )) as int?);
  @override
  String? inputTypeEntityDisplayName(
    _i58.BuildContext? context,
    InputType? item,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #inputTypeEntityDisplayName,
        [
          context,
          item,
        ],
      )) as String?);
  @override
  InputType newInputItem(PickerType? pickerItem) => (super.noSuchMethod(
        Invocation.method(
          #newInputItem,
          [pickerItem],
        ),
        returnValue: _i85.newInputItemShim(pickerItem),
      ) as InputType);
  @override
  InputType? existingInputItem(PickerType? pickerItem) =>
      (super.noSuchMethod(Invocation.method(
        #existingInputItem,
        [pickerItem],
      )) as InputType?);
  @override
  void updateValue(
    InputType? item,
    int? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #updateValue,
          [
            item,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void clearValue(InputType? item) => super.noSuchMethod(
        Invocation.method(
          #clearValue,
          [item],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Response].
///
/// See the documentation for Mockito's code generation for more information.
class MockResponse extends _i1.Mock implements _i53.Response {
  MockResponse() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i73.Uint8List get bodyBytes => (super.noSuchMethod(
        Invocation.getter(#bodyBytes),
        returnValue: _i73.Uint8List(0),
      ) as _i73.Uint8List);
  @override
  String get body => (super.noSuchMethod(
        Invocation.getter(#body),
        returnValue: '',
      ) as String);
  @override
  int get statusCode => (super.noSuchMethod(
        Invocation.getter(#statusCode),
        returnValue: 0,
      ) as int);
  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
      ) as Map<String, String>);
  @override
  bool get isRedirect => (super.noSuchMethod(
        Invocation.getter(#isRedirect),
        returnValue: false,
      ) as bool);
  @override
  bool get persistentConnection => (super.noSuchMethod(
        Invocation.getter(#persistentConnection),
        returnValue: false,
      ) as bool);
}

/// A class which mocks [StreamSubscription].
///
/// See the documentation for Mockito's code generation for more information.
class MockStreamSubscription<T> extends _i1.Mock
    implements _i2.StreamSubscription<T> {
  MockStreamSubscription() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isPaused => (super.noSuchMethod(
        Invocation.getter(#isPaused),
        returnValue: false,
      ) as bool);
  @override
  _i2.Future<void> cancel() => (super.noSuchMethod(
        Invocation.method(
          #cancel,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  void onData(void Function(T)? handleData) => super.noSuchMethod(
        Invocation.method(
          #onData,
          [handleData],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(Function? handleError) => super.noSuchMethod(
        Invocation.method(
          #onError,
          [handleError],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onDone(void Function()? handleDone) => super.noSuchMethod(
        Invocation.method(
          #onDone,
          [handleDone],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void pause([_i2.Future<void>? resumeSignal]) => super.noSuchMethod(
        Invocation.method(
          #pause,
          [resumeSignal],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void resume() => super.noSuchMethod(
        Invocation.method(
          #resume,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.Future<E> asFuture<E>([E? futureValue]) => (super.noSuchMethod(
        Invocation.method(
          #asFuture,
          [futureValue],
        ),
        returnValue: _FakeFuture_83<E>(
          this,
          Invocation.method(
            #asFuture,
            [futureValue],
          ),
        ),
      ) as _i2.Future<E>);
}
